<rng:grammar xmlns:rng="http://relaxng.org/ns/structure/1.0" xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" ns="http://schemas.microsoft.com/developer/msbuild/2003" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">

    <!-- =================== INCLUDE COMMON SCHEMA =========================== -->
    <rng:include href="Microsoft.Build.Core.rnc"/>

    <!-- ======================== ITEMS =====================================-->
    <!-- Possible Types include SimpleItemType (no meta-data subelements), GenericItemType (any meta-data), or something more specific.-->
    <rng:start combine="choice">
<rng:ref name="Reference"/>
</rng:start>
<rng:define name="Reference">
<rng:element name="Reference">
        <a:documentation>
            <!-- _locID_text="Reference" _locComment="" -->Reference to an assembly
        </a:documentation>


                <rng:ref name="SimpleItemType"/>

                        <rng:choice>
                            <rng:element name="HintPath">
                                <a:documentation>
                                    <!-- _locID_text="Reference_HintPath" _locComment="" -->Relative or absolute path to the assembly (optional)
                                </a:documentation>
                            </rng:element>
                            <rng:element name="Name">
                                <a:documentation>
                                    <!-- _locID_text="Reference_Name" _locComment="" -->Friendly display name (optional)
                                </a:documentation>
                            </rng:element>
                            <rng:element name="FusionName">
                                <a:documentation>
                                    <!-- _locID_text="Reference_FusionName" _locComment="" -->Fusion name of the assembly (optional)
                                </a:documentation>
                            </rng:element>
                            <rng:element name="SpecificVersion">
<rng:ref name="boolean"/>
                                <a:documentation>
                                    <!-- _locID_text="Reference_SpecificVersion" _locComment="" -->Whether only the version in the fusion name should be referenced (optional, boolean)
                                </a:documentation>
                            </rng:element>
                            <rng:element name="Aliases">
                                <a:documentation>
                                    <!-- _locID_text="Reference_Aliases" _locComment="" -->Aliases for the reference (optional)
                                </a:documentation>
                            </rng:element>
                            <rng:element name="Private">
<rng:ref name="boolean"/>
                                <a:documentation>
                                    <!-- _locID_text="Reference_Private" _locComment="" -->Whether the reference should be copied to the output folder (optional, boolean)
                                </a:documentation>
                            </rng:element>
                          <rng:element name="EmbedInteropTypes">
<rng:ref name="boolean"/>
                            <a:documentation>
                              <!-- _locID_text="Reference_EmbedInteropTypes" _locComment="" -->Whether the types in this reference need to embedded into the target assembly - interop assemblies only (optional, boolean)
                            </a:documentation>
                          </rng:element>
                          <rng:element name="RequiredTargetFramework">
                                <a:documentation>
                                    <!-- _locID_text="Reference_RequiredTargetFramework" _locComment="" -->The minimum required target framework version in order to use this assembly as a reference
                                </a:documentation>
                            </rng:element>
                        </rng:choice>

                    <!-- redefine Include just to give a specific description -->
                    <rng:optional>
<rng:attribute name="Include">
<rng:data type="string">
                        <a:documentation>
                            <!-- _locID_text="Reference_Include" _locComment="" -->Assembly name or filename
                        </a:documentation>
                    </rng:data>
</rng:attribute>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="SDKReference"/>
</rng:start>
<rng:define name="SDKReference">
<rng:element name="SDKReference">
        <a:documentation>
            <!-- _locID_text="SDKReference" _locComment="" -->Reference to an extension SDK
        </a:documentation>


                <rng:ref name="SimpleItemType"/>

                        <rng:choice>
                            <rng:element name="Name">
                                <a:documentation>
                                    <!-- _locID_text="Reference_Name" _locComment="" -->Friendly display name (optional)
                                </a:documentation>
                            </rng:element>
                        </rng:choice>

                    <!-- redefine Include just to give a specific description -->
                    <rng:optional>
<rng:attribute name="Include">
<rng:data type="string">
                        <a:documentation>
                            <!-- _locID_text="Reference_Include" _locComment="" -->Name and version moniker representing an extension SDK
                        </a:documentation>
                    </rng:data>
</rng:attribute>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="COMReference"/>
</rng:start>
<rng:define name="COMReference">
<rng:element name="COMReference">
        <a:documentation>
            <!-- _locID_text="COMReference" _locComment="" -->Reference to a COM component
        </a:documentation>


                <rng:ref name="SimpleItemType"/>

                        <rng:choice>
                            <rng:element name="Name">
                                <a:documentation>
                                    <!-- _locID_text="COMReference_Name" _locComment="" -->Friendly display name (optional)
                                </a:documentation>
                            </rng:element>
                            <rng:element name="Guid">
                                <a:documentation>
                                    <!-- _locID_text="COMReference_Guid" _locComment="" -->GUID in the form {00000000-0000-0000-0000-000000000000}
                                </a:documentation>
                            </rng:element>
                            <rng:element name="VersionMajor">
                                <a:documentation>
                                    <!-- _locID_text="COMReference_VersionMajor" _locComment="" -->Major part of the version number
                                </a:documentation>
                            </rng:element>
                            <rng:element name="VersionMinor">
                                <a:documentation>
                                    <!-- _locID_text="COMReference_VersionMinor" _locComment="" -->Minor part of the version number
                                </a:documentation>
                            </rng:element>
                            <rng:element name="Lcid">
                                <a:documentation>
                                    <!-- _locID_text="COMReference_Lcid" _locComment="" -->Locale ID
                                </a:documentation>
                            </rng:element>
                            <rng:element name="WrapperTool">
                                <a:documentation>
                                    <!-- _locID_text="COMReference_WrapperTool" _locComment="" -->Wrapper tool, such as tlbimp
                                </a:documentation>
                            </rng:element>
                            <rng:element name="Isolated">
<rng:ref name="boolean"/>
                                <a:documentation>
                                    <!-- _locID_text="COMReference_Isolated" _locComment="" -->Is it isolated (boolean)
                                </a:documentation>
                            </rng:element>
                          <rng:element name="EmbedInteropTypes">
<rng:ref name="boolean"/>
                            <a:documentation>
                              <!-- _locID_text="COMReference_EmbedInteropTypes" _locComment="" -->Whether the types in this reference need to embedded into the target assembly - interop assemblies only (optional, boolean)
                            </a:documentation>
                          </rng:element>
                        </rng:choice>

                    <!-- redefine Include just to give a specific description -->
                    <rng:optional>
<rng:attribute name="Include">
<rng:data type="string">
                        <a:documentation>
                            <!-- _locID_text="COMReference_Include" _locComment="" -->COM component name
                        </a:documentation>
                    </rng:data>
</rng:attribute>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="COMFileReference"/>
</rng:start>
<rng:define name="COMFileReference">
<rng:element name="COMFileReference">


                <rng:ref name="SimpleItemType"/>

                        <rng:choice>
                            <rng:element name="WrapperTool"/>
                        </rng:choice>




  </rng:element>
</rng:define>
  <rng:start combine="choice">
<rng:ref name="PackageReference"/>
</rng:start>
<rng:define name="PackageReference">
<rng:element name="PackageReference">
    <a:documentation>

        <!-- _locID_text="PackageReference" _locComment="" -->Reference to a package

    </a:documentation>


        <rng:ref name="SimpleItemType"/>

            <rng:choice>
              <rng:element name="IncludeAssets">
                <a:documentation>

                    <!-- _locID_text="PackageReference_IncludeAssets" _locComment="" -->Assets to include from this reference

                </a:documentation>
              </rng:element>
              <rng:element name="ExcludeAssets">
                <a:documentation>

                    <!-- _locID_text="PackageReference_ExcludeAssets" _locComment="" -->Assets to exclude from this reference

                </a:documentation>
              </rng:element>
              <rng:element name="PrivateAssets">
                <a:documentation>

                    <!-- _locID_text="PackageReference_PrivateAssets" _locComment="" -->Assets that are private in this reference

                </a:documentation>
              </rng:element>
            </rng:choice>

          <rng:optional>
<rng:attribute name="Include">
<rng:data type="string">
            <a:documentation>

                <!-- _locID_text="PackageReference_Include" _locComment="" -->Name of the package

            </a:documentation>
          </rng:data>
</rng:attribute>
</rng:optional>
          <rng:optional>
<rng:attribute name="Version">
<rng:data type="string">
            <a:documentation>

                <!-- _locID_text="PackageReference_Version" _locComment="" -->Version of dependency

            </a:documentation>
          </rng:data>
</rng:attribute>
</rng:optional>
          <rng:optional>
<rng:attribute name="IncludeAssets">
<rng:data type="string">
            <a:documentation>

                <!-- _locID_text="PackageReference_Attribute_IncludeAssets" _locComment="" -->Assets to include from this reference

            </a:documentation>
          </rng:data>
</rng:attribute>
</rng:optional>
          <rng:optional>
<rng:attribute name="ExcludeAssets">
<rng:data type="string">
            <a:documentation>

                <!-- _locID_text="PackageReference_Attribute_ExcludeAssets" _locComment="" -->Assets to exclude from this reference

            </a:documentation>
          </rng:data>
</rng:attribute>
</rng:optional>
          <rng:optional>
<rng:attribute name="PrivateAssets">
<rng:data type="string">
            <a:documentation>

                <!-- _locID_text="PackageReference_Attribute_PrivateAssets" _locComment="" -->Assets that are private in this reference

            </a:documentation>
          </rng:data>
</rng:attribute>
</rng:optional>



  </rng:element>
</rng:define>
  <rng:start combine="choice">
<rng:ref name="FrameworkReference"/>
</rng:start>
<rng:define name="FrameworkReference">
<rng:element name="FrameworkReference">
    <a:documentation>

        <!-- _locID_text="FrameworkReference" _locComment="" -->Reference to a shared framework.

    </a:documentation>


        <rng:ref name="SimpleItemType"/>

            <rng:choice>
              <rng:element name="IsTrimmable">
                <a:documentation>

                    <!-- _locID_text="FrameworkReference_IsTrimmable" _locComment="" -->Controls whether the runtime assets of this shared framework can be trimmed by the IL Linker (if PublishTrimmed is true).

                </a:documentation>
              </rng:element>
              <rng:element name="TargetLatestRuntimePatch">
                <a:documentation>

                    <!-- _locID_text="FrameworkReference_TargetLatestRuntimePatch" _locComment="" -->Controls whether the app will target the latest patch of the runtime.  Defaults to true for self-contained apps, false otherwise.

                </a:documentation>
              </rng:element>
            </rng:choice>

          <rng:optional>
<rng:attribute name="IsTrimmable">
<rng:data type="string">
            <a:documentation>

                <!-- _locID_text="FrameworkReference_Attribute_IsTrimmable" _locComment="" -->Controls whether the runtime assets of this shared framework can be trimmed by the IL Linker (if PublishTrimmed is true).

            </a:documentation>
          </rng:data>
</rng:attribute>
</rng:optional>
          <rng:optional>
<rng:attribute name="TargetLatestRuntimePatch">
<rng:data type="string">
            <a:documentation>

                <!-- _locID_text="FrameworkReference_Attribute_TargetLatestRuntimePatch" _locComment="" -->Controls whether the app will target the latest patch of the runtime.  Defaults to true for self-contained apps, false otherwise.

            </a:documentation>
          </rng:data>
</rng:attribute>
</rng:optional>



  </rng:element>
</rng:define>
  <rng:start combine="choice">
<rng:ref name="DotNetCliToolReference"/>
</rng:start>
<rng:define name="DotNetCliToolReference">
<rng:element name="DotNetCliToolReference">
    <a:documentation>

        <!-- _locID_text="DotNetCliToolReference" _locComment="" -->The CLI tool that the user wants restored in the context of the project

    </a:documentation>


        <rng:ref name="SimpleItemType"/>

            <rng:choice>
              <rng:element name="IncludeAssets">
                <a:documentation>

                    <!-- _locID_text="DotNetCliToolReference_IncludeAssets" _locComment="" -->Assets to include from this reference

                </a:documentation>
              </rng:element>
              <rng:element name="ExcludeAssets">
                <a:documentation>

                    <!-- _locID_text="DotNetCliToolReference_ExcludeAssets" _locComment="" -->Assets to exclude from this reference

                </a:documentation>
              </rng:element>
              <rng:element name="PrivateAssets">
                <a:documentation>

                    <!-- _locID_text="DotNetCliToolReference_PrivateAssets" _locComment="" -->Assets that are private in this reference

                </a:documentation>
              </rng:element>
            </rng:choice>

          <rng:optional>
<rng:attribute name="Include">
<rng:data type="string">
            <a:documentation>

                <!-- _locID_text="DotNetCliToolReference_Include" _locComment="" -->Package name of the tool. This may differ from its associated reference package name.

            </a:documentation>
          </rng:data>
</rng:attribute>
</rng:optional>
          <rng:optional>
<rng:attribute name="Version">
<rng:data type="string">
            <a:documentation>

                <!-- _locID_text="DotNetCliToolReference_Version" _locComment="" -->Version of dependency

            </a:documentation>
          </rng:data>
</rng:attribute>
</rng:optional>



  </rng:element>
</rng:define>
  <rng:start combine="choice">
<rng:ref name="Xdcmake"/>
</rng:start>
<rng:define name="Xdcmake">
<rng:element name="Xdcmake">


        <rng:ref name="SimpleItemType"/>

            <rng:choice>
              <rng:element name="SuppressStartupBanner"/>
              <rng:element name="AdditionalDocumentFile"/>
              <rng:element name="DocumentLibraryDependencies"/>
            </rng:choice>




  </rng:element>
</rng:define>
  <rng:start combine="choice">
<rng:ref name="Bscmake"/>
</rng:start>
<rng:define name="Bscmake">
<rng:element name="Bscmake">


        <rng:ref name="SimpleItemType"/>

            <rng:choice>
              <rng:element name="PreserveSBR"/>
              <rng:element name="AdditionalOptions"/>
              <rng:element name="SuppressStartupBanner"/>
              <rng:element name="OutputFile"/>
            </rng:choice>




  </rng:element>
</rng:define>
  <rng:start combine="choice">
<rng:ref name="ClCompile"/>
</rng:start>
<rng:define name="ClCompile">
<rng:element name="ClCompile">


        <rng:ref name="SimpleItemType"/>
          <rng:zeroOrMore>
<rng:choice>
            <rng:optional>
<rng:element name="PrecompiledHeader">



                    <rng:attribute name="Condition"/>



            </rng:element>
</rng:optional>
            <rng:element name="AdditionalIncludeDirectories"/>
            <rng:element name="AdditionalUsingDirectories"/>
            <rng:element name="CompileAsManaged">



                    <rng:attribute name="Condition"/>



            </rng:element>
            <rng:element name="ErrorReporting"/>
            <rng:element name="WarningLevel"/>
            <rng:element name="MinimalRebuild"/>
            <rng:element name="DebugInformationFormat"/>
            <rng:element name="PreprocessorDefinitions"/>
            <rng:element name="Optimization"/>
            <rng:element name="BasicRuntimeChecks"/>
            <rng:element name="RuntimeLibrary"/>
            <rng:element name="FunctionLevelLinking"/>
            <rng:element name="FloatingPointModel "/>
            <rng:element name="IntrinsicFunctions"/>
            <rng:element name="PrecompiledHeaderFile"/>
            <rng:element name="MultiProcessorCompilation"/>
            <rng:element name="UseUnicodeForAssemblerListing"/>
            <rng:element name="UndefinePreprocessorDefinitions"/>
            <rng:element name="StringPooling"/>
            <rng:element name="BrowseInformation"/>
            <rng:element name="FloatingPointExceptions"/>
            <rng:element name="CreateHotpatchableImage"/>
            <rng:element name="RuntimeTypeInfo"/>
            <rng:element name="OpenMPSupport"/>
            <rng:element name="CallingConvention"/>
            <rng:element name="DisableSpecificWarnings"/>
            <rng:element name="ForcedIncludeFiles"/>
            <rng:element name="ForcedUsingFiles"/>
            <rng:element name="ShowIncludes"/>
            <rng:element name="UseFullPaths"/>
            <rng:element name="OmitDefaultLibName"/>
           <rng:element name="TreatSpecificWarningsAsErrors"/>
         </rng:choice>
</rng:zeroOrMore>



   </rng:element>
</rng:define>
  <rng:start combine="choice">
<rng:ref name="ClInclude"/>
</rng:start>
<rng:define name="ClInclude">
<rng:element name="ClInclude">


        <rng:ref name="SimpleItemType"/>
          <rng:zeroOrMore>
<rng:choice>
            <rng:optional>
<rng:element name="AdditionalIncludeDirectories"/>
</rng:optional>
          </rng:choice>
</rng:zeroOrMore>



  </rng:element>
</rng:define>
  <rng:start combine="choice">
<rng:ref name="Midl"/>
</rng:start>
<rng:define name="Midl">
<rng:element name="Midl">


        <rng:ref name="SimpleItemType"/>
          <rng:zeroOrMore>
<rng:choice>
            <rng:element name="MkTypLibCompatible"/>
            <rng:element name="ValidateAllParameters">
<rng:ref name="boolean"/>
</rng:element>
            <rng:element name="PreprocessorDefinitions"/>
            <rng:element name="TypeLibraryName"/>
            <rng:element name="ErrorCheckRefPointers"/>
            <rng:element name="ErrorCheckStubData"/>
            <rng:element name="ErrorCheckBounds"/>
            <rng:element name="HeaderFileName"/>
            <rng:element name="ErrorCheckEnumRange"/>
            <rng:element name="ErrorCheckAllocations"/>
            <rng:element name="WarnAsError"/>
            <rng:element name="GenerateTypeLibrary"/>
            <rng:element name="AdditionalIncludeDirectories"/>
            <rng:element name="IgnoreStandardIncludePath"/>
            <rng:element name="SuppressStartupBanner"/>
            <rng:element name="DefaultCharType"/>
            <rng:element name="TargetEnvironment"/>
            <rng:element name="GenerateStublessProxies"/>
            <rng:element name="SuppressCompilerWarnings"/>
            <rng:element name="ApplicationConfigurationMode"/>
            <rng:element name="LocaleID"/>
            <rng:element name="OutputDirectory"/>
            <rng:element name="DllDataFileName"/>
            <rng:element name="InterfaceIdentifierFileName"/>
            <rng:element name="ProxyFileName"/>
            <rng:element name="GenerateClientFiles"/>
            <rng:element name="GenerateServerFiles"/>
            <rng:element name="ClientStubFile"/>
            <rng:element name="ServerStubFile"/>
            <rng:element name="TypeLibFormat"/>
            <rng:element name="CPreprocessOptions"/>
            <rng:element name="UndefinePreprocessorDefinitions"/>
            <rng:element name="EnableErrorChecks"/>
            <rng:element name="RedirectOutputAndErrors"/>
            <rng:element name="AdditionalOptions"/>
            <rng:element name="StructMemberAlignment"/>
          </rng:choice>
</rng:zeroOrMore>



  </rng:element>
</rng:define>
  <rng:start combine="choice">
<rng:ref name="ResourceCompile"/>
</rng:start>
<rng:define name="ResourceCompile">
<rng:element name="ResourceCompile">


        <rng:ref name="SimpleItemType"/>
          <rng:zeroOrMore>
<rng:choice>
            <rng:element name="Culture"/>
            <rng:element name="PreprocessorDefinitions"/>
            <rng:element name="AdditionalIncludeDirectories"/>
          </rng:choice>
</rng:zeroOrMore>



  </rng:element>
</rng:define>
  <rng:start combine="choice">
<rng:ref name="PreLinkEvent"/>
</rng:start>
<rng:define name="PreLinkEvent">
<rng:element name="PreLinkEvent">


        <rng:ref name="SimpleItemType"/>
          <rng:zeroOrMore>
<rng:choice>
            <rng:element name="Message"/>
            <rng:element name="Command"/>
          </rng:choice>
</rng:zeroOrMore>



  </rng:element>
</rng:define>
  <rng:start combine="choice">
<rng:ref name="CustomBuildStep"/>
</rng:start>
<rng:define name="CustomBuildStep">
<rng:element name="CustomBuildStep">


        <rng:ref name="SimpleItemType"/>
          <rng:zeroOrMore>
<rng:choice>
            <rng:element name="Outputs"/>
            <rng:element name="Message"/>
            <rng:element name="Inputs"/>
            <rng:element name="Command"/>
          </rng:choice>
</rng:zeroOrMore>



  </rng:element>
</rng:define>
  <rng:start combine="choice">
<rng:ref name="Manifest"/>
</rng:start>
<rng:define name="Manifest">
<rng:element name="Manifest">


        <rng:ref name="SimpleItemType"/>
          <rng:zeroOrMore>
<rng:choice>
            <rng:element name="AssemblyIdentity"/>
            <rng:element name="AdditionalManifestFiles"/>
            <rng:element name="InputResourceManifests"/>
            <rng:element name="EnableDPIAwareness"/>
            <rng:element name="TypeLibraryFile"/>
            <rng:element name="OutputManifestFile"/>
            <rng:element name="SuppressStartupBanner"/>
            <rng:element name="VerboseOutput"/>
            <rng:element name="ResourceOutputFileName"/>
            <rng:element name="GenerateCatalogFiles"/>
            <rng:element name="DependencyInformationFile"/>
            <rng:element name="ManifestFromManagedAssembly"/>
            <rng:element name="SuppressDependencyElement"/>
            <rng:element name="GenerateCategoryTags"/>
            <rng:element name="RegistrarScriptFile"/>
            <rng:element name="ComponentFileName"/>
            <rng:element name="ReplacementsFile"/>
            <rng:element name="UpdateFileHashesSearchPath"/>
            <rng:element name="AdditionalOptions"/>
            <rng:element name="OutputResourceManifests">



                    <rng:attribute name="Condition"/>



            </rng:element>
          </rng:choice>
</rng:zeroOrMore>



  </rng:element>
</rng:define>
  <rng:start combine="choice">
<rng:ref name="ProjectConfiguration"/>
</rng:start>
<rng:define name="ProjectConfiguration">
<rng:element name="ProjectConfiguration">


        <rng:ref name="SimpleItemType"/>

            <rng:element name="Configuration"/>
            <rng:element name="Platform"/>




  </rng:element>
</rng:define>
  <rng:start combine="choice">
<rng:ref name="ProjectCapability"/>
</rng:start>
<rng:define name="ProjectCapability">
<rng:element name="ProjectCapability">
    <a:documentation>

        <!-- _locID_text="ProjectCapability" _locComment="" -->Project Capability that may activate design-time components in an IDE.

    </a:documentation>
  </rng:element>
</rng:define>
  <rng:start combine="choice">
<rng:ref name="NativeReference"/>
</rng:start>
<rng:define name="NativeReference">
<rng:element name="NativeReference">
        <a:documentation>
            <!-- _locID_text="NativeReference" _locComment="" -->Reference to a native manifest file, or to a file that contains a native manifest
        </a:documentation>


                <rng:ref name="SimpleItemType"/>

                        <rng:choice>
                            <rng:element name="Name">
                                <a:documentation>
                                    <!-- _locID_text="NativeReference_Name" _locComment="" -->Base name of manifest file
                                </a:documentation>
                            </rng:element>
                            <rng:element name="HintPath">
                                <a:documentation>
                                    <!-- _locID_text="NativeReference_HintPath" _locComment="" -->Relative path to manifest file
                                </a:documentation>
                            </rng:element>
                        </rng:choice>

                    <!-- redefine Include just to give a specific description -->
                    <rng:optional>
<rng:attribute name="Include">
<rng:data type="string">
                        <a:documentation>
                            <!-- _locID_text="NativeReference_Include" _locComment="" -->Reference full name
                        </a:documentation>
                    </rng:data>
</rng:attribute>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="ProjectReference"/>
</rng:start>
<rng:define name="ProjectReference">
<rng:element name="ProjectReference">
        <a:documentation>
            <!-- _locID_text="ProjectReference" _locComment="" -->Reference to another project
        </a:documentation>


                <rng:ref name="SimpleItemType"/>

                        <rng:choice>
                            <rng:element name="Name">
                                <a:documentation>
                                    <!-- _locID_text="ProjectReference_Name" _locComment="" -->Friendly display name (optional)
                                </a:documentation>
                            </rng:element>
                            <rng:element name="Project">
                                <a:documentation>
                                    <!-- _locID_text="ProjectReference_Project" _locComment="" -->Project GUID, in the form {00000000-0000-0000-0000-000000000000}
                                </a:documentation>
                            </rng:element>
                            <rng:element name="ReferenceOutputAssembly">
<rng:ref name="boolean"/>
                                <a:documentation>
                                    <!-- _locID_text="ProjectReference_Reference" _locComment="" -->Boolean specifying whether the outputs of the project referenced should be passed to the compiler. Default is true.
                                </a:documentation>
                            </rng:element>
                            <rng:element name="SpecificVersion">
                                <a:documentation>
                                    <!-- _locID_text="Reference_SpecificVersion" _locComment="" -->Whether the exact version of the assembly should be used.
                                </a:documentation>
                            </rng:element>
                            <rng:element name="Targets">
                                <a:documentation>
                                    <!-- _locID_text="ProjectReference_Targets" _locComment="" -->Semicolon separated list of targets in the referenced projects that should be built. Default is the value of $(ProjectReferenceBuildTargets) whose default is blank, indicating the default targets.
                                </a:documentation>
                            </rng:element>
                            <rng:element name="OutputItemType">
                             <a:documentation>

                                 <!-- _locID_text="ProjectReference_OutputItemType" _locComment="" -->Item type to emit target outputs into. Default is blank. If the Reference metadata is set to "true" (default) then target outputs will become references for the compiler.

                              </a:documentation>
                            </rng:element>
                            <rng:element name="Package"/>
                            <rng:element name="EmbedInteropTypes">
<rng:ref name="boolean"/>
                                <a:documentation>
                                    <!-- _locID_text="ProjectReference_EmbedInteropTypes" _locComment="" -->Whether the types in this reference need to embedded into the target assembly - interop assemblies only (optional, boolean)
                                </a:documentation>
                            </rng:element>
                            <rng:element name="IncludeAssets">
                              <a:documentation>

                                  <!-- _locID_text="ProjectReference_IncludeAssets" _locComment="" -->Assets to include from this reference

                              </a:documentation>
                            </rng:element>
                            <rng:element name="ExcludeAssets">
                              <a:documentation>

                                  <!-- _locID_text="ProjectReference_ExcludeAssets" _locComment="" -->Assets to exclude from this reference

                              </a:documentation>
                            </rng:element>
                            <rng:element name="PrivateAssets">
                              <a:documentation>

                                  <!-- _locID_text="ProjectReference_PrivateAssets" _locComment="" -->Assets that are private in this reference

                              </a:documentation>
                            </rng:element>
                        </rng:choice>

                    <!-- redefine Include just to give a specific description -->
                    <rng:optional>
<rng:attribute name="Include">
<rng:data type="string">
                        <a:documentation>
                            <!-- _locID_text="ProjectReference_Package" _locComment="" -->Path to project file
                        </a:documentation>
                    </rng:data>
</rng:attribute>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="Compile"/>
</rng:start>
<rng:define name="Compile">
<rng:element name="Compile">
        <a:documentation>
            <!-- _locID_text="Compile" _locComment="" -->Source files for compiler
        </a:documentation>


                <rng:ref name="SimpleItemType"/>

                        <rng:choice>
                            <rng:element name="SubType"/>
                            <rng:element name="DependentUpon"/>
                            <rng:element name="AutoGen">
<rng:ref name="boolean"/>
                                <a:documentation>
                                    <!-- _locID_text="Compile_AutoGen" _locComment="" -->Whether file was generated from another file (boolean)
                                </a:documentation>
                            </rng:element>
                            <rng:element name="DesignTime"/>
                            <rng:element name="Link">
                                <a:documentation>
                                    <!-- _locID_text="Compile_Link" _locComment="" -->Notional path within project to display if the file is physically located outside of the project file's cone (optional)
                                </a:documentation>
                            </rng:element>
                            <rng:element name="DesignTimeSharedInput"/>
                            <rng:element name="Visible">
<rng:ref name="boolean"/>
                                <a:documentation>
                                    <!-- _locID_text="Compile_InProject" _locComment="" -->Display in user interface (optional, boolean)
                                </a:documentation>
                            </rng:element>
                            <rng:element name="CopyToOutputDirectory"/>
                            <rng:element name="VBMyExtensionTemplateID"/>
                        </rng:choice>

                    <!-- redefine Include just to give a specific description -->
                    <rng:optional>
<rng:attribute name="Include">
<rng:data type="string">
                        <a:documentation>
                            <!-- _locID_text="Compile_Include" _locComment="" -->Semi-colon separated list of source files (wildcards are allowed)
                        </a:documentation>
                    </rng:data>
</rng:attribute>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="EmbeddedResource"/>
</rng:start>
<rng:define name="EmbeddedResource">
<rng:element name="EmbeddedResource">
        <a:documentation>
            <!-- _locID_text="EmbeddedResource" _locComment="" -->Resources to be embedded in the generated assembly
        </a:documentation>


                <rng:ref name="SimpleItemType"/>

                        <rng:choice>
                            <rng:element name="DependentUpon"/>
                            <rng:element name="Generator">
                                <a:documentation>
                                    <!-- _locID_text="EmbeddedResource_Generator" _locComment="" -->Name of any file generator that is run on this item
                                </a:documentation>
                            </rng:element>
                            <rng:element name="LastGenOutput">
                                <a:documentation>
                                    <!-- _locID_text="EmbeddedResource_LastGenOutput" _locComment="" -->File that was created by any file generator that was run on this item
                                </a:documentation>
                            </rng:element>
                            <rng:element name="CustomToolNamespace">
                                <a:documentation>
                                    <!-- _locID_text="EmbeddedResource_CustomToolNamespace" _locComment="" -->Namespace into which any file generator that is run on this item should create code
                                </a:documentation>
                            </rng:element>
                            <rng:element name="Link">
                                <a:documentation>
                                    <!-- _locID_text="EmbeddedResource_Link" _locComment="" -->Notional path within project to display if the file is physically located outside of the project file's cone (optional)
                                </a:documentation>
                            </rng:element>
                            <rng:element name="Visible">
<rng:ref name="boolean"/>
                                <a:documentation>
                                    <!-- _locID_text="EmbeddedResource_InProject" _locComment="" -->Display in user interface (optional, boolean)
                                </a:documentation>
                            </rng:element>
                            <rng:element name="SubType"/>
                            <rng:element name="CopyToOutputDirectory"/>
                            <rng:element name="LogicalName"/>
                        </rng:choice>

                    <!-- redefine Include just to give a specific description -->
                    <rng:optional>
<rng:attribute name="Include">
<rng:data type="string">
                        <a:documentation>
                            <!-- _locID_text="EmbeddedResource_Include" _locComment="" -->Semi-colon separated list of resource files (wildcards are allowed)
                        </a:documentation>
                    </rng:data>
</rng:attribute>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="Content"/>
</rng:start>
<rng:define name="Content">
<rng:element name="Content">
        <a:documentation>
            <!-- _locID_text="Content" _locComment="" -->Files that are not compiled, but may be embedded or published
        </a:documentation>


                <rng:ref name="SimpleItemType"/>

                        <rng:choice>
                            <rng:element name="DependentUpon"/>
                            <rng:element name="Generator">
                                <a:documentation>
                                    <!-- _locID_text="Content_Generator" _locComment="" -->Name of any file generator that is run on this item
                                </a:documentation>
                            </rng:element>
                            <rng:element name="LastGenOutput"/>
                            <rng:element name="CustomToolNamespace"/>
                            <rng:element name="Link">
                                <a:documentation>
                                    <!-- _locID_text="Content_Link" _locComment="" -->Notional path within project to display if the file is physically located outside of the project file's cone (optional)
                                </a:documentation>
                            </rng:element>
                            <rng:element name="Group"/>
                            <rng:element name="PublishState">
                               <a:documentation>
                                    <!-- _locID_text="Content_PublishState" _locComment="" -->Default, Included, Excluded, DataFile, or Prerequisite
                                </a:documentation>
                            </rng:element>
                            <rng:element name="IsAssembly"/>
                            <rng:element name="Visible">
<rng:ref name="boolean"/>
                                <a:documentation>
                                    <!-- _locID_text="Content_InProject" _locComment="" -->Display in user interface (optional, boolean)
                                </a:documentation>
                            </rng:element>
                            <rng:element name="SubType"/>
                            <rng:element name="CopyToOutputDirectory">
<rng:ref name="boolean"/>
                                <a:documentation>
                                    <!-- _locID_text="Content_CopyToOutputDirectory" _locComment="" -->Copy file to output directory (optional, boolean, default false)
                                </a:documentation>
                            </rng:element>
                            <rng:element name="CopyToPublishDirectory">
<rng:ref name="boolean"/>
                                <a:documentation>
                                    <!-- _locID_text="Content_CopyToPublishDirectory" _locComment="" -->Copy file to publish directory (optional, boolean, default false)
                                </a:documentation>
                            </rng:element>
                        </rng:choice>

                    <!-- redefine Include just to give a specific description -->
                    <rng:optional>
<rng:attribute name="Include">
<rng:data type="string">
                        <a:documentation>
                            <!-- _locID_text="Content_Include" _locComment="" -->Semi-colon separated list of content files (wildcards are allowed)
                        </a:documentation>
                    </rng:data>
</rng:attribute>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="Page"/>
</rng:start>
<rng:define name="Page">
<rng:element name="Page">
        <a:documentation>
            <!-- _locID_text="Page" _locComment="" -->XAML files that are converted to binary and compiled into the assembly
        </a:documentation>


                <rng:ref name="SimpleItemType"/>

                        <rng:choice>
                            <rng:element name="DependentUpon"/>
                            <rng:element name="Generator">
                                <a:documentation>
                                    <!-- _locID_text="Page_Generator" _locComment="" -->Name of any file generator that is run on this item
                                </a:documentation>
                            </rng:element>
                            <rng:element name="LastGenOutput"/>
                            <rng:element name="CustomToolNamespace"/>
                            <rng:element name="Link">
                                <a:documentation>
                                    <!-- _locID_text="Page_Link" _locComment="" -->Notional path within project to display if the file is physically located outside of the project file's cone (optional)
                                </a:documentation>
                            </rng:element>
                            <rng:element name="Group"/>
                            <rng:element name="SubType"/>
                            <rng:element name="CopyToOutputDirectory">
<rng:ref name="boolean"/>
                                <a:documentation>
                                    <!-- _locID_text="Page_CopyToOutputDirectory" _locComment="" -->Copy file to output directory (optional, boolean, default false)
                                </a:documentation>
                            </rng:element>
                        </rng:choice>

                    <!-- redefine Include just to give a specific description -->
                    <rng:optional>
<rng:attribute name="Include">
<rng:data type="string">
                        <a:documentation>
                            <!-- _locID_text="Page_Include" _locComment="" -->Semi-colon separated list of XAML files (wildcards are allowed)
                        </a:documentation>
                    </rng:data>
</rng:attribute>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="Resource"/>
</rng:start>
<rng:define name="Resource">
<rng:element name="Resource">
        <a:documentation>
            <!-- _locID_text="Resource" _locComment="" -->File that is compiled into the assembly
        </a:documentation>


                <rng:ref name="SimpleItemType"/>

                        <rng:choice>
                            <rng:element name="DependentUpon"/>
                            <rng:element name="Generator">
                                <a:documentation>
                                    <!-- _locID_text="Resource_Generator" _locComment="" -->Name of any file generator that is run on this item
                                </a:documentation>
                            </rng:element>
                            <rng:element name="LastGenOutput"/>
                            <rng:element name="CustomToolNamespace"/>
                            <rng:element name="Link">
                                <a:documentation>
                                    <!-- _locID_text="Resource_Link" _locComment="" -->Notional path within project to display if the file is physically located outside of the project file's cone (optional)
                                </a:documentation>
                            </rng:element>
                            <rng:element name="Group"/>
                            <rng:element name="SubType"/>
                            <rng:element name="CopyToOutputDirectory">
<rng:ref name="boolean"/>
                                <a:documentation>
                                    <!-- _locID_text="Resource_CopyToOutputDirectory" _locComment="" -->Copy file to output directory (optional, boolean, default false)
                                </a:documentation>
                            </rng:element>
                        </rng:choice>

                    <!-- redefine Include just to give a specific description -->
                    <rng:optional>
<rng:attribute name="Include">
<rng:data type="string">
                        <a:documentation>
                            <!-- _locID_text="Resource_Include" _locComment="" -->Semi-colon separated list of files (wildcards are allowed)
                        </a:documentation>
                    </rng:data>
</rng:attribute>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="ApplicationDefinition"/>
</rng:start>
<rng:define name="ApplicationDefinition">
<rng:element name="ApplicationDefinition">
        <a:documentation>
            <!-- _locID_text="ApplicationDefinition" _locComment="" -->XAML file that contains the application definition, only one can be defined
        </a:documentation>


                <rng:ref name="SimpleItemType"/>

                        <rng:choice>
                            <rng:element name="DependentUpon"/>
                            <rng:element name="Generator">
                                <a:documentation>
                                    <!-- _locID_text="ApplicationDefinition_Generator" _locComment="" -->Name of any file generator that is run on this item
                                </a:documentation>
                            </rng:element>
                            <rng:element name="LastGenOutput"/>
                            <rng:element name="CustomToolNamespace"/>
                            <rng:element name="Link">
                                <a:documentation>
                                    <!-- _locID_text="ApplicationDefinition_Link" _locComment="" -->Notional path within project to display if the file is physically located outside of the project file's cone (optional)
                                </a:documentation>
                            </rng:element>
                            <rng:element name="Group"/>
                            <rng:element name="SubType"/>
                            <rng:element name="CopyToOutputDirectory">
<rng:ref name="boolean"/>
                                <a:documentation>
                                    <!-- _locID_text="ApplicationDefinition_CopyToOutputDirectory" _locComment="" -->Copy file to output directory (optional, boolean, default false)
                                </a:documentation>
                            </rng:element>
                        </rng:choice>




    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="None"/>
</rng:start>
<rng:define name="None">
<rng:element name="None">
        <a:documentation>
            <!-- _locID_text="None" _locComment="" -->Files that should have no role in the build process
        </a:documentation>


                <rng:ref name="SimpleItemType"/>

                        <rng:choice>
                            <rng:element name="DependentUpon"/>
                            <rng:element name="Generator">
                                <a:documentation>
                                    <!-- _locID_text="None_Generator" _locComment="" -->Name of any file generator that is run on this item
                                </a:documentation>
                            </rng:element>
                            <rng:element name="LastGenOutput"/>
                            <rng:element name="CustomToolNamespace"/>
                            <rng:element name="Link">
                                <a:documentation>
                                    <!-- _locID_text="None_Link" _locComment="" -->Notional path within project to display if the file is physically located outside of the project file's cone (optional)
                                </a:documentation>
                            </rng:element>
                            <rng:element name="Visible">
<rng:ref name="boolean"/>
                                <a:documentation>
                                    <!-- _locID_text="None_InProject" _locComment="" -->Display in user interface (optional, boolean)
                                </a:documentation>
                            </rng:element>
                            <rng:element name="CopyToOutputDirectory"/>
                        </rng:choice>




    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="BaseApplicationManifest"/>
</rng:start>
<rng:define name="BaseApplicationManifest">
<rng:element name="BaseApplicationManifest">
<rng:ref name="SimpleItemType"/>
        <a:documentation>
            <!-- _locID_text="BaseApplicationManifest" _locComment="" -->The base application manifest for the build. Contains ClickOnce security information.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="Folder"/>
</rng:start>
<rng:define name="Folder">
<rng:element name="Folder">
<rng:ref name="SimpleItemType"/>
        <a:documentation>
            <!-- _locID_text="Folder" _locComment="" -->Folder on disk
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="Import"/>
</rng:start>
<rng:define name="Import">
<rng:element name="Import">
<rng:ref name="SimpleItemType"/>
        <a:documentation>
            <!-- _locID_text="Import" _locComment="" -->Assemblies whose namespaces should be imported by the Visual Basic compiler
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="Service"/>
</rng:start>
<rng:define name="Service">
<rng:element name="Service">
<rng:ref name="SimpleItemType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="WebReferences"/>
</rng:start>
<rng:define name="WebReferences">
<rng:element name="WebReferences">
<rng:ref name="SimpleItemType"/>
        <a:documentation>
            <!-- _locID_text="WebReferences" _locComment="" -->Name of Web References folder to display in user interface
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="WebReferenceUrl"/>
</rng:start>
<rng:define name="WebReferenceUrl">
<rng:element name="WebReferenceUrl">
        <a:documentation>
            <!-- _locID_text="WebReferenceUrl" _locComment="" -->Represents a reference to a web service
        </a:documentation>


                    <rng:ref name="SimpleItemType"/>

                            <rng:choice>
                                <rng:element name="UrlBehavior"/>
                                <rng:element name="RelPath"/>
                                <rng:element name="UpdateFromURL"/>
                                <rng:element name="ServiceLocationURL"/>
                                <rng:element name="CachedDynamicPropName"/>
                                <rng:element name="CachedAppSettingsObjectName"/>
                                <rng:element name="CachedSettingsPropName"/>
                            </rng:choice>

                        <!-- redefine Include just to give a specific description -->
                        <rng:optional>
<rng:attribute name="Include">
<rng:data type="string">
                            <a:documentation>
                                <!-- _locID_text="WebReferenceUrl_Include" _locComment="" -->URL to web service
                            </a:documentation>
                        </rng:data>
</rng:attribute>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="FileAssociation"/>
</rng:start>
<rng:define name="FileAssociation">
<rng:element name="FileAssociation">


                <rng:ref name="SimpleItemType"/>

                        <rng:choice>
                            <rng:element name="Visible">
<rng:ref name="boolean"/>
                                <a:documentation>
                                    <!-- _locID_text="FileAssociation_InProject" _locComment="" -->Display in user interface (optional, boolean)
                                </a:documentation>
                            </rng:element>
                            <rng:element name="DefaultIcon"/>
                            <rng:element name="Description"/>
                            <rng:element name="Progid"/>
                        </rng:choice>




    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="BootstrapperFile"/>
</rng:start>
<rng:define name="BootstrapperFile">
<rng:element name="BootstrapperFile">


                <rng:ref name="SimpleItemType"/>

                        <rng:choice>
                            <rng:element name="Visible">
<rng:ref name="boolean"/>
                                <a:documentation>
                                    <!-- _locID_text="BootstrapperFile_InProject" _locComment="" -->Display in user interface (optional, boolean)
                                </a:documentation>
                            </rng:element>
                            <rng:element name="ProductName"/>
                            <rng:element name="Install"/>
                        </rng:choice>




    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="PublishFile"/>
</rng:start>
<rng:define name="PublishFile">
<rng:element name="PublishFile">


                <rng:ref name="SimpleItemType"/>

                        <rng:choice>
                            <rng:element name="Visible">
<rng:ref name="boolean"/>
                                <a:documentation>
                                    <!-- _locID_text="PublishFile_InProject" _locComment="" -->Display in user interface (optional, boolean)
                                </a:documentation>
                            </rng:element>
                            <rng:element name="Group"/>
                            <rng:element name="IncludeHash">
<rng:ref name="boolean"/>
                                <a:documentation>
                                    <!-- _locID_text="PublishFile_IncludeHash" _locComment="" -->(boolean)
                                </a:documentation>
                            </rng:element>
                            <rng:element name="IsAssembly">
<rng:ref name="boolean"/>
                                <a:documentation>
                                    <!-- _locID_text="PublishFile_IsAssembly" _locComment="" -->(boolean)
                                </a:documentation>
                            </rng:element>
                            <rng:element name="PublishState">
                                <a:documentation>
                                    <!-- _locID_text="PublishFile_PublishState" _locComment="" -->Default, Included, Excluded, DataFile, ManifestEntryPoint, or Prerequisite
                                </a:documentation>
                            </rng:element>
                        </rng:choice>




    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="TargetPlatform"/>
</rng:start>
<rng:define name="TargetPlatform">
<rng:element name="TargetPlatform">
        <a:documentation>

                <!-- _locID_text="TargetPlatform" _locComment="" -->Target platform in the form of "[Identifier], Version=[Version]", for example, "Windows, Version=8.0"

        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="Analyzer"/>
</rng:start>
<rng:define name="Analyzer">
<rng:element name="Analyzer">
        <a:documentation>

                <!-- _locID_text="Analyzer" _locComment="" -->An assembly containing diagnostic analyzers

        </a:documentation>


                <rng:ref name="SimpleItemType"/>
                    <!-- redefine Include to make it required, and to give a specific description. -->
                    <rng:attribute name="Include">
<rng:data type="string">
                        <a:documentation>

                                <!-- _locID_text="Analyzer_Include" _locComment="" -->Relative or absolute path to the assembly (required)

                        </a:documentation>
                    </rng:data>
</rng:attribute>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="AndroidResource"/>
</rng:start>
<rng:define name="AndroidResource">
<rng:element name="AndroidResource">
        <a:documentation>
            <!-- _locID_text="AndroidResource" _locComment="" -->Android resource files to be used within a Xamarin.Android project.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="ProguardConfiguration"/>
</rng:start>
<rng:define name="ProguardConfiguration">
<rng:element name="ProguardConfiguration">
        <a:documentation>
            <!-- _locID_text="ProguardConfiguration" _locComment="" -->ProGuard configuration files to be used within a Xamarin.Android project.
        </a:documentation>
    </rng:element>
</rng:define>
    <!-- ======================== PROPERTIES =====================================-->
    <!-- Possible Types include StringPropertyType (text with no subelements), GenericPropertyType (any content), or something more specific.-->

    <rng:start combine="choice">
<rng:ref name="VisualStudioVersion"/>
</rng:start>
<rng:define name="VisualStudioVersion">
<rng:element name="VisualStudioVersion">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="MinimumVisualStudioVersion"/>
</rng:start>
<rng:define name="MinimumVisualStudioVersion">
<rng:element name="MinimumVisualStudioVersion">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="AdditionalFileItemNames"/>
</rng:start>
<rng:define name="AdditionalFileItemNames">
<rng:element name="AdditionalFileItemNames">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="AllowUnsafeBlocks"/>
</rng:start>
<rng:define name="AllowUnsafeBlocks">
<rng:element name="AllowUnsafeBlocks">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="AnalysisMode"/>
</rng:start>
<rng:define name="AnalysisMode">
<rng:element name="AnalysisMode">
      <a:documentation>
        <!-- _locID_text="AnalysisMode" _locComment="" -->Customizes the set of rules that are enabled by default.
      </a:documentation>

        <rng:choice>
          <rng:value>Default</rng:value>
          <rng:value>AllEnabledByDefault</rng:value>
          <rng:value>AllDisabledByDefault</rng:value>
        </rng:choice>

    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="AppConfigForCompiler"/>
</rng:start>
<rng:define name="AppConfigForCompiler">
<rng:element name="AppConfigForCompiler">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="ApplicationIcon"/>
</rng:start>
<rng:define name="ApplicationIcon">
<rng:element name="ApplicationIcon">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="ApplicationRevision"/>
</rng:start>
<rng:define name="ApplicationRevision">
<rng:element name="ApplicationRevision">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="ApplicationRevision" _locComment="" -->integer
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="ApplicationVersion"/>
</rng:start>
<rng:define name="ApplicationVersion">
<rng:element name="ApplicationVersion">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="ApplicationVersion" _locComment="" -->Matches the expression "\d\.\d\.\d\.(\d|\*)"
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="AppDesignerFolder"/>
</rng:start>
<rng:define name="AppDesignerFolder">
<rng:element name="AppDesignerFolder">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppDesignerFolder" _locComment="" -->Name of folder for Application Designer
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="AspNetConfiguration"/>
</rng:start>
<rng:define name="AspNetConfiguration">
<rng:element name="AspNetConfiguration">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="AspNetCoreHostingModel"/>
</rng:start>
<rng:define name="AspNetCoreHostingModel">
<rng:element name="AspNetCoreHostingModel">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_textPackageId _locComment="" -->Indicates whether to run an ASP.NET Core application using IIS in-process or out-of-process.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="AspNetCoreModuleName"/>
</rng:start>
<rng:define name="AspNetCoreModuleName">
<rng:element name="AspNetCoreModuleName">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_textPackageId _locComment="" -->Indicates which AspNetCoreModule version to use. Versions include V1 and V2.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="AssemblyKeyContainerName"/>
</rng:start>
<rng:define name="AssemblyKeyContainerName">
<rng:element name="AssemblyKeyContainerName">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="AssemblyKeyProviderName"/>
</rng:start>
<rng:define name="AssemblyKeyProviderName">
<rng:element name="AssemblyKeyProviderName">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="AssemblyName"/>
</rng:start>
<rng:define name="AssemblyName">
<rng:element name="AssemblyName">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AssemblyName" _locComment="" -->Name of output assembly
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="AssemblyOriginatorKeyFile"/>
</rng:start>
<rng:define name="AssemblyOriginatorKeyFile">
<rng:element name="AssemblyOriginatorKeyFile">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="AssemblyOriginatorKeyFileType"/>
</rng:start>
<rng:define name="AssemblyOriginatorKeyFileType">
<rng:element name="AssemblyOriginatorKeyFileType">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="AssemblyOriginatorKeyMode"/>
</rng:start>
<rng:define name="AssemblyOriginatorKeyMode">
<rng:element name="AssemblyOriginatorKeyMode">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="AssemblyType"/>
</rng:start>
<rng:define name="AssemblyType">
<rng:element name="AssemblyType">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="AutoGenerateBindingRedirects"/>
</rng:start>
<rng:define name="AutoGenerateBindingRedirects">
<rng:element name="AutoGenerateBindingRedirects">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AutorunEnabled" _locComment="" -->Indicates whether BindingRedirect elements should be automatically generated for referenced assemblies.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="AutorunEnabled"/>
</rng:start>
<rng:define name="AutorunEnabled">
<rng:element name="AutorunEnabled">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="AutorunEnabled" _locComment="" -->boolean
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="BaseAddress"/>
</rng:start>
<rng:define name="BaseAddress">
<rng:element name="BaseAddress">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="BootstrapperComponentsLocation"/>
</rng:start>
<rng:define name="BootstrapperComponentsLocation">
<rng:element name="BootstrapperComponentsLocation">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="BootstrapperComponentsLocation" _locComment="" -->HomeSite, Relative, or Absolute
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="BootstrapperComponentsUrl"/>
</rng:start>
<rng:define name="BootstrapperComponentsUrl">
<rng:element name="BootstrapperComponentsUrl">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="BootstrapperEnabled"/>
</rng:start>
<rng:define name="BootstrapperEnabled">
<rng:element name="BootstrapperEnabled">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="BootstrapperEnabled" _locComment="" -->boolean
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CharacterSet"/>
</rng:start>
<rng:define name="CharacterSet">
<rng:element name="CharacterSet">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CheckForOverflowUnderflow"/>
</rng:start>
<rng:define name="CheckForOverflowUnderflow">
<rng:element name="CheckForOverflowUnderflow">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CLRSupport"/>
</rng:start>
<rng:define name="CLRSupport">
<rng:element name="CLRSupport">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="UseDebugLibraries"/>
</rng:start>
<rng:define name="UseDebugLibraries">
<rng:element name="UseDebugLibraries">
<rng:ref name="boolean"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CodePage"/>
</rng:start>
<rng:define name="CodePage">
<rng:element name="CodePage">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="Configuration"/>
</rng:start>
<rng:define name="Configuration">
<rng:element name="Configuration">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="ConfigurationName"/>
</rng:start>
<rng:define name="ConfigurationName">
<rng:element name="ConfigurationName">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="ConfigurationOverrideFile"/>
</rng:start>
<rng:define name="ConfigurationOverrideFile">
<rng:element name="ConfigurationOverrideFile">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CreateDesktopShortcut"/>
</rng:start>
<rng:define name="CreateDesktopShortcut">
<rng:element name="CreateDesktopShortcut">
<rng:ref name="boolean"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CreateWebPageOnPublish"/>
</rng:start>
<rng:define name="CreateWebPageOnPublish">
<rng:element name="CreateWebPageOnPublish">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="CreateWebPageOnPublish" _locComment="" -->boolean
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CurrentSolutionConfigurationContents"/>
</rng:start>
<rng:define name="CurrentSolutionConfigurationContents">
<rng:element name="CurrentSolutionConfigurationContents">
<rng:ref name="GenericPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="DebugSecurityZoneURL"/>
</rng:start>
<rng:define name="DebugSecurityZoneURL">
<rng:element name="DebugSecurityZoneURL">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="DebugSymbols"/>
</rng:start>
<rng:define name="DebugSymbols">
<rng:element name="DebugSymbols">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="DebugSymbols" _locComment="" -->Whether to emit symbols (boolean)
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="DebugType"/>
</rng:start>
<rng:define name="DebugType">
<rng:element name="DebugType">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="DebugType" _locComment="" -->none, pdbonly, or full
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="DefaultClientScript"/>
</rng:start>
<rng:define name="DefaultClientScript">
<rng:element name="DefaultClientScript">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="DefaultHTMLPageLayout"/>
</rng:start>
<rng:define name="DefaultHTMLPageLayout">
<rng:element name="DefaultHTMLPageLayout">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="DefaultTargetSchema"/>
</rng:start>
<rng:define name="DefaultTargetSchema">
<rng:element name="DefaultTargetSchema">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="DefineConstants"/>
</rng:start>
<rng:define name="DefineConstants">
<rng:element name="DefineConstants">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="DefineDebug"/>
</rng:start>
<rng:define name="DefineDebug">
<rng:element name="DefineDebug">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="DefineDebug" _locComment="" -->Whether DEBUG is defined (boolean)
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="DefineTrace"/>
</rng:start>
<rng:define name="DefineTrace">
<rng:element name="DefineTrace">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="DefineTrace" _locComment="" -->Whether TRACE is defined (boolean)
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="DelaySign"/>
</rng:start>
<rng:define name="DelaySign">
<rng:element name="DelaySign">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="DisableLangXtns"/>
</rng:start>
<rng:define name="DisableLangXtns">
<rng:element name="DisableLangXtns">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="DisallowUrlActivation"/>
</rng:start>
<rng:define name="DisallowUrlActivation">
<rng:element name="DisallowUrlActivation">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="DisallowUrlActivation" _locComment="" -->boolean
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CodeAnalysisAdditionalOptions"/>
</rng:start>
<rng:define name="CodeAnalysisAdditionalOptions">
<rng:element name="CodeAnalysisAdditionalOptions">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="CodeAnalysisAdditionalOptions" _locComment="" -->Additional options to pass to the Code Analysis command line tool.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CodeAnalysisApplyLogFileXsl"/>
</rng:start>
<rng:define name="CodeAnalysisApplyLogFileXsl">
<rng:element name="CodeAnalysisApplyLogFileXsl">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="CodeAnalysisApplyLogFileXsl" _locComment="" -->Indicates whether to apply the XSL style sheet specified in $(CodeAnalysisLogFileXsl) to the Code Analysis report. This report is specified in $(CodeAnalysisLogFile). The default is false.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CodeAnalysisConsoleXsl"/>
</rng:start>
<rng:define name="CodeAnalysisConsoleXsl">
<rng:element name="CodeAnalysisConsoleXsl">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="CodeAnalysisConsoleXsl" _locComment="" -->Path to the XSL style sheet that will be applied to the Code Analysis console output. The default is an empty string (''), which causes Code Analysis to use its default console output.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CodeAnalysisCulture"/>
</rng:start>
<rng:define name="CodeAnalysisCulture">
<rng:element name="CodeAnalysisCulture">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="CodeAnalysisCulture" _locComment="" -->Culture to use for Code Analysis spelling rules, for example, 'en-US' or 'en-AU'. The default is the current user interface language for Windows.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CodeAnalysisDependentAssemblyPaths"/>
</rng:start>
<rng:define name="CodeAnalysisDependentAssemblyPaths">
<rng:element name="CodeAnalysisDependentAssemblyPaths">
        <a:documentation>
            <!-- _locID_text="CodeAnalysisDependentAssemblyPaths" _locComment="" -->Additional reference assembly paths to pass to the Code Analysis command line tool.
        </a:documentation>


                <rng:ref name="SimpleItemType"/>
                    <!-- Redefine Include to give a specific description -->
                    <rng:attribute name="Include">
<rng:data type="string">
                        <a:documentation>
                            <!-- _locID_text="CodeAnalysisDependentAssemblyPaths_Include" _locComment="" -->A fully qualified path to a directory containing reference assemblies to be used by Code Analysis.
                        </a:documentation>
                    </rng:data>
</rng:attribute>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CodeAnalysisDictionary"/>
</rng:start>
<rng:define name="CodeAnalysisDictionary">
<rng:element name="CodeAnalysisDictionary">
        <a:documentation>
            <!-- _locID_text="CodeAnalysisDictionary" _locComment="" -->Code Analysis custom dictionaries.
        </a:documentation>


                <rng:ref name="SimpleItemType"/>
                    <!-- Redefine Include just to give a specific description -->
                    <rng:attribute name="Include">
<rng:data type="string">
                        <a:documentation>
                            <!-- _locID_text="CodeAnalysisDictionary_Include" _locComment="" -->Semicolon-separated list of Code Analysis custom dictionaries. Wildcards are allowed.
                        </a:documentation>
                    </rng:data>
</rng:attribute>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CodeAnalysisFailOnMissingRules"/>
</rng:start>
<rng:define name="CodeAnalysisFailOnMissingRules">
<rng:element name="CodeAnalysisFailOnMissingRules">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="CodeAnalysisFailOnMissingRules" _locComment="" -->Indicates whether Code Analysis should fail if a rule or rule set is missing. The default is false.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CodeAnalysisForceOutput"/>
</rng:start>
<rng:define name="CodeAnalysisForceOutput">
<rng:element name="CodeAnalysisForceOutput">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="CodeAnalysisForceOutput" _locComment="" -->Indicates whether Code Analysis generates a report file, even when there are no active warnings or errors. The default is true.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CodeAnalysisGenerateSuccessFile"/>
</rng:start>
<rng:define name="CodeAnalysisGenerateSuccessFile">
<rng:element name="CodeAnalysisGenerateSuccessFile">
<rng:ref name="boolean"/>
          <a:documentation>
            <!-- _locID_text="CodeAnalysisGenerateSuccessFile" _locComment="" -->Indicates whether Code Analysis generates a '$(CodeAnalysisInputAssembly).lastcodeanalysissucceeded' file in the output folder when no build-breaking errors occur. The default is true.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CodeAnalysisIgnoreBuiltInRules"/>
</rng:start>
<rng:define name="CodeAnalysisIgnoreBuiltInRules">
<rng:element name="CodeAnalysisIgnoreBuiltInRules">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="CodeAnalysisIgnoreBuiltInRules" _locComment="" -->Indicates whether Code Analysis will ignore the default rule directories when searching for rules. The default is false.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CodeAnalysisIgnoreBuiltInRuleSets"/>
</rng:start>
<rng:define name="CodeAnalysisIgnoreBuiltInRuleSets">
<rng:element name="CodeAnalysisIgnoreBuiltInRuleSets">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="CodeAnalysisIgnoreBuiltInRuleSets" _locComment="" -->Indicates whether Code Analysis will ignore the default rule set directories when searching for rule sets. The default is false.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CodeAnalysisIgnoreInvalidTargets"/>
</rng:start>
<rng:define name="CodeAnalysisIgnoreInvalidTargets">
<rng:element name="CodeAnalysisIgnoreInvalidTargets">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="CodeAnalysisIgnoreInvalidTargets" _locComment="" -->Indicates whether Code Analysis should silently fail when analyzing invalid assemblies, such as those without managed code. The default is true.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CodeAnalysisIgnoreGeneratedCode"/>
</rng:start>
<rng:define name="CodeAnalysisIgnoreGeneratedCode">
<rng:element name="CodeAnalysisIgnoreGeneratedCode">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="CodeAnalysisIgnoreGeneratedCode" _locComment="" -->Indicates whether Code Analysis should fail silently when it analyzes invalid assemblies, such as those without managed code. The default is true.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CodeAnalysisImport"/>
</rng:start>
<rng:define name="CodeAnalysisImport">
<rng:element name="CodeAnalysisImport">
        <a:documentation>
            <!-- _locID_text="CodeAnalysisImport" _locComment="" -->Code Analysis projects (*.fxcop) or reports to import.
        </a:documentation>


                <rng:ref name="SimpleItemType"/>
                    <!-- Redefine Include just to give a specific description -->
                    <rng:attribute name="Include">
<rng:data type="string">
                        <a:documentation>

                                <!-- _locID_text="CodeAnalysisImport_Include" _locComment="" -->Semicolon-separated list of Code Analysis projects (*.fxcop) or reports to import. Wildcards are allowed.
                        </a:documentation>
                    </rng:data>
</rng:attribute>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CodeAnalysisInputAssembly"/>
</rng:start>
<rng:define name="CodeAnalysisInputAssembly">
<rng:element name="CodeAnalysisInputAssembly">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="CodeAnalysisInputAssembly" _locComment="" -->Path to the assembly to be analyzed by Code Analysis. The default is '$(OutDir)$(TargetName)$(TargetExt)'.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CodeAnalysisLogFile"/>
</rng:start>
<rng:define name="CodeAnalysisLogFile">
<rng:element name="CodeAnalysisLogFile">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="CodeAnalysisLogFile" _locComment="" -->Path to the output file for the Code Analysis report. The default is '$(CodeAnalysisInputAssembly).CodeAnalysisLog.xml'.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CodeAnalysisLogFileXsl"/>
</rng:start>
<rng:define name="CodeAnalysisLogFileXsl">
<rng:element name="CodeAnalysisLogFileXsl">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="CodeAnalysisLogFileXsl" _locComment="" -->Path to the XSL style sheet to reference in the Code Analysis output report. This report is specified in $(CodeAnalysisLogFile). The default is an empty string ('').
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CodeAnalysisModuleSuppressionsFile"/>
</rng:start>
<rng:define name="CodeAnalysisModuleSuppressionsFile">
<rng:element name="CodeAnalysisModuleSuppressionsFile">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="CodeAnalysisModuleSuppressionsFile" _locComment="" -->Name of the file, without the path, where Code Analysis project-level suppressions are stored. The default is 'GlobalSuppressions$(DefaultLanguageSourceExtension)'.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CodeAnalysisOverrideRuleVisibilities"/>
</rng:start>
<rng:define name="CodeAnalysisOverrideRuleVisibilities">
<rng:element name="CodeAnalysisOverrideRuleVisibilities">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="CodeAnalysisOverrideRuleVisibilities" _locComment="" -->Indicates whether to run all overridable Code Analysis rules against all targets. This will cause specific rules, such as those within the Design and Naming categories, to run against both public and internal APIs, instead of only public APIs. The default is false.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CodeAnalysisOutputToConsole"/>
</rng:start>
<rng:define name="CodeAnalysisOutputToConsole">
<rng:element name="CodeAnalysisOutputToConsole">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="CodeAnalysisOutputToConsole" _locComment="" -->Indicates whether to output Code Analysis warnings and errors to the console. The default is false.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CodeAnalysisVerbose"/>
</rng:start>
<rng:define name="CodeAnalysisVerbose">
<rng:element name="CodeAnalysisVerbose">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="CodeAnalysisVerbose" _locComment="" -->Indicates whether to output verbose Code Analysis diagnostic info to the console. The default is false.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CodeAnalysisPath"/>
</rng:start>
<rng:define name="CodeAnalysisPath">
<rng:element name="CodeAnalysisPath">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="CodeAnalysisPath" _locComment="" -->Path to the Code Analysis installation folder. The default is '$(VSINSTALLDIR)\Team Tools\Static Analysis Tools\FxCop'.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CodeAnalysisPlatformPath"/>
</rng:start>
<rng:define name="CodeAnalysisPlatformPath">
<rng:element name="CodeAnalysisPlatformPath">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="CodeAnalysisPlatformPath" _locComment="" -->Path to the .NET Framework folder that contains platform assemblies, such as mscorlib.dll and System.dll. The default is an empty string ('').
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CodeAnalysisProject"/>
</rng:start>
<rng:define name="CodeAnalysisProject">
<rng:element name="CodeAnalysisProject">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="CodeAnalysisProject" _locComment="" -->Path to the Code Analysis project (*.fxcop) to load. The default is an empty string ('').
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CodeAnalysisQuiet"/>
</rng:start>
<rng:define name="CodeAnalysisQuiet">
<rng:element name="CodeAnalysisQuiet">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="CodeAnalysisQuiet" _locComment="" -->Indicates whether to suppress all Code Analysis console output other than errors and warnings. This applies when $(CodeAnalysisOutputToConsole) is true. The default is false.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CodeAnalysisRuleAssemblies"/>
</rng:start>
<rng:define name="CodeAnalysisRuleAssemblies">
<rng:element name="CodeAnalysisRuleAssemblies">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="CodeAnalysisRuleAssemblies" _locComment="" -->Semicolon-separated list of paths either to Code Analysis rule assemblies or to folders that contain Code Analysis rule assemblies. The paths are in the form '[+|-][!][file|folder]', where '+' enables all rules in rule assembly, '-' disables all rules in rule assembly, and '!' causes all rules in rule assembly to be treated as errors. For example '+D:\Projects\Rules\NamingRules.dll;+!D:\Projects\Rules\SecurityRules.dll'. The default is '$(CodeAnalysisPath)\Rules'.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CodeAnalysisRuleDirectories"/>
</rng:start>
<rng:define name="CodeAnalysisRuleDirectories">
<rng:element name="CodeAnalysisRuleDirectories">
<rng:ref name="StringPropertyType"/>
         <a:documentation>
            <!-- _locID_text="CodeAnalysisRuleDirectories" _locComment="" -->Semicolon-separated list of directories in which to search for rules when resolving a rule set. The default is '$(CodeAnalysisPath)\Rules' unless the CodeAnalysisIgnoreBuiltInRules property is set to true.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CodeAnalysisRules"/>
</rng:start>
<rng:define name="CodeAnalysisRules">
<rng:element name="CodeAnalysisRules">
<rng:ref name="StringPropertyType"/>
         <a:documentation>
            <!-- _locID_text="CodeAnalysisRules" _locComment="" -->Semicolon-separated list of Code Analysis rules. The rules are in the form '[+|-][!]Category#CheckId', where '+' enables the rule, '-' disables the rule, and '!' causes the rule to be treated as an error. For example, '-Microsoft.Naming#CA1700;+!Microsoft.Naming#CA1701'. The default is an empty string ('') which enables all rules.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CodeAnalysisRuleSet"/>
</rng:start>
<rng:define name="CodeAnalysisRuleSet">
<rng:element name="CodeAnalysisRuleSet">
<rng:ref name="StringPropertyType"/>
         <a:documentation>
            <!-- _locID_text="CodeAnalysisRuleSet" _locComment="" -->A .ruleset file which contains a list of rules to run during analysis. The string can be a full path, a path relative to the project file, or a file name. If a file name is specified, the CodeAnalysisRuleSetDirectories property will be searched to find the file. The default is an empty string ('').
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CodeAnalysisRuleSetDirectories"/>
</rng:start>
<rng:define name="CodeAnalysisRuleSetDirectories">
<rng:element name="CodeAnalysisRuleSetDirectories">
<rng:ref name="StringPropertyType"/>
         <a:documentation>
            <!-- _locID_text="CodeAnalysisRuleSetDirectories" _locComment="" -->Semicolon-separated list of directories in which to search for rule sets. The default is '$(VSINSTALLDIR)\Team Tools\Static Analysis Tools\Rule Sets' unless the CodeAnalysisIgnoreBuiltInRuleSets property is set to true.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CodeAnalysisSaveMessagesToReport"/>
</rng:start>
<rng:define name="CodeAnalysisSaveMessagesToReport">
<rng:element name="CodeAnalysisSaveMessagesToReport">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="CodeAnalysisSaveMessagesToReport" _locComment="" -->Comma-separated list of the type ('Active', 'Excluded', or 'Absent') of warnings and errors to save to the output report file. The default is 'Active'.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CodeAnalysisSearchGlobalAssemblyCache"/>
</rng:start>
<rng:define name="CodeAnalysisSearchGlobalAssemblyCache">
<rng:element name="CodeAnalysisSearchGlobalAssemblyCache">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="CodeAnalysisSearchGlobalAssemblyCache" _locComment="" -->Indicates whether Code Analysis should search the Global Assembly Cache (GAC) for missing references that are encountered during analysis. The default is true.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CodeAnalysisSummary"/>
</rng:start>
<rng:define name="CodeAnalysisSummary">
<rng:element name="CodeAnalysisSummary">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="CodeAnalysisSummary" _locComment="" -->Indicates whether to output a Code Analysis summary to the console after analysis. The default is false.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CodeAnalysisTimeout"/>
</rng:start>
<rng:define name="CodeAnalysisTimeout">
<rng:element name="CodeAnalysisTimeout">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="CodeAnalysisTimeout" _locComment="" -->The time, in seconds, that Code Analysis should wait for analysis of a single item to complete before it aborts analysis. Specify 0 to cause Code Analysis to wait indefinitely. The default is 120.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CodeAnalysisTreatWarningsAsErrors"/>
</rng:start>
<rng:define name="CodeAnalysisTreatWarningsAsErrors">
<rng:element name="CodeAnalysisTreatWarningsAsErrors">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="CodeAnalysisTreatWarningsAsErrors" _locComment="" -->Indicates whether to treat all Code Analysis warnings as errors. The default is false.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CodeAnalysisUpdateProject"/>
</rng:start>
<rng:define name="CodeAnalysisUpdateProject">
<rng:element name="CodeAnalysisUpdateProject">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="CodeAnalysisUpdateProject" _locComment="" -->Indicates whether to update the Code Analysis project (*.fxcop) specified in $(CodeAnalysisProject). This applies when there are changes during analysis. The default is false.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CodeAnalysisUseTypeNameInSuppression"/>
</rng:start>
<rng:define name="CodeAnalysisUseTypeNameInSuppression">
<rng:element name="CodeAnalysisUseTypeNameInSuppression">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="CodeAnalysisUseTypeNameInSuppression" _locComment="" -->Indicates whether to include the name of the rule when Code Analysis emits a suppression. The default is true.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="ConfigurationType"/>
</rng:start>
<rng:define name="ConfigurationType">
<rng:element name="ConfigurationType">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="DeployDirSuffix"/>
</rng:start>
<rng:define name="DeployDirSuffix">
<rng:element name="DeployDirSuffix">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="DisableFastUpToDateCheck"/>
</rng:start>
<rng:define name="DisableFastUpToDateCheck">
<rng:element name="DisableFastUpToDateCheck">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="DisableFastUpToDateCheck" _locComment="" -->Whether Visual Studio should do its own faster up-to-date check before Building, rather than invoke MSBuild to do a possibly more accurate one. You would set this to false if you have a heavily customized build process and builds in Visual Studio are not occurring when they should.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="DocumentationFile"/>
</rng:start>
<rng:define name="DocumentationFile">
<rng:element name="DocumentationFile">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="EnableASPDebugging"/>
</rng:start>
<rng:define name="EnableASPDebugging">
<rng:element name="EnableASPDebugging">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="EnableASPXDebugging"/>
</rng:start>
<rng:define name="EnableASPXDebugging">
<rng:element name="EnableASPXDebugging">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="EnableSQLServerDebugging"/>
</rng:start>
<rng:define name="EnableSQLServerDebugging">
<rng:element name="EnableSQLServerDebugging">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="EnableSecurityDebugging"/>
</rng:start>
<rng:define name="EnableSecurityDebugging">
<rng:element name="EnableSecurityDebugging">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="EnableUnmanagedDebugging"/>
</rng:start>
<rng:define name="EnableUnmanagedDebugging">
<rng:element name="EnableUnmanagedDebugging">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="EnforceCodeStyleInBuild"/>
</rng:start>
<rng:define name="EnforceCodeStyleInBuild">
<rng:element name="EnforceCodeStyleInBuild">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="EnforceCodeStyleInBuild" _locComment="" -->Controls whether code style analysis rules configured as warnings or errors should execute on build and report violations. The default is false.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="ErrorLog"/>
</rng:start>
<rng:define name="ErrorLog">
<rng:element name="ErrorLog">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="ErrorReport"/>
</rng:start>
<rng:define name="ErrorReport">
<rng:element name="ErrorReport">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="EmbedManifest"/>
</rng:start>
<rng:define name="EmbedManifest">
<rng:element name="EmbedManifest">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="ErrorReportUrl"/>
</rng:start>
<rng:define name="ErrorReportUrl">
<rng:element name="ErrorReportUrl">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="ExcludeDeploymentUrl"/>
</rng:start>
<rng:define name="ExcludeDeploymentUrl">
<rng:element name="ExcludeDeploymentUrl">
<rng:ref name="boolean"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="ExcludedPermissions"/>
</rng:start>
<rng:define name="ExcludedPermissions">
<rng:element name="ExcludedPermissions">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="FallbackCulture"/>
</rng:start>
<rng:define name="FallbackCulture">
<rng:element name="FallbackCulture">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="FileAlignment"/>
</rng:start>
<rng:define name="FileAlignment">
<rng:element name="FileAlignment">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="FileUpgradeFlags"/>
</rng:start>
<rng:define name="FileUpgradeFlags">
<rng:element name="FileUpgradeFlags">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="FormFactorID"/>
</rng:start>
<rng:define name="FormFactorID">
<rng:element name="FormFactorID">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="FrameworkPathOverride"/>
</rng:start>
<rng:define name="FrameworkPathOverride">
<rng:element name="FrameworkPathOverride">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="FrameworkPathOverride" _locComment="" -->Sets the /sdkpath switch for a VB project to the specified value
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="GenerateDocumentationFile"/>
</rng:start>
<rng:define name="GenerateDocumentationFile">
<rng:element name="GenerateDocumentationFile">
<rng:ref name="boolean"/>
      <a:documentation>
        <!-- _locID_text="GenerateDocumentationFile" _locComment="" -->Value indicating whether a documentation file will be generated by the compiler
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="GenerateManifests"/>
</rng:start>
<rng:define name="GenerateManifests">
<rng:element name="GenerateManifests">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="GenerateLibraryLayout"/>
</rng:start>
<rng:define name="GenerateLibraryLayout">
<rng:element name="GenerateLibraryLayout">
<rng:ref name="boolean"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="GeneratePackageOnBuild"/>
</rng:start>
<rng:define name="GeneratePackageOnBuild">
<rng:element name="GeneratePackageOnBuild">
<rng:ref name="boolean"/>
      <a:documentation>
        <!-- _locID_text="GeneratePackageOnBuild" _locComment="" -->Value indicating whether a NuGet package will be generated when the project is built
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="DisableXbfGeneration"/>
</rng:start>
<rng:define name="DisableXbfGeneration">
<rng:element name="DisableXbfGeneration">
<rng:ref name="boolean"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="SuppressXamlWarnings"/>
</rng:start>
<rng:define name="SuppressXamlWarnings">
<rng:element name="SuppressXamlWarnings">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="XamlRootsLog"/>
</rng:start>
<rng:define name="XamlRootsLog">
<rng:element name="XamlRootsLog">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="XamlSavedStateFilePath"/>
</rng:start>
<rng:define name="XamlSavedStateFilePath">
<rng:element name="XamlSavedStateFilePath">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="GenerateSerializationAssemblies"/>
</rng:start>
<rng:define name="GenerateSerializationAssemblies">
<rng:element name="GenerateSerializationAssemblies">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="HostInBrowser"/>
</rng:start>
<rng:define name="HostInBrowser">
<rng:element name="HostInBrowser">
<rng:ref name="boolean"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="IgnoreImportLibrary"/>
</rng:start>
<rng:define name="IgnoreImportLibrary">
<rng:element name="IgnoreImportLibrary">
<rng:ref name="boolean"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="ImplicitUsings"/>
</rng:start>
<rng:define name="ImplicitUsings">
<rng:element name="ImplicitUsings">
      <a:documentation>
        <!-- _locID_text="ImplicitUsings" _locComment="" -->Enable implicit global usings for the C# project. Possible values are enable, true, and disable.
      </a:documentation>

        <rng:choice>
          <rng:value>enable</rng:value>
          <rng:value>true</rng:value>
          <rng:value>disable</rng:value>
        </rng:choice>

    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="Install"/>
</rng:start>
<rng:define name="Install">
<rng:element name="Install">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="InstallFrom"/>
</rng:start>
<rng:define name="InstallFrom">
<rng:element name="InstallFrom">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="InstallFrom" _locComment="" -->Web, Unc, or Disk
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="AnalysisLevel"/>
</rng:start>
<rng:define name="AnalysisLevel">
<rng:element name="AnalysisLevel">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="InstallUrl"/>
</rng:start>
<rng:define name="InstallUrl">
<rng:element name="InstallUrl">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="IsCodeSharingProject"/>
</rng:start>
<rng:define name="IsCodeSharingProject">
<rng:element name="IsCodeSharingProject">
<rng:ref name="boolean"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="IsPackable"/>
</rng:start>
<rng:define name="IsPackable">
<rng:element name="IsPackable">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="IsPackable" _locComment="" -->Indicates whether the project can be used to create a NuGet package.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="EnableNETAnalyzers"/>
</rng:start>
<rng:define name="EnableNETAnalyzers">
<rng:element name="EnableNETAnalyzers">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="EnableNETAnalyzers" _locComment="" -->Indicates whether the .NET analyzers are enabled. They are enabled by default for projects that target .NET 5.0 or later.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="EnableDefaultCompileItems"/>
</rng:start>
<rng:define name="EnableDefaultCompileItems">
<rng:element name="EnableDefaultCompileItems">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="EnableDefaultCompileItems" _locComment="" -->Enable default Compile item globs for source files.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="EnableDefaultNoneItems"/>
</rng:start>
<rng:define name="EnableDefaultNoneItems">
<rng:element name="EnableDefaultNoneItems">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="EnableDefaultNoneItems" _locComment="" -->Enable default None item globs (which cover most files in the project not covered by other globs).
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="EnableDefaultItems"/>
</rng:start>
<rng:define name="EnableDefaultItems">
<rng:element name="EnableDefaultItems">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="EnableDefaultItems" _locComment="" -->Defaults to true, and if set to false will disable all default item globs.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="IsWebBootstrapper"/>
</rng:start>
<rng:define name="IsWebBootstrapper">
<rng:element name="IsWebBootstrapper">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="JCPA"/>
</rng:start>
<rng:define name="JCPA">
<rng:element name="JCPA">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="Keyword"/>
</rng:start>
<rng:define name="Keyword">
<rng:element name="Keyword">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="LangVersion"/>
</rng:start>
<rng:define name="LangVersion">
<rng:element name="LangVersion">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="VBRuntime"/>
</rng:start>
<rng:define name="VBRuntime">
<rng:element name="VBRuntime">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="Prefer32Bit"/>
</rng:start>
<rng:define name="Prefer32Bit">
<rng:element name="Prefer32Bit">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="HighEntropyVA"/>
</rng:start>
<rng:define name="HighEntropyVA">
<rng:element name="HighEntropyVA">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="LinkIncremental"/>
</rng:start>
<rng:define name="LinkIncremental">
<rng:element name="LinkIncremental">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="ManifestCertificateThumbprint"/>
</rng:start>
<rng:define name="ManifestCertificateThumbprint">
<rng:element name="ManifestCertificateThumbprint">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="ManifestKeyFile"/>
</rng:start>
<rng:define name="ManifestKeyFile">
<rng:element name="ManifestKeyFile">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="MapFileExtensions"/>
</rng:start>
<rng:define name="MapFileExtensions">
<rng:element name="MapFileExtensions">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="MapFileExtensions" _locComment="" -->boolean
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="MinimumRequiredVersion"/>
</rng:start>
<rng:define name="MinimumRequiredVersion">
<rng:element name="MinimumRequiredVersion">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="MinimumRequiredVersion" _locComment="" -->Matches the expression "\d\.\d\.\d\.\d"
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="MyType"/>
</rng:start>
<rng:define name="MyType">
<rng:element name="MyType">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="MSBuildAllProjects"/>
</rng:start>
<rng:define name="MSBuildAllProjects">
<rng:element name="MSBuildAllProjects">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="MSBuildTreatWarningsAsErrors"/>
</rng:start>
<rng:define name="MSBuildTreatWarningsAsErrors">
<rng:element name="MSBuildTreatWarningsAsErrors">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="MSBuildTreatWarningsAsErrors" _locComment="" -->Indicates whether to treat all warnings as errors when building a project.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="MSBuildWarningsAsMessages"/>
</rng:start>
<rng:define name="MSBuildWarningsAsMessages">
<rng:element name="MSBuildWarningsAsMessages">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="MSBuildWarningsAsMessages" _locComment="" -->Indicates a semicolon delimited list of warnings to treat as low importance messages when building a project.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="MSBuildWarningsAsErrors"/>
</rng:start>
<rng:define name="MSBuildWarningsAsErrors">
<rng:element name="MSBuildWarningsAsErrors">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="MSBuildWarningsAsErrors" _locComment="" -->Indicates a semicolon delimited list of warnings to treat as errors when building a project.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="NoConfig"/>
</rng:start>
<rng:define name="NoConfig">
<rng:element name="NoConfig">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="NoStandardLibraries"/>
</rng:start>
<rng:define name="NoStandardLibraries">
<rng:element name="NoStandardLibraries">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="NoStdLib"/>
</rng:start>
<rng:define name="NoStdLib">
<rng:element name="NoStdLib">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="NoStdLib" _locComment="" -->Whether standard libraries (such as mscorlib) should be referenced automatically (boolean)
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="NoWarn"/>
</rng:start>
<rng:define name="NoWarn">
<rng:element name="NoWarn">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="NoWarn" _locComment="" -->Comma separated list of disabled warnings
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="OldToolsVersion"/>
</rng:start>
<rng:define name="OldToolsVersion">
<rng:element name="OldToolsVersion">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="OutDir"/>
</rng:start>
<rng:define name="OutDir">
<rng:element name="OutDir">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="TargetExt"/>
</rng:start>
<rng:define name="TargetExt">
<rng:element name="TargetExt">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="TargetName"/>
</rng:start>
<rng:define name="TargetName">
<rng:element name="TargetName">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="OpenBrowserOnPublish"/>
</rng:start>
<rng:define name="OpenBrowserOnPublish">
<rng:element name="OpenBrowserOnPublish">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="OpenBrowserOnPublish" _locComment="" -->boolean
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="Optimize"/>
</rng:start>
<rng:define name="Optimize">
<rng:element name="Optimize">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="Optimize" _locComment="" -->Should compiler optimize output (boolean)
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="OptionCompare"/>
</rng:start>
<rng:define name="OptionCompare">
<rng:element name="OptionCompare">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="OptionCompare" _locComment="" -->Option Compare setting (Text or Binary)
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="OptionExplicit"/>
</rng:start>
<rng:define name="OptionExplicit">
<rng:element name="OptionExplicit">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="OptionExplicit" _locComment="" -->Should Option Explicit be set (On or Off)
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="OptionStrict"/>
</rng:start>
<rng:define name="OptionStrict">
<rng:element name="OptionStrict">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="OptionStrict" _locComment="" -->Should Option Strict be set (On or Off)
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="OptionInfer"/>
</rng:start>
<rng:define name="OptionInfer">
<rng:element name="OptionInfer">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="OptionInfer" _locComment="" -->Should Option Infer be set (On or Off)
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="OSVersion"/>
</rng:start>
<rng:define name="OSVersion">
<rng:element name="OSVersion">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="OutputPath"/>
</rng:start>
<rng:define name="OutputPath">
<rng:element name="OutputPath">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="OutputPath" _locComment="" -->Path to output folder, with trailing slash
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="OutputType"/>
</rng:start>
<rng:define name="OutputType">
<rng:element name="OutputType">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="OutputType" _locComment="" -->Type of output to generate (WinExe, Exe, or Library)
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="PackageOutputPath"/>
</rng:start>
<rng:define name="PackageOutputPath">
<rng:element name="PackageOutputPath">
      <a:documentation>
        <!-- _locID_text="PackageOutputPath" -->Path to the output folder for the package generated when calling Pack.
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="PackageTargetFallback"/>
</rng:start>
<rng:define name="PackageTargetFallback">
<rng:element name="PackageTargetFallback">
      <a:documentation>
        <!-- _locID_text="PackageTargetFallback" _locComment="" -->Allows packages using alternative monikers to be referenced in this project, which include older (e.g. dnxcore50, dotnet5.x) and Portable Class Library names.
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="PackAsTool"/>
</rng:start>
<rng:define name="PackAsTool">
<rng:element name="PackAsTool">
<rng:ref name="boolean"/>
      <a:documentation>
        <!-- _locID_text="PackAsTool" _locComment="" -->Indicate whether the NuGet package should be configured as a .NET tool suitable for use with "dotnet tool install".
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="AssetTargetFallback"/>
</rng:start>
<rng:define name="AssetTargetFallback">
<rng:element name="AssetTargetFallback">
<rng:ref name="StringPropertyType"/>
      <a:documentation>
        <!-- _locID_text="AssetTargetFallback" _locComment="" -->Can be set to one or more target framework monikers. When determining package compatibility, if the package does not have compatible assets for the project's real target framework, compatibility will be rechecked using each target framework from the AssetTargetFramework project of the referencing project.
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="Nullable"/>
</rng:start>
<rng:define name="Nullable">
<rng:element name="Nullable">
      <a:documentation>
        <!-- _locID_text="Nullable" _locComment="" -->Set the nullable annotations and warnings context for the C# project. Possible values are enable, disable, warnings and annotations.
      </a:documentation>

        <rng:choice>
          <rng:value>enable</rng:value>
          <rng:value>disable</rng:value>
          <rng:value>warnings</rng:value>
          <rng:value>annotations</rng:value>
        </rng:choice>

    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="Platform"/>
</rng:start>
<rng:define name="Platform">
<rng:element name="Platform">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="PlatformName"/>
</rng:start>
<rng:define name="PlatformName">
<rng:element name="PlatformName">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="PlatformFamilyName"/>
</rng:start>
<rng:define name="PlatformFamilyName">
<rng:element name="PlatformFamilyName">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="PlatformID"/>
</rng:start>
<rng:define name="PlatformID">
<rng:element name="PlatformID">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="PlatformTarget"/>
</rng:start>
<rng:define name="PlatformTarget">
<rng:element name="PlatformTarget">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="PlatformToolset"/>
</rng:start>
<rng:define name="PlatformToolset">
<rng:element name="PlatformToolset">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="PostBuildEvent"/>
</rng:start>
<rng:define name="PostBuildEvent">
<rng:element name="PostBuildEvent">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="PostBuildEvent" _locComment="" -->Command line to be run at the end of build
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="PreBuildEvent"/>
</rng:start>
<rng:define name="PreBuildEvent">
<rng:element name="PreBuildEvent">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="PreBuildEvent" _locComment="" -->Command line to be run at the start of build
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="PreserveCompilationContext"/>
</rng:start>
<rng:define name="PreserveCompilationContext">
<rng:element name="PreserveCompilationContext">
<rng:ref name="boolean"/>
      <a:documentation>
        <!-- _locID_text="PreserveCompilationContext" _locComment="" -->Value indicating whether reference assemblies can be used in dynamic compilation
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="ProduceReferenceAssemblies"/>
</rng:start>
<rng:define name="ProduceReferenceAssemblies">
<rng:element name="ProduceReferenceAssemblies">
<rng:ref name="boolean"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="ProductName"/>
</rng:start>
<rng:define name="ProductName">
<rng:element name="ProductName">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="ProductVersion"/>
</rng:start>
<rng:define name="ProductVersion">
<rng:element name="ProductVersion">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="ProjectGuid"/>
</rng:start>
<rng:define name="ProjectGuid">
<rng:element name="ProjectGuid">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="ProjectType"/>
</rng:start>
<rng:define name="ProjectType">
<rng:element name="ProjectType">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="ProjectTypeGuids"/>
</rng:start>
<rng:define name="ProjectTypeGuids">
<rng:element name="ProjectTypeGuids">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="PublisherName"/>
</rng:start>
<rng:define name="PublisherName">
<rng:element name="PublisherName">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="PublishUrl"/>
</rng:start>
<rng:define name="PublishUrl">
<rng:element name="PublishUrl">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="RecursePath"/>
</rng:start>
<rng:define name="RecursePath">
<rng:element name="RecursePath">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="ReferencePath"/>
</rng:start>
<rng:define name="ReferencePath">
<rng:element name="ReferencePath">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="ReferencePath" _locComment="" -->Semi-colon separated list of folders to search during reference resolution
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="RegisterForComInterop"/>
</rng:start>
<rng:define name="RegisterForComInterop">
<rng:element name="RegisterForComInterop">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="RemoteDebugEnabled"/>
</rng:start>
<rng:define name="RemoteDebugEnabled">
<rng:element name="RemoteDebugEnabled">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="RemoteDebugMachine"/>
</rng:start>
<rng:define name="RemoteDebugMachine">
<rng:element name="RemoteDebugMachine">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="RemoveIntegerChecks"/>
</rng:start>
<rng:define name="RemoveIntegerChecks">
<rng:element name="RemoveIntegerChecks">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="ReportAnalyzer"/>
</rng:start>
<rng:define name="ReportAnalyzer">
<rng:element name="ReportAnalyzer">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
      <rng:start combine="choice">
<rng:ref name="RepositoryType"/>
</rng:start>
<rng:define name="RepositoryType">
<rng:element name="RepositoryType">
<rng:ref name="StringPropertyType"/>
      <a:documentation>
        <!-- _locID_text="RepositoryType" _locComment="" -->The type of the repository where the project is stored (e.g. git)
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="RepositoryUrl"/>
</rng:start>
<rng:define name="RepositoryUrl">
<rng:element name="RepositoryUrl">
<rng:ref name="StringPropertyType"/>
      <a:documentation>
        <!-- _locID_text="RepositoryUrl" _locComment="" -->The URL for the repository where the project is stored
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="ResponseFile"/>
</rng:start>
<rng:define name="ResponseFile">
<rng:element name="ResponseFile">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="RunAnalyzers"/>
</rng:start>
<rng:define name="RunAnalyzers">
<rng:element name="RunAnalyzers">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="RunAnalyzers" _locComment="" -->Disables analyzers at both build and design time. This property takes precedence over RunAnalyzersDuringBuild and RunAnalyzersDuringLiveAnalysis. Default is true.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="RunAnalyzersDuringBuild"/>
</rng:start>
<rng:define name="RunAnalyzersDuringBuild">
<rng:element name="RunAnalyzersDuringBuild">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="RunAnalyzersDuringBuild" _locComment="" -->Controls whether analyzers run at build time. Default is true.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="RunAnalyzersDuringLiveAnalysis"/>
</rng:start>
<rng:define name="RunAnalyzersDuringLiveAnalysis">
<rng:element name="RunAnalyzersDuringLiveAnalysis">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="RunAnalyzersDuringLiveAnalysis" _locComment="" -->Controls whether analyzers analyze code live at design time. Default is true.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="RootNamespace"/>
</rng:start>
<rng:define name="RootNamespace">
<rng:element name="RootNamespace">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="RuntimeIdentifier"/>
</rng:start>
<rng:define name="RuntimeIdentifier">
<rng:element name="RuntimeIdentifier">
<rng:ref name="StringPropertyType"/>
      <a:documentation>
        <!-- _locID_text="RuntimeIdentifier" _locComment="" -->Runtime identifier supported by the project (e.g. win10-x64)
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="RuntimeIdentifiers"/>
</rng:start>
<rng:define name="RuntimeIdentifiers">
<rng:element name="RuntimeIdentifiers">
<rng:ref name="StringPropertyType"/>
      <a:documentation>
        <!-- _locID_text="RuntimeIdentifiers" _locComment="" -->Semi-colon separated list of runtime identifiers supported by the project (e.g. win10-x64;osx.10.11-x64;ubuntu.16.04-x64)
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="SccProjectName"/>
</rng:start>
<rng:define name="SccProjectName">
<rng:element name="SccProjectName">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="SccLocalPath"/>
</rng:start>
<rng:define name="SccLocalPath">
<rng:element name="SccLocalPath">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="SccProvider"/>
</rng:start>
<rng:define name="SccProvider">
<rng:element name="SccProvider">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="RunCodeAnalysis"/>
</rng:start>
<rng:define name="RunCodeAnalysis">
<rng:element name="RunCodeAnalysis">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="RunCodeAnalysis" _locComment="" -->Indicates whether to run Code Analysis during the build.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="RunPostBuildEvent"/>
</rng:start>
<rng:define name="RunPostBuildEvent">
<rng:element name="RunPostBuildEvent">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="SchemaVersion"/>
</rng:start>
<rng:define name="SchemaVersion">
<rng:element name="SchemaVersion">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="SecureScoping"/>
</rng:start>
<rng:define name="SecureScoping">
<rng:element name="SecureScoping">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="SignAssembly"/>
</rng:start>
<rng:define name="SignAssembly">
<rng:element name="SignAssembly">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="SignManifests"/>
</rng:start>
<rng:define name="SignManifests">
<rng:element name="SignManifests">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="SolutionDir"/>
</rng:start>
<rng:define name="SolutionDir">
<rng:element name="SolutionDir">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="SolutionExt"/>
</rng:start>
<rng:define name="SolutionExt">
<rng:element name="SolutionExt">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="SolutionFileName"/>
</rng:start>
<rng:define name="SolutionFileName">
<rng:element name="SolutionFileName">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="SolutionName"/>
</rng:start>
<rng:define name="SolutionName">
<rng:element name="SolutionName">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="SolutionPath"/>
</rng:start>
<rng:define name="SolutionPath">
<rng:element name="SolutionPath">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="StartAction"/>
</rng:start>
<rng:define name="StartAction">
<rng:element name="StartAction">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="StartArguments"/>
</rng:start>
<rng:define name="StartArguments">
<rng:element name="StartArguments">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="StartPage"/>
</rng:start>
<rng:define name="StartPage">
<rng:element name="StartPage">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="StartProgram"/>
</rng:start>
<rng:define name="StartProgram">
<rng:element name="StartProgram">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="StartURL"/>
</rng:start>
<rng:define name="StartURL">
<rng:element name="StartURL">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="StartWithIE"/>
</rng:start>
<rng:define name="StartWithIE">
<rng:element name="StartWithIE">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="StartWorkingDirectory"/>
</rng:start>
<rng:define name="StartWorkingDirectory">
<rng:element name="StartWorkingDirectory">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="StartupObject"/>
</rng:start>
<rng:define name="StartupObject">
<rng:element name="StartupObject">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="StartupObject" _locComment="" -->Type that contains the main entry point
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="SuiteName"/>
</rng:start>
<rng:define name="SuiteName">
<rng:element name="SuiteName">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="SupportUrl"/>
</rng:start>
<rng:define name="SupportUrl">
<rng:element name="SupportUrl">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="TargetFrameworkProfile"/>
</rng:start>
<rng:define name="TargetFrameworkProfile">
<rng:element name="TargetFrameworkProfile">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="TargetCulture"/>
</rng:start>
<rng:define name="TargetCulture">
<rng:element name="TargetCulture">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="TargetFramework"/>
</rng:start>
<rng:define name="TargetFramework">
<rng:element name="TargetFramework">
<rng:ref name="StringPropertyType"/>
      <a:documentation>
        <!-- _locID_text="TargetFramework" _locComment="" -->Framework that this project targets. Must be a Target Framework Moniker (e.g. netcoreapp1.0)
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="TargetFrameworks"/>
</rng:start>
<rng:define name="TargetFrameworks">
<rng:element name="TargetFrameworks">
<rng:ref name="StringPropertyType"/>
      <a:documentation>
        <!-- _locID_text="TargetFrameworks" _locComment="" -->Semi-colon separated list of frameworks that this project targets. Must be a Target Framework Moniker (e.g. netcoreapp1.0;net461)
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="TargetFrameworkVersion"/>
</rng:start>
<rng:define name="TargetFrameworkVersion">
<rng:element name="TargetFrameworkVersion">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="TargetPlatformIdentifier"/>
</rng:start>
<rng:define name="TargetPlatformIdentifier">
<rng:element name="TargetPlatformIdentifier">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="TargetPlatformVersion"/>
</rng:start>
<rng:define name="TargetPlatformVersion">
<rng:element name="TargetPlatformVersion">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="TargetPlatformMinVersion"/>
</rng:start>
<rng:define name="TargetPlatformMinVersion">
<rng:element name="TargetPlatformMinVersion">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="TargetZone"/>
</rng:start>
<rng:define name="TargetZone">
<rng:element name="TargetZone">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="ToolCommandName"/>
</rng:start>
<rng:define name="ToolCommandName">
<rng:element name="ToolCommandName">
<rng:ref name="StringPropertyType"/>
      <a:documentation>
        <!-- _locID_text="ToolCommandName" -->Specifies the command that will invoke the tool after it's installed.
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="TreatWarningsAsErrors"/>
</rng:start>
<rng:define name="TreatWarningsAsErrors">
<rng:element name="TreatWarningsAsErrors">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="TrustUrlParameters"/>
</rng:start>
<rng:define name="TrustUrlParameters">
<rng:element name="TrustUrlParameters">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="TrustUrlParameters" _locComment="" -->boolean
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="TypeComplianceDiagnostics"/>
</rng:start>
<rng:define name="TypeComplianceDiagnostics">
<rng:element name="TypeComplianceDiagnostics">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="UICulture"/>
</rng:start>
<rng:define name="UICulture">
<rng:element name="UICulture">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="UpgradeBackupLocation"/>
</rng:start>
<rng:define name="UpgradeBackupLocation">
<rng:element name="UpgradeBackupLocation">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="UpdateEnabled"/>
</rng:start>
<rng:define name="UpdateEnabled">
<rng:element name="UpdateEnabled">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="UpdateEnabled" _locComment="" -->boolean
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="UpdateInterval"/>
</rng:start>
<rng:define name="UpdateInterval">
<rng:element name="UpdateInterval">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="UpdateIntervalUnits"/>
</rng:start>
<rng:define name="UpdateIntervalUnits">
<rng:element name="UpdateIntervalUnits">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="UpdateIntervalUnits" _locComment="" -->Hours, Days, or Weeks
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="UpdateMode"/>
</rng:start>
<rng:define name="UpdateMode">
<rng:element name="UpdateMode">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="UpdateMode" _locComment="" -->Foreground or Background
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="UpdatePeriodically"/>
</rng:start>
<rng:define name="UpdatePeriodically">
<rng:element name="UpdatePeriodically">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="UpdatePeriodically" _locComment="" -->boolean
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="UpdateRequired"/>
</rng:start>
<rng:define name="UpdateRequired">
<rng:element name="UpdateRequired">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="UpdateRequired" _locComment="" -->boolean
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="UpdateUrl"/>
</rng:start>
<rng:define name="UpdateUrl">
<rng:element name="UpdateUrl">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="UseAppConfigForCompiler"/>
</rng:start>
<rng:define name="UseAppConfigForCompiler">
<rng:element name="UseAppConfigForCompiler">
<rng:ref name="boolean"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="UseApplicationTrust"/>
</rng:start>
<rng:define name="UseApplicationTrust">
<rng:element name="UseApplicationTrust">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="UseOfMfc"/>
</rng:start>
<rng:define name="UseOfMfc">
<rng:element name="UseOfMfc">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="UseOfAtl"/>
</rng:start>
<rng:define name="UseOfAtl">
<rng:element name="UseOfAtl">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="UseWindowsForms"/>
</rng:start>
<rng:define name="UseWindowsForms">
<rng:element name="UseWindowsForms">
<rng:ref name="boolean"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="UseWPF"/>
</rng:start>
<rng:define name="UseWPF">
<rng:element name="UseWPF">
<rng:ref name="boolean"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="UseVSHostingProcess"/>
</rng:start>
<rng:define name="UseVSHostingProcess">
<rng:element name="UseVSHostingProcess">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="UTF8OutPut"/>
</rng:start>
<rng:define name="UTF8OutPut">
<rng:element name="UTF8OutPut">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="VCTargetsPath"/>
</rng:start>
<rng:define name="VCTargetsPath">
<rng:element name="VCTargetsPath">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="VSTO_TrustAssembliesLocation"/>
</rng:start>
<rng:define name="VSTO_TrustAssembliesLocation">
<rng:element name="VSTO_TrustAssembliesLocation">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="WarningLevel"/>
</rng:start>
<rng:define name="WarningLevel">
<rng:element name="WarningLevel">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="WarningLevel" _locComment="" -->integer between 0 and 5 inclusive
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="WarningsAsErrors"/>
</rng:start>
<rng:define name="WarningsAsErrors">
<rng:element name="WarningsAsErrors">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="WarningsAsErrors" _locComment="" -->Comma separated list of warning numbers to treat as errors
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="WebPage"/>
</rng:start>
<rng:define name="WebPage">
<rng:element name="WebPage">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="Win32ResourceFile"/>
</rng:start>
<rng:define name="Win32ResourceFile">
<rng:element name="Win32ResourceFile">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="WholeProgramOptimization"/>
</rng:start>
<rng:define name="WholeProgramOptimization">
<rng:element name="WholeProgramOptimization">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="TieredCompilation"/>
</rng:start>
<rng:define name="TieredCompilation">
<rng:element name="TieredCompilation">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="TieredCompilation" _locComment="" -->Indicates whether the runtime should enable tiered JIT compilation.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="ServerGarbageCollection"/>
</rng:start>
<rng:define name="ServerGarbageCollection">
<rng:element name="ServerGarbageCollection">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="ServerGarbageCollection" _locComment="" -->Indicates whether the runtime should enable the server garbage collection mode.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="UserSecretsId"/>
</rng:start>
<rng:define name="UserSecretsId">
<rng:element name="UserSecretsId">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="UserSecretsId" _locComment="" -->The ID that will be used to locate the file storing secret configuration values for this project at development time.
        </a:documentation>
    </rng:element>
</rng:define>

    <!-- ======================== RAZOR PROPERTIES ======================== -->
    <rng:start combine="choice">
<rng:ref name="RazorCompileOnBuild"/>
</rng:start>
<rng:define name="RazorCompileOnBuild">
<rng:element name="RazorCompileOnBuild">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="RazorCompileOnBuild" _locComment="" -->Indicates whether Razor files should be compiled at build time.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="RazorCompileOnPublish"/>
</rng:start>
<rng:define name="RazorCompileOnPublish">
<rng:element name="RazorCompileOnPublish">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="RazorCompileOnPublish" _locComment="" -->Indicates whether Razor files should be compiled at publish time.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="UseRazorBuildServer"/>
</rng:start>
<rng:define name="UseRazorBuildServer">
<rng:element name="UseRazorBuildServer">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="UseRazorBuildServer" _locComment="" -->Indicates whether Razor code generation should use a persistent build server process.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="RazorOutputPath"/>
</rng:start>
<rng:define name="RazorOutputPath">
<rng:element name="RazorOutputPath">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="RazorOutputPath" _locComment="" -->Directory for Razor output.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="EnableDefaultRazorGenerateItems"/>
</rng:start>
<rng:define name="EnableDefaultRazorGenerateItems">
<rng:element name="EnableDefaultRazorGenerateItems">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="EnableDefaultRazorGenerateItems" _locComment="" -->Set to true to automatically include Razor (.cshtml) files in @(RazorGenerate) from @(Content).
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="EnableDefaultContentItems"/>
</rng:start>
<rng:define name="EnableDefaultContentItems">
<rng:element name="EnableDefaultContentItems">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="EnableDefaultContentItems" _locComment="" -->Set to true to automatically include certain file types, such as .cshtml files, as content in the project. When referenced via Microsoft.NET.Sdk.Web, this additionally includes all files under wwwroot, and any config files.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="EnableDefaultRazorComponentItems"/>
</rng:start>
<rng:define name="EnableDefaultRazorComponentItems">
<rng:element name="EnableDefaultRazorComponentItems">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="EnableDefaultRazorComponentItems" _locComment="" -->Set to true to automatically include Razor (.razor) files in @(RazorComponent) from @(Content).
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CopyRazorGenerateFilesToPublishDirectory"/>
</rng:start>
<rng:define name="CopyRazorGenerateFilesToPublishDirectory">
<rng:element name="CopyRazorGenerateFilesToPublishDirectory">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="CopyRazorGenerateFilesToPublishDirectory" _locComment="" -->Set to true to copy RazorGenerate items (.cshtml) to the publish directory. Typically Razor files are not needed for a published application if they participate in compilation at build-time or publish-time. By default, the Razor SDK will suppress the copying of RazorGenerate items to the publish directory.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CopyRefAssembliesToPublishDirectory"/>
</rng:start>
<rng:define name="CopyRefAssembliesToPublishDirectory">
<rng:element name="CopyRefAssembliesToPublishDirectory">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="CopyRefAssembliesToPublishDirectory" _locComment="" -->Set to true to copy reference assembly items to the publish directory. Typically reference assemblies are not needed for a published application if Razor compilation occurs at build-time or publish-time. By default, the Razor SDK will suppress the copying of reference assemblies to the publish directory.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="IncludeRazorContentInPack"/>
</rng:start>
<rng:define name="IncludeRazorContentInPack">
<rng:element name="IncludeRazorContentInPack">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="IncludeRazorContentInPack" _locComment="" -->Configures whether all Razor content items (.cshtml files) will be marked to be included in the produced NuGet package as content. All Content items are included in a NuGet package as content files. This setting can be used to control this behavior for Razor content items.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="RazorTargetName"/>
</rng:start>
<rng:define name="RazorTargetName">
<rng:element name="RazorTargetName">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="RazorTargetName" _locComment="" -->File name (without extension) of the assembly produced by Razor.
        </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="EmbedRazorGenerateSources"/>
</rng:start>
<rng:define name="EmbedRazorGenerateSources">
<rng:element name="EmbedRazorGenerateSources">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="EmbedRazorGenerateSources" _locComment="" -->Configures whether all of the @(RazorGenerate) items will be added as embedded files to the produced assembly. When true, everything in @(RazorGenerate) will be added to @(RazorEmbeddedFiles) and passed to CSC.
        </a:documentation>
    </rng:element>
</rng:define>

    <!-- ======================== gRPC properties ======================== -->
    <rng:start combine="choice">
<rng:ref name="DisableProtobufDesignTimeBuild"/>
</rng:start>
<rng:define name="DisableProtobufDesignTimeBuild">
<rng:element name="DisableProtobufDesignTimeBuild">
<rng:ref name="boolean"/>
        <a:documentation>
            <!-- _locID_text="DisableProtobufDesignTimeBuild" _locComment="" -->Indicates whether Design Time Build should be disabled for referenced @(Protobuf) files.
        </a:documentation>
    </rng:element>
</rng:define>

    <!-- ======================== DOTNET PACK PROPERTIES =====================================-->
    <rng:start combine="choice">
<rng:ref name="AssemblyTitle"/>
</rng:start>
<rng:define name="AssemblyTitle">
<rng:element name="AssemblyTitle">
<rng:ref name="StringPropertyType"/>
      <a:documentation>
        <!-- _locID_text="AssemblyTitle" _locComment="" -->Description for the assembly manifest
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="AssemblyVersion"/>
</rng:start>
<rng:define name="AssemblyVersion">
<rng:element name="AssemblyVersion">
<rng:ref name="StringPropertyType"/>
      <a:documentation>
        <!-- _locID_text="AssemblyVersion" _locComment="" -->Numeric value of the version for the assembly manifest in the format major.minor.patch (e.g. 2.4.0)
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="Authors"/>
</rng:start>
<rng:define name="Authors">
<rng:element name="Authors">
<rng:ref name="StringPropertyType"/>
      <a:documentation>
        <!-- _locID_text="Copyright" _locComment="" -->A comma-separated list of NuGet packages authors
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="Company"/>
</rng:start>
<rng:define name="Company">
<rng:element name="Company">
<rng:ref name="StringPropertyType"/>
      <a:documentation>
        <!-- _locID_text="Company" _locComment="" -->Company name for the assembly manifest
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="Copyright"/>
</rng:start>
<rng:define name="Copyright">
<rng:element name="Copyright">
<rng:ref name="StringPropertyType"/>
      <a:documentation>
        <!-- _locID_text="Copyright" _locComment="" -->Copyright details for the NuGet package
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="Description"/>
</rng:start>
<rng:define name="Description">
<rng:element name="Description">
<rng:ref name="StringPropertyType"/>
      <a:documentation>
        <!-- _locID_text="Description" _locComment="" -->A long description of the NuGet package for UI display
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="FileVersion"/>
</rng:start>
<rng:define name="FileVersion">
<rng:element name="FileVersion">
<rng:ref name="StringPropertyType"/>
      <a:documentation>
        <!-- _locID_text="FileVersion" _locComment="" -->Numeric value of the version for the assembly manifest in the format major.minor.build.revision (e.g. 2.4.0.1)
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="InformationalVersion"/>
</rng:start>
<rng:define name="InformationalVersion">
<rng:element name="InformationalVersion">
<rng:ref name="StringPropertyType"/>
      <a:documentation>
        <!-- _locID_text="InformationalVersion" _locComment="" -->Product version of the assembly for UI display (e.g. 1.0 Beta)
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="NeutralLanguage"/>
</rng:start>
<rng:define name="NeutralLanguage">
<rng:element name="NeutralLanguage">
<rng:ref name="StringPropertyType"/>
      <a:documentation>
        <!-- _locID_text="NeutralLanguage" _locComment="" -->The locale ID for the NuGet package
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="PackageIconUrl"/>
</rng:start>
<rng:define name="PackageIconUrl">
<rng:element name="PackageIconUrl">
<rng:ref name="StringPropertyType"/>
      <a:documentation>
        <!-- _locID_text="PackageIconUrl" _locComment="" -->The URL for a 64x64 image with transparent background to use as the icon for the NuGet package in UI display
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="PackageId"/>
</rng:start>
<rng:define name="PackageId">
<rng:element name="PackageId">
<rng:ref name="StringPropertyType"/>
      <a:documentation>
        <!-- _locID_textPackageId _locComment="" -->The case-insensitive NuGet package identifier, which must be unique across nuget.org or whatever gallery the NuGet package will reside in. IDs may not contain spaces or characters that are not valid for a URL, and generally follow .NET namespace rules.
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="Title"/>
</rng:start>
<rng:define name="Title">
<rng:element name="Title">
<rng:ref name="StringPropertyType"/>
      <a:documentation>
        <!-- _locID_textTitle _locComment="" -->A human-friendly title of the package, typically used in UI displays as on nuget.org and the Package Manager in Visual Studio. If not specified, the package ID is used instead.
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="PackageLicenseUrl"/>
</rng:start>
<rng:define name="PackageLicenseUrl">
<rng:element name="PackageLicenseUrl">
<rng:ref name="StringPropertyType"/>
      <a:documentation>
        <!-- _locID_text="PackageLicenseUrl" _locComment="" -->The URL for the NuGet package's license, often shown in UI displays as well as nuget.org
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="PackageProjectUrl"/>
</rng:start>
<rng:define name="PackageProjectUrl">
<rng:element name="PackageProjectUrl">
<rng:ref name="StringPropertyType"/>
      <a:documentation>
        <!-- _locID_text="PackageProjectUrl" _locComment="" -->The URL for the NuGet package's home page, often shown in UI displays as well as nuget.org
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="PackageReleaseNotes"/>
</rng:start>
<rng:define name="PackageReleaseNotes">
<rng:element name="PackageReleaseNotes">
<rng:ref name="StringPropertyType"/>
      <a:documentation>
        <!-- _locID_text="PackageReleaseNotes" _locComment="" -->A description of the changes made in this release of the NuGet package, often used in UI like the Updates tab of the Visual Studio Package Manager in place of the package description
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="PackageRequireLicenseAcceptance"/>
</rng:start>
<rng:define name="PackageRequireLicenseAcceptance">
<rng:element name="PackageRequireLicenseAcceptance">
<rng:ref name="boolean"/>
      <a:documentation>
        <!-- _locID_text="PackageRequireLicenseAcceptance" _locComment="" -->Value indicating whether the client must prompt the consumer to accept the NuGet package license before installing the package
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="PackageTags"/>
</rng:start>
<rng:define name="PackageTags">
<rng:element name="PackageTags">
<rng:ref name="StringPropertyType"/>
      <a:documentation>
        <!-- _locID_text="PackageTags" _locComment="" -->A space-delimited list of tags and keywords that describe the NuGet package and aid discoverability of NuGet packages through search and filtering mechanisms
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="PackageVersion"/>
</rng:start>
<rng:define name="PackageVersion">
<rng:element name="PackageVersion">
<rng:ref name="StringPropertyType"/>
      <a:documentation>
        <!-- _locID_text="PackageVersion" _locComment="" -->Numeric value of the NuGet package version in the format major.minor.patch pattern (e.g. 1.0.1). Version numbers may include a pre-release suffix (e.g. 1.0.1-beta)
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="Product"/>
</rng:start>
<rng:define name="Product">
<rng:element name="Product">
<rng:ref name="StringPropertyType"/>
      <a:documentation>
        <!-- _locID_text="Product" _locComment="" -->Product name information for the assembly manifest
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="Version"/>
</rng:start>
<rng:define name="Version">
<rng:element name="Version">
<rng:ref name="StringPropertyType"/>
      <a:documentation>
        <!-- _locID_text="Version" _locComment="" -->Numeric value of the version in the format major.minor.patch (e.g. 2.4.0)
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="VersionPrefix"/>
</rng:start>
<rng:define name="VersionPrefix">
<rng:element name="VersionPrefix">
<rng:ref name="StringPropertyType"/>
      <a:documentation>
        <!-- _locID_text="VersionPrefix" _locComment="" -->When Version is not specified, VersionPrefix represents the first fragment of the version string (e.g. 1.0.0). The syntax is VersionPrefix[-VersionSuffix].
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="VersionSuffix"/>
</rng:start>
<rng:define name="VersionSuffix">
<rng:element name="VersionSuffix">
<rng:ref name="StringPropertyType"/>
      <a:documentation>
        <!-- _locID_text="VersionSuffix" _locComment="" -->When Version is not specified, VersionSuffix represents the second fragment of the version string (e.g. beta). The syntax is VersionPrefix[-VersionSuffix].
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="RestoreSources"/>
</rng:start>
<rng:define name="RestoreSources">
<rng:element name="RestoreSources">
<rng:ref name="StringPropertyType"/>
      <a:documentation>
        <!-- _locID_text="RestoreSources" _locComment="" -->The feeds that NuGet will use for restoring packages for this project.
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="PackageLicenseExpression"/>
</rng:start>
<rng:define name="PackageLicenseExpression">
<rng:element name="PackageLicenseExpression">
<rng:ref name="StringPropertyType"/>
      <a:documentation>
        <!-- _locID_text="PackageLicenseExpression" _locComment="" -->The project license's SPDX identifier. Only OSI and FSF approved licenses can use an identifier. Other licenses should use PackageLicenseFile.
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="PackageLicenseFile"/>
</rng:start>
<rng:define name="PackageLicenseFile">
<rng:element name="PackageLicenseFile">
<rng:ref name="StringPropertyType"/>
      <a:documentation>
        <!-- _locID_text="PackageLicenseFile" _locComment="" -->A path to the package's license file. Should only be used when the package doesn't use an OSI or FSF approved license.
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="PackageType"/>
</rng:start>
<rng:define name="PackageType">
<rng:element name="PackageType">
<rng:ref name="StringPropertyType"/>
      <a:documentation>
        <!-- _locID_text="PackageType" _locComment="" -->Indicates what the intended package use is, e.g. .NET CLI global tool, standard dependency, etc.
      </a:documentation>
    </rng:element>
</rng:define>

    <!-- ======================== Publish properties =====================================-->

    <rng:start combine="choice">
<rng:ref name="PublishReadyToRun"/>
</rng:start>
<rng:define name="PublishReadyToRun">
<rng:element name="PublishReadyToRun">
<rng:ref name="boolean"/>
      <a:documentation>
        <!-- _locID_text="PublishReadyToRun" _locComment="" -->Indicates whether the project should produce ReadyToRun images during publish.
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="PublishSingleFile"/>
</rng:start>
<rng:define name="PublishSingleFile">
<rng:element name="PublishSingleFile">
<rng:ref name="boolean"/>
      <a:documentation>
        <!-- _locID_text="PublishSingleFile" _locComment="" -->Indicates whether the project should produce a self-extracting executable during publish.
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="PublishTrimmed"/>
</rng:start>
<rng:define name="PublishTrimmed">
<rng:element name="PublishTrimmed">
<rng:ref name="boolean"/>
      <a:documentation>
        <!-- _locID_text="PublishTrimmed" _locComment="" -->Indicates whether the project should produce trimmed assembly images during publish.
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="TrimmerRootAssembly"/>
</rng:start>
<rng:define name="TrimmerRootAssembly">
<rng:element name="TrimmerRootAssembly">
<rng:ref name="StringPropertyType"/>
      <a:documentation>
        <!-- _locID_text="TrimmerRootAssembly" _locComment="" -->Indicates to the linker to explicitly keep an assembly by adding it to your csproj (use the assembly name without extension).
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="TrimmerRootDescriptor"/>
</rng:start>
<rng:define name="TrimmerRootDescriptor">
<rng:element name="TrimmerRootDescriptor">
<rng:ref name="StringPropertyType"/>
      <a:documentation>
        <!-- _locID_text="TrimmerRootDescriptor" _locComment="" -->Gives the linker a more specific list of types/methods, etc. to include. Path to an xml file.
      </a:documentation>
    </rng:element>
</rng:define>

    <!-- ======================== XAMARIN.ANDROID PROPERTIES ======================== -->

    <rng:start combine="choice">
<rng:ref name="AndroidApplication"/>
</rng:start>
<rng:define name="AndroidApplication">
<rng:element name="AndroidApplication">
<rng:ref name="boolean"/>
      <a:documentation>
        <!-- _locID_text="AndroidApplication" _locComment="" -->Used by Xamarin.Android projects. A boolean value that indicates whether the project is for an Android Application (True) or for an Android Library Project (False or not present).
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="AndroidDexTool"/>
</rng:start>
<rng:define name="AndroidDexTool">
<rng:element name="AndroidDexTool">
      <a:documentation>
        <!-- _locID_text="AndroidDexTool" _locComment="" -->Used by Xamarin.Android projects. A string property that indicates which Android dex compiler is used during the Xamarin.Android build process.
      </a:documentation>

        <rng:choice>
          <rng:value>d8</rng:value>
          <rng:value>dx</rng:value>
        </rng:choice>

    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="AndroidEnableProfiledAot"/>
</rng:start>
<rng:define name="AndroidEnableProfiledAot">
<rng:element name="AndroidEnableProfiledAot">
<rng:ref name="boolean"/>
      <a:documentation>
        <!-- _locID_text="AndroidEnableProfiledAot" _locComment="" -->Used by Xamarin.Android projects. A boolean property that determines whether or not AOT profiles are used during Ahead-of-Time compilation.
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="AndroidLinkMode"/>
</rng:start>
<rng:define name="AndroidLinkMode">
<rng:element name="AndroidLinkMode">
      <a:documentation>
        <!-- _locID_text="AndroidLinkMode" _locComment="" -->Used by Xamarin.Android projects. A string property that specifies which type of linking should be performed on assemblies contained within the Android package. Only used in Android Application projects.
      </a:documentation>

        <rng:choice>
          <rng:value>None</rng:value>
          <rng:value>SdkOnly</rng:value>
          <rng:value>Full</rng:value>
        </rng:choice>

    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="AndroidLinkTool"/>
</rng:start>
<rng:define name="AndroidLinkTool">
<rng:element name="AndroidLinkTool">
      <a:documentation>
        <!-- _locID_text="AndroidLinkTool" _locComment="" -->Used by Xamarin.Android projects. A string property that indicates which code shrinker is used for Java code.
      </a:documentation>

        <rng:choice>
          <rng:value>r8</rng:value>
          <rng:value>proguard</rng:value>
        </rng:choice>

    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="AndroidLinkSkip"/>
</rng:start>
<rng:define name="AndroidLinkSkip">
<rng:element name="AndroidLinkSkip">
<rng:ref name="StringPropertyType"/>
      <a:documentation>
        <!-- _locID_text="AndroidLinkSkip" _locComment="" -->Used by Xamarin.Android projects. Specifies a semicolon-delimited (;) list of assembly names, without file extensions, of assemblies that should not be linked.
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="AndroidPackageFormat"/>
</rng:start>
<rng:define name="AndroidPackageFormat">
<rng:element name="AndroidPackageFormat">
      <a:documentation>
        <!-- _locID_text="AndroidPackageFormat" _locComment="" -->Used by Xamarin.Android projects. A string property that indicates if you want to package the Android application as an APK file or Android App Bundle.
      </a:documentation>

        <rng:choice>
          <rng:value>apk</rng:value>
          <rng:value>aab</rng:value>
        </rng:choice>

    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="AndroidSupportedAbis"/>
</rng:start>
<rng:define name="AndroidSupportedAbis">
<rng:element name="AndroidSupportedAbis">
<rng:ref name="StringPropertyType"/>
      <a:documentation>
        <!-- _locID_text="AndroidSupportedAbis" _locComment="" -->Used by Xamarin.Android projects. A string property that contains a semicolon (;)-delimited list of ABIs which should be included into the application.
      </a:documentation>
    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="AotAssemblies"/>
</rng:start>
<rng:define name="AotAssemblies">
<rng:element name="AotAssemblies">
<rng:ref name="boolean"/>
      <a:documentation>
        <!-- _locID_text="AotAssemblies" _locComment="" -->Used by Xamarin.Android projects. A boolean property that determines whether or not assemblies will be Ahead-of-Time compiled into native code.
      </a:documentation>
    </rng:element>
</rng:define>

    <!-- ======================== TASKS =====================================-->
    <rng:start combine="choice">
<rng:ref name="AL"/>
</rng:start>
<rng:define name="AL">
<rng:element name="AL">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="AlgorithmId"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="BaseAddress"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="CompanyName"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Configuration"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Copyright"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Culture"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="DelaySign">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Description"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="EmbedResources"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="EnvironmentVariables"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="EvidenceFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="FileVersion"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Flags"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="GenerateFullPaths">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="KeyContainer"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="KeyFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="LinkResources"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="LogStandardErrorAsError">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="MainEntryPoint"/>
</rng:optional>
                    <rng:attribute name="OutputAssembly"/>
                    <rng:optional>
<rng:attribute name="Platform"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ProductName"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ProductVersion"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ResponseFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SdkToolsPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SourceModules"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StandardErrorImportance"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StandardOutputImportance"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TargetType"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TemplateFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Timeout"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Title"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ToolExe"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ToolPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Trademark"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Version"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Win32Icon"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Win32Resource"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="AspNetCompiler"/>
</rng:start>
<rng:define name="AspNetCompiler">
<rng:element name="AspNetCompiler">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="AllowPartiallyTrustedCallers">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Clean">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Debug">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="DelaySign">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="EnvironmentVariables"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="FixedNames">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Force">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="KeyContainer"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="KeyFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="LogStandardErrorAsError">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="MetabasePath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="PhysicalPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StandardErrorImportance"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StandardOutputImportance"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TargetFrameworkMoniker"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TargetPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Timeout"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ToolExe"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ToolPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Updateable">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="VirtualPath"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="AssignCulture"/>
</rng:start>
<rng:define name="AssignCulture">
<rng:element name="AssignCulture">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="Files"/>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="AssignProjectConfiguration"/>
</rng:start>
<rng:define name="AssignProjectConfiguration">
<rng:element name="AssignProjectConfiguration">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="AssignedProjects"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="CurrentProjectConfiguration"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="CurrentProjectPlatform"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="DefaultToVcxPlatformMapping"/>
</rng:optional>
                    <rng:attribute name="ProjectReferences"/>
                    <rng:optional>
<rng:attribute name="ResolveConfigurationPlatformUsingMappings">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SolutionConfigurationContents"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="UnassignedProjects"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="VcxToDefaultPlatformMapping"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="AssignTargetPath"/>
</rng:start>
<rng:define name="AssignTargetPath">
<rng:element name="AssignTargetPath">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="Files"/>
</rng:optional>
                    <rng:attribute name="RootFolder"/>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="AxImp"/>
</rng:start>
<rng:define name="AxImp">
<rng:element name="AxImp">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="ActiveXControlName"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="DelaySign">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="EnvironmentVariables"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="GenerateSource">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="KeyContainer"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="KeyFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="LogStandardErrorAsError">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="NoLogo">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OutputAssembly"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="RuntimeCallableWrapperAssembly"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SdkToolsPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Silent">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StandardErrorImportance"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StandardOutputImportance"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Timeout"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ToolExe"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ToolPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Verbose">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CallTarget"/>
</rng:start>
<rng:define name="CallTarget">
<rng:element name="CallTarget">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="RunEachTargetSeparately">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Targets"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="UseResultsCache">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CombinePath"/>
</rng:start>
<rng:define name="CombinePath">
<rng:element name="CombinePath">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="BasePath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="CombinedPaths"/>
</rng:optional>
                    <rng:attribute name="Paths"/>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="ConvertToAbsolutePath"/>
</rng:start>
<rng:define name="ConvertToAbsolutePath">
<rng:element name="ConvertToAbsolutePath">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="AbsolutePaths"/>
</rng:optional>
                    <rng:attribute name="Paths"/>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="Copy"/>
</rng:start>
<rng:define name="Copy">
<rng:element name="Copy">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="DestinationFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="DestinationFolder"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OverwriteReadOnlyFiles">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Retries"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="RetryDelayMilliseconds"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SkipUnchangedFiles">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="UseHardlinksIfPossible">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="UseSymboliclinksIfPossible">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:attribute name="SourceFiles"/>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CreateCSharpManifestResourceName"/>
</rng:start>
<rng:define name="CreateCSharpManifestResourceName">
<rng:element name="CreateCSharpManifestResourceName">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="PrependCultureAsDirectory">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:attribute name="ResourceFiles"/>
                    <rng:optional>
<rng:attribute name="ResourceFilesWithManifestResourceNames"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="RootNamespace"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CreateItem"/>
</rng:start>
<rng:define name="CreateItem">
<rng:element name="CreateItem">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="AdditionalMetadata"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Exclude"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Include"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="PreserveExistingMetadata">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CreateProperty"/>
</rng:start>
<rng:define name="CreateProperty">
<rng:element name="CreateProperty">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="Value"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CreateVisualBasicManifestResourceName"/>
</rng:start>
<rng:define name="CreateVisualBasicManifestResourceName">
<rng:element name="CreateVisualBasicManifestResourceName">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="PrependCultureAsDirectory">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:attribute name="ResourceFiles"/>
                    <rng:optional>
<rng:attribute name="ResourceFilesWithManifestResourceNames"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="RootNamespace"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="Csc"/>
</rng:start>
<rng:define name="Csc">
<rng:element name="Csc">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="AdditionalLibPaths"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AddModules"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AllowUnsafeBlocks">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="BaseAddress"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="CheckForOverflowUnderflow">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="CodePage"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="DebugType"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="DefineConstants"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="DelaySign">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="DisabledWarnings"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="DocumentationFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="EmitDebugInformation">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="EnvironmentVariables"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ErrorReport"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="FileAlignment"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="GenerateFullPaths">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="KeyContainer"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="KeyFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="LangVersion"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="LinkResources"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="LogStandardErrorAsError">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="MainEntryPoint"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ModuleAssemblyName"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="NoConfig">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="NoLogo">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="NoStandardLib">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="NoWin32Manifest">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Optimize">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OutputAssembly"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="PdbFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Platform"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="References"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Resources"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ResponseFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Sources"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StandardErrorImportance"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StandardOutputImportance"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TargetType"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Timeout"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ToolExe"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ToolPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TreatWarningsAsErrors">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="UseHostCompilerIfAvailable">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Utf8Output">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="WarningLevel"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="WarningsAsErrors"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="WarningsNotAsErrors"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Win32Icon"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Win32Manifest"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Win32Resource"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="Delete"/>
</rng:start>
<rng:define name="Delete">
<rng:element name="Delete">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="DeletedFiles"/>
</rng:optional>
                    <rng:attribute name="Files"/>
                    <rng:optional>
<rng:attribute name="TreatErrorsAsWarnings">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="Error"/>
</rng:start>
<rng:define name="Error">
<rng:element name="Error">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="Code"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="File"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="HelpKeyword"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Text"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="Exec"/>
</rng:start>
<rng:define name="Exec">
<rng:element name="Exec">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="Command"/>
                    <rng:optional>
<rng:attribute name="CustomErrorRegularExpression"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="CustomWarningRegularExpression"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="EnvironmentVariables"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="IgnoreExitCode">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="IgnoreStandardErrorWarningFormat">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="LogStandardErrorAsError">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Outputs"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StandardErrorImportance"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StandardOutputImportance"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StdErrEncoding"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StdOutEncoding"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Timeout"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ToolExe"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ToolPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="WorkingDirectory"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="FindAppConfigFile"/>
</rng:start>
<rng:define name="FindAppConfigFile">
<rng:element name="FindAppConfigFile">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="AppConfigFile"/>
</rng:optional>
                    <rng:attribute name="PrimaryList"/>
                    <rng:attribute name="SecondaryList"/>
                    <rng:attribute name="TargetPath"/>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="FindInList"/>
</rng:start>
<rng:define name="FindInList">
<rng:element name="FindInList">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="CaseSensitive">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="FindLastMatch">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ItemFound"/>
</rng:optional>
                    <rng:attribute name="ItemSpecToFind"/>
                    <rng:attribute name="List"/>
                    <rng:optional>
<rng:attribute name="MatchFileNameOnly">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="FindUnderPath"/>
</rng:start>
<rng:define name="FindUnderPath">
<rng:element name="FindUnderPath">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="Files"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="InPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OutOfPath"/>
</rng:optional>
                    <rng:attribute name="Path"/>
                    <rng:optional>
<rng:attribute name="UpdateToAbsolutePaths">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="FormatUrl"/>
</rng:start>
<rng:define name="FormatUrl">
<rng:element name="FormatUrl">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="InputUrl"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OutputUrl"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="FormatVersion"/>
</rng:start>
<rng:define name="FormatVersion">
<rng:element name="FormatVersion">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="FormatType"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OutputVersion"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Revision"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Version"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="GenerateApplicationManifest"/>
</rng:start>
<rng:define name="GenerateApplicationManifest">
<rng:element name="GenerateApplicationManifest">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="AssemblyName"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AssemblyVersion"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ClrVersion"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ConfigFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Dependencies"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Description"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="EntryPoint"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ErrorReportUrl"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="FileAssociations"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Files"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="HostInBrowser">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="IconFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="InputManifest"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="IsolatedComReferences"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="LauncherBasedDeployment">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ManifestType"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="MaxTargetPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OSVersion"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OutputManifest"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Platform"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Product"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Publisher"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="RequiresMinimumFramework35SP1">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SuiteName"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SupportUrl"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TargetCulture"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TargetFrameworkMoniker"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TargetFrameworkProfile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TargetFrameworkSubset"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TargetFrameworkVersion"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrustInfoFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="UseApplicationTrust">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="GenerateBootstrapper"/>
</rng:start>
<rng:define name="GenerateBootstrapper">
<rng:element name="GenerateBootstrapper">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="ApplicationFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ApplicationName"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ApplicationRequiresElevation">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ApplicationUrl"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="BootstrapperComponentFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="BootstrapperItems"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="BootstrapperKeyFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ComponentsLocation"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ComponentsUrl"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="CopyComponents">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Culture"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="FallbackCulture"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OutputPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Path"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SupportUrl"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Validate">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="GenerateDeploymentManifest"/>
</rng:start>
<rng:define name="GenerateDeploymentManifest">
<rng:element name="GenerateDeploymentManifest">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="AssemblyName"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AssemblyVersion"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="CreateDesktopShortcut">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="DeploymentUrl"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Description"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="DisallowUrlActivation">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="EntryPoint"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ErrorReportUrl"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="InputManifest"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Install">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="LauncherBasedDeployment">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="MapFileExtensions">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="MaxTargetPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="MinimumRequiredVersion"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OutputManifest"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Platform"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Product"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Publisher"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SuiteName"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SupportUrl"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TargetCulture"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TargetFrameworkMoniker"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TargetFrameworkVersion"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrustUrlParameters">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="UpdateEnabled">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="UpdateInterval"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="UpdateMode"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="UpdateUnit"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="GenerateLauncher"/>
</rng:start>
<rng:define name="GenerateLauncher">
<rng:element name="GenerateLauncher">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="EntryPoint"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OutputPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="VisualStudioVersion"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="GenerateResource"/>
</rng:start>
<rng:define name="GenerateResource">
<rng:element name="GenerateResource">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="AdditionalInputs"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ExcludedInputPaths"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ExecuteAsTool">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="MinimalRebuildFromTracking">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="NeverLockTypeAssemblies">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OutputResources"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="PublicClass">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="References"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SdkToolsPath"/>
</rng:optional>
                    <rng:attribute name="Sources"/>
                    <rng:optional>
<rng:attribute name="StateFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StronglyTypedClassName"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StronglyTypedFileName"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StronglyTypedLanguage"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StronglyTypedManifestPrefix"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StronglyTypedNamespace"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrackerLogDirectory"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrackFileAccess">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="UseSourcePath">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ExtractResWFiles">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OutputDirectory"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="MSBuildRuntime"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="MSBuildArchitecture"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="GenerateTrustInfo"/>
</rng:start>
<rng:define name="GenerateTrustInfo">
<rng:element name="GenerateTrustInfo">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="ApplicationDependencies"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="BaseManifest"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ExcludedPermissions"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TargetFrameworkMoniker"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TargetZone"/>
</rng:optional>
                    <rng:attribute name="TrustInfoFile"/>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="GetAssemblyIdentity"/>
</rng:start>
<rng:define name="GetAssemblyIdentity">
<rng:element name="GetAssemblyIdentity">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="Assemblies"/>
</rng:optional>
                    <rng:attribute name="AssemblyFiles"/>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="GetFileHash"/>
</rng:start>
<rng:define name="GetFileHash">
<rng:element name="GetFileHash">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="Files"/>
                    <rng:optional>
<rng:attribute name="Algorithm"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="MetadataName"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="HashEncoding"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Hash"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Items"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="GetFrameworkPath"/>
</rng:start>
<rng:define name="GetFrameworkPath">
<rng:element name="GetFrameworkPath">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="Path"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="GetFrameworkSdkPath"/>
</rng:start>
<rng:define name="GetFrameworkSdkPath">
<rng:element name="GetFrameworkSdkPath">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="Path"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="GetReferenceAssemblyPaths"/>
</rng:start>
<rng:define name="GetReferenceAssemblyPaths">
<rng:element name="GetReferenceAssemblyPaths">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="RootPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TargetFrameworkMoniker"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TargetFrameworkMonikerDisplayName"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="BypassFrameworkInstallChecks"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="LC"/>
</rng:start>
<rng:define name="LC">
<rng:element name="LC">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="EnvironmentVariables"/>
</rng:optional>
                    <rng:attribute name="LicenseTarget"/>
                    <rng:optional>
<rng:attribute name="LogStandardErrorAsError">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="NoLogo">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OutputDirectory"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OutputLicense"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ReferencedAssemblies"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SdkToolsPath"/>
</rng:optional>
                    <rng:attribute name="Sources"/>
                    <rng:optional>
<rng:attribute name="StandardErrorImportance"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StandardOutputImportance"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Timeout"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ToolExe"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ToolPath"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="MakeDir"/>
</rng:start>
<rng:define name="MakeDir">
<rng:element name="MakeDir">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="Directories"/>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="Message"/>
</rng:start>
<rng:define name="Message">
<rng:element name="Message">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="Importance">
<rng:ref name="importance"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Text"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="Move"/>
</rng:start>
<rng:define name="Move">
<rng:element name="Move">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="DestinationFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="DestinationFolder"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OverwriteReadOnlyFiles">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:attribute name="SourceFiles"/>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="MSBuild"/>
</rng:start>
<rng:define name="MSBuild">
<rng:element name="MSBuild">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="BuildInParallel">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:attribute name="Projects"/>
                    <rng:optional>
<rng:attribute name="Properties"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="RebaseOutputs">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="RunEachTargetSeparately">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SkipNonexistentProjects">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SkipNonexistentTargets">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StopOnFirstFailure">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TargetAndPropertyListSeparators"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Targets"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ToolsVersion"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="UnloadProjectsOnCompletion">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="UseResultsCache">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="ReadLinesFromFile"/>
</rng:start>
<rng:define name="ReadLinesFromFile">
<rng:element name="ReadLinesFromFile">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="File"/>
                    <rng:optional>
<rng:attribute name="Lines"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="RegisterAssembly"/>
</rng:start>
<rng:define name="RegisterAssembly">
<rng:element name="RegisterAssembly">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="Assemblies"/>
                    <rng:optional>
<rng:attribute name="AssemblyListFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="CreateCodeBase">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TypeLibFiles"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="RemoveDir"/>
</rng:start>
<rng:define name="RemoveDir">
<rng:element name="RemoveDir">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="Directories"/>
                    <rng:optional>
<rng:attribute name="RemovedDirectories"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="RemoveDuplicates"/>
</rng:start>
<rng:define name="RemoveDuplicates">
<rng:element name="RemoveDuplicates">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="Filtered"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="HadAnyDuplicates">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Inputs"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="RequiresFramework35SP1Assembly"/>
</rng:start>
<rng:define name="RequiresFramework35SP1Assembly">
<rng:element name="RequiresFramework35SP1Assembly">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="Assemblies"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="CreateDesktopShortcut">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="DeploymentManifestEntryPoint"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="EntryPoint"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ErrorReportUrl"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Files"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ReferencedAssemblies"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="RequiresMinimumFramework35SP1">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SigningManifests">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SuiteName"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TargetFrameworkVersion"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="ResolveAssemblyReference"/>
</rng:start>
<rng:define name="ResolveAssemblyReference">
<rng:element name="ResolveAssemblyReference">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="AllowedAssemblyExtensions"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AllowedGlobalAssemblyNamePrefix"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AllowedRelatedFileExtensions"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AppConfigFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Assemblies"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AssemblyFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AutoUnify">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="CandidateAssemblyFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="FilesWritten"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="FindDependencies">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="FindRelatedFiles">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="FindSatellites">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="FindSerializationAssemblies">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="FullFrameworkAssemblyTables"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="FullFrameworkFolders"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="FullTargetFrameworkSubsetNames"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="IgnoreDefaultInstalledAssemblySubsetTables">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="IgnoreDefaultInstalledAssemblyTables">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="InstalledAssemblySubsetTables"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="InstalledAssemblyTables"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ProfileName"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="PublicKeysRestrictedForGlobalLocation"/>
</rng:optional>
                    <rng:attribute name="SearchPaths"/>
                    <rng:optional>
<rng:attribute name="Silent">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StateFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TargetedRuntimeVersion"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TargetFrameworkDirectories"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TargetFrameworkMoniker"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TargetFrameworkMonikerDisplayName"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TargetFrameworkSubsets"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TargetFrameworkVersion"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TargetProcessorArchitecture"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="ResolveComReference"/>
</rng:start>
<rng:define name="ResolveComReference">
<rng:element name="ResolveComReference">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="DelaySign">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ExecuteAsTool">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="IncludeVersionInInteropName">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="KeyContainer"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="KeyFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="NoClassMembers">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ResolvedAssemblyReferences"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ResolvedFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ResolvedModules"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SdkToolsPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StateFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TargetFrameworkVersion"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TargetProcessorArchitecture"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TypeLibFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TypeLibNames"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="WrapperOutputDirectory"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="ResolveKeySource"/>
</rng:start>
<rng:define name="ResolveKeySource">
<rng:element name="ResolveKeySource">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="AutoClosePasswordPromptShow"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AutoClosePasswordPromptTimeout"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="CertificateFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="CertificateThumbprint"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="KeyFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ResolvedKeyContainer"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ResolvedKeyFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ResolvedThumbprint"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ShowImportDialogDespitePreviousFailures">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SuppressAutoClosePasswordPrompt">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="ResolveManifestFiles"/>
</rng:start>
<rng:define name="ResolveManifestFiles">
<rng:element name="ResolveManifestFiles">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="DeploymentManifestEntryPoint"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="EntryPoint"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ExtraFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Files"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ManagedAssemblies"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="NativeAssemblies"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OutputAssemblies"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OutputDeploymentManifestEntryPoint"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OutputEntryPoint"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OutputFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="PublishFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SatelliteAssemblies"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SigningManifests">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TargetCulture"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TargetFrameworkVersion"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="ResolveNativeReference"/>
</rng:start>
<rng:define name="ResolveNativeReference">
<rng:element name="ResolveNativeReference">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="AdditionalSearchPaths"/>
                    <rng:optional>
<rng:attribute name="ContainedComComponents"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ContainedLooseEtcFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ContainedLooseTlbFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ContainedPrerequisiteAssemblies"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ContainedTypeLibraries"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ContainingReferenceFiles"/>
</rng:optional>
                    <rng:attribute name="NativeReferences"/>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="ResolveNonMSBuildProjectOutput"/>
</rng:start>
<rng:define name="ResolveNonMSBuildProjectOutput">
<rng:element name="ResolveNonMSBuildProjectOutput">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="PreresolvedProjectOutputs"/>
</rng:optional>
                    <rng:attribute name="ProjectReferences"/>
                    <rng:optional>
<rng:attribute name="ResolvedOutputPaths"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="UnresolvedProjectReferences"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="SGen"/>
</rng:start>
<rng:define name="SGen">
<rng:element name="SGen">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="BuildAssemblyName"/>
                    <rng:attribute name="BuildAssemblyPath"/>
                    <rng:optional>
<rng:attribute name="DelaySign">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="EnvironmentVariables"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="KeyContainer"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="KeyFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="LogStandardErrorAsError">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="References"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SdkToolsPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SerializationAssembly"/>
</rng:optional>
                    <rng:attribute name="ShouldGenerateSerializer">
<rng:ref name="boolean"/>
</rng:attribute>
                    <rng:optional>
<rng:attribute name="StandardErrorImportance"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StandardOutputImportance"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Timeout"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ToolExe"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ToolPath"/>
</rng:optional>
                    <rng:attribute name="UseProxyTypes">
<rng:ref name="boolean"/>
</rng:attribute>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="SignFile"/>
</rng:start>
<rng:define name="SignFile">
<rng:element name="SignFile">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="CertificateThumbprint"/>
                    <rng:attribute name="SigningTarget"/>
                    <rng:optional>
<rng:attribute name="TimestampUrl"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="Telemetry"/>
</rng:start>
<rng:define name="Telemetry">
<rng:element name="Telemetry">


          <rng:ref name="TaskType"/>
            <rng:attribute name="EventName"/>
            <rng:optional>
<rng:attribute name="EventData"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="TlbImp"/>
</rng:start>
<rng:define name="TlbImp">
<rng:element name="TlbImp">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="AssemblyNamespace"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AssemblyVersion"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="DelaySign">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="EnvironmentVariables"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="KeyContainer"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="KeyFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="LogStandardErrorAsError">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="NoLogo">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OutputAssembly"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="PreventClassMembers">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SafeArrayAsSystemArray">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SdkToolsPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Silent">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StandardErrorImportance"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StandardOutputImportance"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Timeout"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ToolExe"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ToolPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Transform"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TypeLibName"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Verbose">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="Touch"/>
</rng:start>
<rng:define name="Touch">
<rng:element name="Touch">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="AlwaysCreate">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:attribute name="Files"/>
                    <rng:optional>
<rng:attribute name="ForceTouch">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Time"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TouchedFiles"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="UnregisterAssembly"/>
</rng:start>
<rng:define name="UnregisterAssembly">
<rng:element name="UnregisterAssembly">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="Assemblies"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AssemblyListFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TypeLibFiles"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="UpdateManifest"/>
</rng:start>
<rng:define name="UpdateManifest">
<rng:element name="UpdateManifest">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="ApplicationManifest"/>
                    <rng:optional>
<rng:attribute name="TargetFrameworkVersion"/>
</rng:optional>
                    <rng:attribute name="ApplicationPath"/>
                    <rng:attribute name="InputManifest"/>
                    <rng:optional>
<rng:attribute name="OutputManifest"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="Vbc"/>
</rng:start>
<rng:define name="Vbc">
<rng:element name="Vbc">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="AdditionalLibPaths"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AddModules"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="BaseAddress"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="CodePage"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="DebugType"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="DefineConstants"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="DelaySign">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="DisabledWarnings"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="DocumentationFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="EmitDebugInformation">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="EnvironmentVariables"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ErrorReport"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="FileAlignment"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="GenerateDocumentation">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Imports"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="KeyContainer"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="KeyFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="LangVersion"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="VBRuntime"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="LinkResources"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="LogStandardErrorAsError">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="MainEntryPoint"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ModuleAssemblyName"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="NoConfig">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="NoLogo">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="NoStandardLib">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="NoVBRuntimeReference">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="NoWarnings">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="NoWin32Manifest">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Optimize">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OptionCompare"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OptionExplicit">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OptionInfer">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OptionStrict">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OptionStrictType"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OutputAssembly"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Platform"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="References"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="RemoveIntegerChecks">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Resources"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ResponseFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="RootNamespace"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SdkPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Sources"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StandardErrorImportance"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StandardOutputImportance"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TargetCompactFramework">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TargetType"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Timeout"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ToolExe"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ToolPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TreatWarningsAsErrors">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="UseHostCompilerIfAvailable">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Utf8Output">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Verbosity"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="WarningsAsErrors"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="WarningsNotAsErrors"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Win32Icon"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Win32Manifest"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Win32Resource"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="VCBuild"/>
</rng:start>
<rng:define name="VCBuild">
<rng:element name="VCBuild">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="AdditionalLibPaths"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AdditionalLinkLibraryPaths"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AdditionalOptions"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Clean">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Configuration"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Override"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Platform"/>
</rng:optional>
                    <rng:attribute name="Projects"/>
                    <rng:optional>
<rng:attribute name="Rebuild">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SolutionFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Timeout"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ToolPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="UseEnvironment">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <!-- OBSOLETE: Will be removed in a future version. Use UseEnvironment instead -->
                    <rng:optional>
<rng:attribute name="UserEnvironment">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="VerifyFileHash"/>
</rng:start>
<rng:define name="VerifyFileHash">
<rng:element name="VerifyFileHash">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="File"/>
                    <rng:attribute name="Hash"/>
                    <rng:optional>
<rng:attribute name="HashEncoding"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Algorithm"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="Warning"/>
</rng:start>
<rng:define name="Warning">
<rng:element name="Warning">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="Code"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="File"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="HelpKeyword"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Text"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="WcfConfigValidationEnabled"/>
</rng:start>
<rng:define name="WcfConfigValidationEnabled">
<rng:element name="WcfConfigValidationEnabled">
<rng:ref name="boolean"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="WsdlXsdCodeGenCollectionTypes"/>
</rng:start>
<rng:define name="WsdlXsdCodeGenCollectionTypes">
<rng:element name="WsdlXsdCodeGenCollectionTypes">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="WsdlXsdCodeGenEnabled"/>
</rng:start>
<rng:define name="WsdlXsdCodeGenEnabled">
<rng:element name="WsdlXsdCodeGenEnabled">
<rng:ref name="boolean"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="WsdlXsdCodeGenEnableDataBinding"/>
</rng:start>
<rng:define name="WsdlXsdCodeGenEnableDataBinding">
<rng:element name="WsdlXsdCodeGenEnableDataBinding">
<rng:ref name="boolean"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="WsdlXsdCodeGenGenerateAsynchronousOperations"/>
</rng:start>
<rng:define name="WsdlXsdCodeGenGenerateAsynchronousOperations">
<rng:element name="WsdlXsdCodeGenGenerateAsynchronousOperations">
<rng:ref name="boolean"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="WsdlXsdCodeGenGenerateDataTypesOnly"/>
</rng:start>
<rng:define name="WsdlXsdCodeGenGenerateDataTypesOnly">
<rng:element name="WsdlXsdCodeGenGenerateDataTypesOnly">
<rng:ref name="boolean"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="WsdlXsdCodeGenGenerateInternalTypes"/>
</rng:start>
<rng:define name="WsdlXsdCodeGenGenerateInternalTypes">
<rng:element name="WsdlXsdCodeGenGenerateInternalTypes">
<rng:ref name="boolean"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="WsdlXsdCodeGenGenerateMessageContract"/>
</rng:start>
<rng:define name="WsdlXsdCodeGenGenerateMessageContract">
<rng:element name="WsdlXsdCodeGenGenerateMessageContract">
<rng:ref name="boolean"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="WsdlXsdCodeGenGenerateSerializableTypes"/>
</rng:start>
<rng:define name="WsdlXsdCodeGenGenerateSerializableTypes">
<rng:element name="WsdlXsdCodeGenGenerateSerializableTypes">
<rng:ref name="boolean"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="WsdlXsdCodeGenNamespaceMappings"/>
</rng:start>
<rng:define name="WsdlXsdCodeGenNamespaceMappings">
<rng:element name="WsdlXsdCodeGenNamespaceMappings">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="WsdlXsdCodeGenImportXmlTypes"/>
</rng:start>
<rng:define name="WsdlXsdCodeGenImportXmlTypes">
<rng:element name="WsdlXsdCodeGenImportXmlTypes">
<rng:ref name="boolean"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="WsdlXsdCodeGenReuseTypesFlag"/>
</rng:start>
<rng:define name="WsdlXsdCodeGenReuseTypesFlag">
<rng:element name="WsdlXsdCodeGenReuseTypesFlag">
<rng:ref name="boolean"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="WsdlXsdCodeGenReuseTypesMode"/>
</rng:start>
<rng:define name="WsdlXsdCodeGenReuseTypesMode">
<rng:element name="WsdlXsdCodeGenReuseTypesMode">

            <rng:choice>
                <rng:value>All</rng:value>
                <rng:value>Partial</rng:value>
            </rng:choice>

    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="WsdlXsdCodeGenSerializerMode"/>
</rng:start>
<rng:define name="WsdlXsdCodeGenSerializerMode">
<rng:element name="WsdlXsdCodeGenSerializerMode">

            <rng:choice>
                <rng:value>XmlSerializer</rng:value>
                <rng:value>DataContractSerializer</rng:value>
            </rng:choice>

    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="WsdlXsdCodeGenUseSerializerForFaults"/>
</rng:start>
<rng:define name="WsdlXsdCodeGenUseSerializerForFaults">
<rng:element name="WsdlXsdCodeGenUseSerializerForFaults">
<rng:ref name="boolean"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="WsdlXsdCodeGenWrapped"/>
</rng:start>
<rng:define name="WsdlXsdCodeGenWrapped">
<rng:element name="WsdlXsdCodeGenWrapped">
<rng:ref name="boolean"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="WriteCodeFragment"/>
</rng:start>
<rng:define name="WriteCodeFragment">
<rng:element name="WriteCodeFragment">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="AssemblyAttributes"/>
</rng:optional>
                    <rng:attribute name="Language"/>
                    <rng:optional>
<rng:attribute name="OutputDirectory"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OutputFile"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="WriteLinesToFile"/>
</rng:start>
<rng:define name="WriteLinesToFile">
<rng:element name="WriteLinesToFile">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="Encoding"/>
</rng:optional>
                    <rng:attribute name="File"/>
                    <rng:optional>
<rng:attribute name="Lines"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Overwrite">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="WriteOnlyWhenDifferent">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="XslTransformation"/>
</rng:start>
<rng:define name="XslTransformation">
<rng:element name="XslTransformation">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="OutputPaths"/>
                    <rng:optional>
<rng:attribute name="Parameters"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="XmlContent"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="XmlInputPaths"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="XslCompiledDllPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="XslContent"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="XslInputPath"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CodeAnalysis"/>
</rng:start>
<rng:define name="CodeAnalysis">
<rng:element name="CodeAnalysis">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="AlternativeToolName"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AnalysisTimeout"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ApplyLogFileXsl">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Assemblies"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ConsoleXsl"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Culture"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="DependentAssemblyPaths"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Dictionaries"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="FilesWritten"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ForceOutput">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="GenerateSuccessFile">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="IgnoreInvalidTargets">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="IgnoreGeneratedCode">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Imports"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="LogFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="LogFileXsl"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OutputToConsole">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OverrideRuleVisibilities">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="PlatformPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Project"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Quiet">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="References"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="RuleAssemblies"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Rules"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SaveMessagesToReport"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SearchGlobalAssemblyCache">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Summary">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SuccessFile">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Timeout"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TreatWarningsAsErrors">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ToolPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="UpdateProject">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>



    </rng:element>
</rng:define>
    <!-- ==================== NATIVE CL/LINK TASKS ==========================-->
    <rng:start combine="choice">
<rng:ref name="CL"/>
</rng:start>
<rng:define name="CL">
<rng:element name="CL">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="AcceptableNonZeroExitCodes"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ActiveToolSwitchesValues"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AdditionalIncludeDirectories"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AdditionalOptions"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AdditionalUsingDirectories"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AssemblerListingLocation"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AssemblerOutput"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="BasicRuntimeChecks"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="BrowseInformation">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="BrowseInformationFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="BufferSecurityCheck">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="CallingConvention"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="CompileAs"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="CompileAsManaged"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="CreateHotpatchableImage">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="DebugInformationFormat"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="DisableLanguageExtensions">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="DisableSpecificWarnings"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="EnableEnhancedInstructionSet"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="EnableFiberSafeOptimizations">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="EnablePREfast">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="EnvironmentVariables"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ErrorReporting"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ExceptionHandling"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ExcludedInputPaths"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ExpandAttributedSource">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="FavorSizeOrSpeed"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="FloatingPointExceptions">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="FloatingPointModel"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ForceConformanceInForLoopScope">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ForcedIncludeFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ForcedUsingFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="FunctionLevelLinking">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="GenerateXMLDocumentationFiles">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="IgnoreStandardIncludePath">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="InlineFunctionExpansion"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="IntrinsicFunctions">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="LogStandardErrorAsError">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="MinimalRebuild">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="MinimalRebuildFromTracking">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="MultiProcessorCompilation">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ObjectFileName"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ObjectFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OmitDefaultLibName">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OmitFramePointers">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OpenMPSupport">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Optimization"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="PathOverride"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="PrecompiledHeader"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="PrecompiledHeaderFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="PrecompiledHeaderOutputFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="PreprocessKeepComments">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="PreprocessorDefinitions"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="PreprocessOutput"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="PreprocessSuppressLineNumbers">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="PreprocessToFile">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ProcessorNumber"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ProgramDataBaseFileName"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="RuntimeLibrary"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="RuntimeTypeInfo">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ShowIncludes">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SkippedExecution">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SmallerTypeCheck">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:attribute name="Sources"/>
                    <rng:optional>
<rng:attribute name="SourcesCompiled"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StandardErrorImportance"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StandardOutputImportance"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StringPooling">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StructMemberAlignment"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SuppressStartupBanner">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Timeout"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TLogReadFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TLogWriteFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ToolExe"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ToolPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrackedInputFilesToIgnore"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrackedOutputFilesToIgnore"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrackerLogDirectory"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrackFileAccess">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TreatSpecificWarningsAsErrors"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TreatWarningAsError">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TreatWChar_tAsBuiltInType">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="UndefineAllPreprocessorDefinitions">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="UndefinePreprocessorDefinitions"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="UseFullPaths">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="UseUnicodeForAssemblerListing">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="WarningLevel"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="WholeProgramOptimization">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="XMLDocumentationFileName"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="Link"/>
</rng:start>
<rng:define name="Link">
<rng:element name="Link">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="AcceptableNonZeroExitCodes"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ActiveToolSwitchesValues"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AdditionalDependencies"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AdditionalLibraryDirectories"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AdditionalManifestDependencies"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AdditionalOptions"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AddModuleNamesToAssembly"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AllowIsolation">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AssemblyDebug">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AssemblyLinkResource"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="BaseAddress"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="CLRImageType"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="CLRSupportLastError"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="CLRThreadAttribute"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="CLRUnmanagedCodeCheck">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="CreateHotPatchableImage"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="DataExecutionPrevention">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="DelayLoadDLLs"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="DelaySign">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Driver"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="EmbedManagedResourceFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="EnableCOMDATFolding">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="EnableUAC">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="EntryPointSymbol"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="EnvironmentVariables"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ExcludedInputPaths"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="FixedBaseAddress">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ForceFileOutput"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ForceSymbolReferences"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="FunctionOrder"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="GenerateDebugInformation">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="GenerateManifest">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="GenerateMapFile">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="HeapCommitSize"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="HeapReserveSize"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="IgnoreAllDefaultLibraries">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="IgnoreEmbeddedIDL">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="IgnoreImportLibrary">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="IgnoreSpecificDefaultLibraries"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ImageHasSafeExceptionHandlers">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ImportLibrary"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="KeyContainer"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="KeyFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="LargeAddressAware">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="LinkDLL">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="LinkErrorReporting"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="LinkIncremental">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="LinkLibraryDependencies">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="LinkStatus">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="LinkTimeCodeGeneration"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="LogStandardErrorAsError">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ManifestFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="MapExports">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="MapFileName"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="MergedIDLBaseFileName"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="MergeSections"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="MidlCommandFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="MinimalRebuildFromTracking">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="MinimumRequiredVersion"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ModuleDefinitionFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="MSDOSStubFileName"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="NoEntryPoint">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ObjectFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OptimizeReferences">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OutputFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="PathOverride"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="PerUserRedirection">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="PreprocessOutput"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="PreventDllBinding">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Profile">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ProfileGuidedDatabase"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ProgramDatabaseFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="RandomizedBaseAddress">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="RegisterOutput">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SectionAlignment"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SetChecksum">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ShowProgress"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SkippedExecution">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:attribute name="Sources"/>
                    <rng:optional>
<rng:attribute name="SourcesCompiled"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SpecifySectionAttributes"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StackCommitSize"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StackReserveSize"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StandardErrorImportance"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StandardOutputImportance"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StripPrivateSymbols"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SubSystem"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SupportNobindOfDelayLoadedDLL">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SupportUnloadOfDelayLoadedDLL">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SuppressStartupBanner">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SwapRunFromCD">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SwapRunFromNET">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TargetMachine"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TerminalServerAware">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Timeout"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TLogReadFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TLogWriteFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ToolExe"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ToolPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrackedInputFilesToIgnore"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrackedOutputFilesToIgnore"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrackerLogDirectory"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrackFileAccess">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TreatLinkerWarningAsErrors">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TurnOffAssemblyGeneration">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TypeLibraryFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TypeLibraryResourceID"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="UACExecutionLevel"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="UACUIAccess">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="UseLibraryDependencyInputs">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Version"/>
</rng:optional>



    </rng:element>
</rng:define>
    <!-- ======================== NATIVE TASKS ==============================-->
    <rng:start combine="choice">
<rng:ref name="BSCMake"/>
</rng:start>
<rng:define name="BSCMake">
<rng:element name="BSCMake">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="AcceptableNonZeroExitCodes"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ActiveToolSwitchesValues"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AdditionalOptions"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="EnvironmentVariables"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ExcludedInputPaths"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="LogStandardErrorAsError">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="MinimalRebuildFromTracking">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OutputFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="PathOverride"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SkippedExecution">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Sources"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SourcesCompiled"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StandardErrorImportance"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StandardOutputImportance"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SuppressStartupBanner">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Timeout"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TLogReadFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TLogWriteFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ToolExe"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ToolPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrackedInputFilesToIgnore"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrackedOutputFilesToIgnore"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrackerLogDirectory"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrackFileAccess">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="CPPClean"/>
</rng:start>
<rng:define name="CPPClean">
<rng:element name="CPPClean">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="DeletedFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="DoDelete">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:attribute name="FilePatternsToDeleteOnClean"/>
                    <rng:optional>
<rng:attribute name="FilesExcludedFromClean"/>
</rng:optional>
                    <rng:attribute name="FoldersToClean"/>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="GetOutputFileName"/>
</rng:start>
<rng:define name="GetOutputFileName">
<rng:element name="GetOutputFileName">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="OutputExtension"/>
                    <rng:optional>
<rng:attribute name="OutputFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OutputPath"/>
</rng:optional>
                    <rng:attribute name="SourceFile"/>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="IsAssembly"/>
</rng:start>
<rng:define name="IsAssembly">
<rng:element name="IsAssembly">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="Assemblies"/>
</rng:optional>
                    <rng:attribute name="AssemblyFiles"/>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="LIB"/>
</rng:start>
<rng:define name="LIB">
<rng:element name="LIB">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="AcceptableNonZeroExitCodes"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ActiveToolSwitchesValues"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AdditionalDependencies"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AdditionalLibraryDirectories"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AdditionalOptions"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="DisplayLibrary"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="EnvironmentVariables"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ErrorReporting"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ExcludedInputPaths"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ExportNamedFunctions"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ForceSymbolReferences"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="IgnoreAllDefaultLibraries">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="IgnoreSpecificDefaultLibraries"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="LinkLibraryDependencies">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="LinkTimeCodeGeneration">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="LogStandardErrorAsError">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="MinimalRebuildFromTracking">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="MinimumRequiredVersion"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ModuleDefinitionFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OutputFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="PathOverride"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="RemoveObjects"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SkippedExecution">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:attribute name="Sources"/>
                    <rng:optional>
<rng:attribute name="SourcesCompiled"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StandardErrorImportance"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StandardOutputImportance"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SubSystem"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SuppressStartupBanner">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TargetMachine"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Timeout"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TLogReadFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TLogWriteFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ToolExe"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ToolPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrackedInputFilesToIgnore"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrackedOutputFilesToIgnore"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrackerLogDirectory"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrackFileAccess">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TreatLibWarningAsErrors">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="UseUnicodeResponseFiles">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Verbose">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="MIDL"/>
</rng:start>
<rng:define name="MIDL">
<rng:element name="MIDL">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="AcceptableNonZeroExitCodes"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ActiveToolSwitchesValues"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AdditionalIncludeDirectories"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AdditionalOptions"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ApplicationConfigurationMode">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ClientStubFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="CPreprocessOptions"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="DefaultCharType"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="DllDataFileName"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="EnableErrorChecks"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="EnvironmentVariables"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ErrorCheckAllocations">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ErrorCheckBounds">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ErrorCheckEnumRange">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ErrorCheckRefPointers">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ErrorCheckStubData">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ExcludedInputPaths"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="GenerateClientFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="GenerateServerFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="GenerateStublessProxies">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="GenerateTypeLibrary">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="HeaderFileName"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="IgnoreStandardIncludePath">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="InterfaceIdentifierFileName"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="LocaleID"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="LogStandardErrorAsError">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="MinimalRebuildFromTracking">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="MkTypLibCompatible">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OutputDirectory"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="PathOverride"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="PreprocessorDefinitions"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ProxyFileName"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="RedirectOutputAndErrors"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ServerStubFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SkippedExecution">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:attribute name="Source"/>
                    <rng:optional>
<rng:attribute name="SourcesCompiled"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StandardErrorImportance"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StandardOutputImportance"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StructMemberAlignment"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SuppressCompilerWarnings">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SuppressStartupBanner">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TargetEnvironment"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Timeout"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TLogReadFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TLogWriteFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ToolExe"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ToolPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrackedInputFilesToIgnore"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrackedOutputFilesToIgnore"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrackerLogDirectory"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrackFileAccess">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TypeLibFormat"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TypeLibraryName"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="UndefinePreprocessorDefinitions"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ValidateAllParameters">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="WarnAsError">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="WarningLevel"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="Mt"/>
</rng:start>
<rng:define name="Mt">
<rng:element name="Mt">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="AcceptableNonZeroExitCodes"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ActiveToolSwitchesValues"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AdditionalManifestFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AdditionalOptions"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AssemblyIdentity"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ComponentFileName"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="EmbedManifest">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="EnvironmentVariables"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ExcludedInputPaths"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="GenerateCatalogFiles">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="GenerateCategoryTags">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="InputResourceManifests"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="LogStandardErrorAsError">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ManifestFromManagedAssembly"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="MinimalRebuildFromTracking">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OutputManifestFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OutputResourceManifests"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="PathOverride"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="RegistrarScriptFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ReplacementsFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ResourceOutputFileName"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SkippedExecution">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Sources"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SourcesCompiled"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StandardErrorImportance"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StandardOutputImportance"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SuppressDependencyElement">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SuppressStartupBanner">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Timeout"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TLogReadFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TLogWriteFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ToolExe"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ToolPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrackedInputFilesToIgnore"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrackedOutputFilesToIgnore"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrackerLogDirectory"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrackFileAccess">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TypeLibraryFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="UpdateFileHashes">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="UpdateFileHashesSearchPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="VerboseOutput">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="RC"/>
</rng:start>
<rng:define name="RC">
<rng:element name="RC">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="AcceptableNonZeroExitCodes"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ActiveToolSwitchesValues"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AdditionalIncludeDirectories"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AdditionalOptions"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Culture"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="EnvironmentVariables"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ExcludedInputPaths"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="IgnoreStandardIncludePath">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="LogStandardErrorAsError">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="MinimalRebuildFromTracking">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="NullTerminateStrings">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="PathOverride"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="PreprocessorDefinitions"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ResourceOutputFileName"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ShowProgress">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SkippedExecution">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:attribute name="Source"/>
                    <rng:optional>
<rng:attribute name="SourcesCompiled"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StandardErrorImportance"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StandardOutputImportance"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Timeout"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TLogReadFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TLogWriteFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ToolExe"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ToolPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrackedInputFilesToIgnore"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrackedOutputFilesToIgnore"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrackerLogDirectory"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrackFileAccess">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="UndefinePreprocessorDefinitions"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="SetEnv"/>
</rng:start>
<rng:define name="SetEnv">
<rng:element name="SetEnv">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="Prefix">
<rng:ref name="boolean"/>
</rng:attribute>
                    <rng:optional>
<rng:attribute name="Target"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Value"/>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="XDCMake"/>
</rng:start>
<rng:define name="XDCMake">
<rng:element name="XDCMake">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="AcceptableNonZeroExitCodes"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ActiveToolSwitchesValues"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AdditionalDocumentFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AdditionalOptions"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="DocumentLibraryDependencies">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="EnvironmentVariables"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ExcludedInputPaths"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="LogStandardErrorAsError">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="MinimalRebuildFromTracking">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OutputFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="PathOverride"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ProjectName"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SkippedExecution">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SlashOld">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:attribute name="Sources"/>
                    <rng:optional>
<rng:attribute name="SourcesCompiled"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StandardErrorImportance"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StandardOutputImportance"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SuppressStartupBanner">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Timeout"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TLogReadFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TLogWriteFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ToolExe"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ToolPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrackedInputFilesToIgnore"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrackedOutputFilesToIgnore"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrackerLogDirectory"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrackFileAccess">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="XSD"/>
</rng:start>
<rng:define name="XSD">
<rng:element name="XSD">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="AcceptableNonZeroExitCodes"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ActiveToolSwitchesValues"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AdditionalOptions"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="EnvironmentVariables"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ExcludedInputPaths"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="GenerateFromSchema"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Language"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="LogStandardErrorAsError">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="MinimalRebuildFromTracking">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Namespace"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="PathOverride"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SkippedExecution">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:attribute name="Sources"/>
                    <rng:optional>
<rng:attribute name="SourcesCompiled"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StandardErrorImportance"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="StandardOutputImportance"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SuppressStartupBanner">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Timeout"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TLogReadFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TLogWriteFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ToolExe"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ToolPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrackedInputFilesToIgnore"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrackedOutputFilesToIgnore"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrackerLogDirectory"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TrackFileAccess">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>



    </rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="VCMessage"/>
</rng:start>
<rng:define name="VCMessage">
<rng:element name="VCMessage">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="Code"/>
                    <rng:optional>
<rng:attribute name="Type"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Arguments"/>
</rng:optional>



    </rng:element>
</rng:define>

    <!-- ============================================================== -->
    <!-- Elements used and/or defined in Microsoft.AppxPackage.targets. -->
    <!-- ============================================================== -->

    <!-- ===================== -->
    <!-- Packaging properties. -->
    <!-- ===================== -->

    <rng:start combine="choice">
<rng:ref name="DefaultLanguage"/>
</rng:start>
<rng:define name="DefaultLanguage">
<rng:element name="DefaultLanguage">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="DefaultLanguage" _locComment="" -->Default resource language.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="PackageCertificateKeyFile"/>
</rng:start>
<rng:define name="PackageCertificateKeyFile">
<rng:element name="PackageCertificateKeyFile">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="PackageCertificateKeyFile" _locComment="" -->App package certificate key file.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxAutoIncrementPackageRevision"/>
</rng:start>
<rng:define name="AppxAutoIncrementPackageRevision">
<rng:element name="AppxAutoIncrementPackageRevision">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxAutoIncrementPackageRevision" _locComment="" -->Flag indicating whether to auto-increment package revision.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxMSBuildToolsPath"/>
</rng:start>
<rng:define name="AppxMSBuildToolsPath">
<rng:element name="AppxMSBuildToolsPath">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxMSBuildToolsPath" _locComment="" -->Full path to a folder containing packaging build targets and tasks assembly.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxMSBuildTaskAssembly"/>
</rng:start>
<rng:define name="AppxMSBuildTaskAssembly">
<rng:element name="AppxMSBuildTaskAssembly">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxMSBuildTaskAssembly" _locComment="" -->Full path to packaging build tasks assembly.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxPackage"/>
</rng:start>
<rng:define name="AppxPackage">
<rng:element name="AppxPackage">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxPackage" _locComment="" -->Flag marking current project as capable of being packaged as an app package.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxUseHardlinksIfPossible"/>
</rng:start>
<rng:define name="AppxUseHardlinksIfPossible">
<rng:element name="AppxUseHardlinksIfPossible">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxUseHardlinksIfPossible" _locComment="" -->Flag indicating whether to use hard links if possible when copying files during creation of app packages.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxSkipUnchangedFiles"/>
</rng:start>
<rng:define name="AppxSkipUnchangedFiles">
<rng:element name="AppxSkipUnchangedFiles">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxSkipUnchangedFiles" _locComment="" -->Flag indicating whether to skip unchanged files when copying files during creation of app packages.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxGeneratePriEnabled"/>
</rng:start>
<rng:define name="AppxGeneratePriEnabled">
<rng:element name="AppxGeneratePriEnabled">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxGeneratePriEnabled" _locComment="" -->Flag indicating whether to generate resource index files (PRI files) during packaging.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxPackageSigningEnabled"/>
</rng:start>
<rng:define name="AppxPackageSigningEnabled">
<rng:element name="AppxPackageSigningEnabled">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxPackageSigningEnabled" _locComment="" -->Flag indicating whether to enable signing of app packages.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxPackageSigningTimestampServerUrl"/>
</rng:start>
<rng:define name="AppxPackageSigningTimestampServerUrl">
<rng:element name="AppxPackageSigningTimestampServerUrl">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxPackageSigningTimestampServerUrl" _locComment="" -->RFC 3161 timestamp server's URL.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxPackageSigningTimestampDigestAlgorithm"/>
</rng:start>
<rng:define name="AppxPackageSigningTimestampDigestAlgorithm">
<rng:element name="AppxPackageSigningTimestampDigestAlgorithm">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxPackageSigningTimestampDigestAlgorithm" _locComment="" -->Digest algorithm used by the RFC 3161 timestamp server.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxPackageIncludePrivateSymbols"/>
</rng:start>
<rng:define name="AppxPackageIncludePrivateSymbols">
<rng:element name="AppxPackageIncludePrivateSymbols">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxPackageIncludePrivateSymbols" _locComment="" -->Flag indicating whether to include private symbols in symbol packages.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxSymbolPackageEnabled"/>
</rng:start>
<rng:define name="AppxSymbolPackageEnabled">
<rng:element name="AppxSymbolPackageEnabled">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxSymbolPackageEnabled" _locComment="" -->Flag indicating whether to generate a symbol package when an app package is created.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxTestLayoutEnabled"/>
</rng:start>
<rng:define name="AppxTestLayoutEnabled">
<rng:element name="AppxTestLayoutEnabled">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxTestLayoutEnabled" _locComment="" -->Flag indicating whether to create test layout when an app package is created.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxPackageValidationEnabled"/>
</rng:start>
<rng:define name="AppxPackageValidationEnabled">
<rng:element name="AppxPackageValidationEnabled">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxPackageValidationEnabled" _locComment="" -->Flag indicating whether to enable validation of app packages.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxHarvestWinmdRegistration"/>
</rng:start>
<rng:define name="AppxHarvestWinmdRegistration">
<rng:element name="AppxHarvestWinmdRegistration">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxHarvestWinmdRegistration" _locComment="" -->Flag indicating whether to enable harvesting of WinMD registration information.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxWinMdCacheEnabled"/>
</rng:start>
<rng:define name="AppxWinMdCacheEnabled">
<rng:element name="AppxWinMdCacheEnabled">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxWinMdCacheEnabled" _locComment="" -->Flag indicating whether to cache the harvested WinMD registration information.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxWinMdCacheDir"/>
</rng:start>
<rng:define name="AppxWinMdCacheDir">
<rng:element name="AppxWinMdCacheDir">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxWinMdCacheDir" _locComment="" -->Path to the folder where harvested WinMD registration information will be cached.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="EnableSigningChecks"/>
</rng:start>
<rng:define name="EnableSigningChecks">
<rng:element name="EnableSigningChecks">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="EnableSigningChecks" _locComment="" -->Flag indicating whether to enable signing checks during app package generation.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxStrictManifestValidationEnabled"/>
</rng:start>
<rng:define name="AppxStrictManifestValidationEnabled">
<rng:element name="AppxStrictManifestValidationEnabled">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxStrictManifestValidationEnabled" _locComment="" -->Flag indicating whether to enable strict manifest validation.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxFilterOutUnusedLanguagesResourceFileMaps"/>
</rng:start>
<rng:define name="AppxFilterOutUnusedLanguagesResourceFileMaps">
<rng:element name="AppxFilterOutUnusedLanguagesResourceFileMaps">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxFilterOutUnusedLanguagesResourceFileMaps" _locComment="" -->Flag indicating whether to filter out unused language resource file maps.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxOSMinVersion"/>
</rng:start>
<rng:define name="AppxOSMinVersion">
<rng:element name="AppxOSMinVersion">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxOSMinVersion" _locComment="" -->Targeted minimum OS version.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxOSMaxVersionTested"/>
</rng:start>
<rng:define name="AppxOSMaxVersionTested">
<rng:element name="AppxOSMaxVersionTested">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxOSMaxVersionTested" _locComment="" -->Targeted maximum OS version tested.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxPackageDirName"/>
</rng:start>
<rng:define name="AppxPackageDirName">
<rng:element name="AppxPackageDirName">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxPackageDirName" _locComment="" -->Name of the folder where app packages are produced.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="PlatformSpecificBundleArtifactsListDirName"/>
</rng:start>
<rng:define name="PlatformSpecificBundleArtifactsListDirName">
<rng:element name="PlatformSpecificBundleArtifactsListDirName">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="PlatformSpecificBundleArtifactsListDirName" _locComment="" -->Name of the folder where platform-specific bundle artifact lists are stored.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxPackageDir"/>
</rng:start>
<rng:define name="AppxPackageDir">
<rng:element name="AppxPackageDir">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxPackageDir" _locComment="" -->Full path to a folder where app packages will be saved.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxPackageArtifactsDir"/>
</rng:start>
<rng:define name="AppxPackageArtifactsDir">
<rng:element name="AppxPackageArtifactsDir">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxPackageArtifactsDir" _locComment="" -->Additional qualifier to append to AppxPackageDir.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="FinalAppxManifestName"/>
</rng:start>
<rng:define name="FinalAppxManifestName">
<rng:element name="FinalAppxManifestName">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="FinalAppxManifestName" _locComment="" -->Path to the final app manifest.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxValidateAppxManifest"/>
</rng:start>
<rng:define name="AppxValidateAppxManifest">
<rng:element name="AppxValidateAppxManifest">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxValidateAppxManifest" _locComment="" -->Flag indicating whether to validate app manifest.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="MakePriExeFullPath"/>
</rng:start>
<rng:define name="MakePriExeFullPath">
<rng:element name="MakePriExeFullPath">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="MakePriExeFullPath" _locComment="" -->Full path to makepri.exe utility.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="MakeAppxExeFullPath"/>
</rng:start>
<rng:define name="MakeAppxExeFullPath">
<rng:element name="MakeAppxExeFullPath">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="MakeAppxExeFullPath" _locComment="" -->Full path to makeappx.exe utility.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="SignAppxPackageExeFullPath"/>
</rng:start>
<rng:define name="SignAppxPackageExeFullPath">
<rng:element name="SignAppxPackageExeFullPath">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="SignAppxPackageExeFullPath" _locComment="" -->Full path to signtool.exe utility.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="ResgenToolPath"/>
</rng:start>
<rng:define name="ResgenToolPath">
<rng:element name="ResgenToolPath">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="ResgenToolPath" _locComment="" -->Full path to a folder containing resgen tool.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="PdbCopyExeFullPath"/>
</rng:start>
<rng:define name="PdbCopyExeFullPath">
<rng:element name="PdbCopyExeFullPath">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="PdbCopyExeFullPath" _locComment="" -->Full path to pdbcopy.exe utility.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxSymbolStrippedDir"/>
</rng:start>
<rng:define name="AppxSymbolStrippedDir">
<rng:element name="AppxSymbolStrippedDir">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxSymbolStrippedDir" _locComment="" -->Full path to a directory where stripped PDBs will be stored.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxPrependPriInitialPath"/>
</rng:start>
<rng:define name="AppxPrependPriInitialPath">
<rng:element name="AppxPrependPriInitialPath">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxPrependPriInitialPath" _locComment="" -->Flag indicating whether to enable prepending initial path when indexing RESW and RESJSON files in class libraries.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxPriInitialPath"/>
</rng:start>
<rng:define name="AppxPriInitialPath">
<rng:element name="AppxPriInitialPath">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxPriInitialPath" _locComment="" -->Initial path when indexing RESW and RESJSON files in class libraries.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="ProjectPriFileName"/>
</rng:start>
<rng:define name="ProjectPriFileName">
<rng:element name="ProjectPriFileName">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="ProjectPriFileName" _locComment="" -->File name to use for project-specific resource index file (PRI).
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="ProjectPriFullPath"/>
</rng:start>
<rng:define name="ProjectPriFullPath">
<rng:element name="ProjectPriFullPath">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="ProjectPriFullPath" _locComment="" -->Full path to project-specific resource index file (PRI).
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxPackageRecipe"/>
</rng:start>
<rng:define name="AppxPackageRecipe">
<rng:element name="AppxPackageRecipe">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxPackageRecipe" _locComment="" -->Full path to the app package recipe.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="FinalAppxPackageRecipe"/>
</rng:start>
<rng:define name="FinalAppxPackageRecipe">
<rng:element name="FinalAppxPackageRecipe">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="FinalAppxPackageRecipe" _locComment="" -->Full path to the final app package recipe.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AllowLocalNetworkLoopback"/>
</rng:start>
<rng:define name="AllowLocalNetworkLoopback">
<rng:element name="AllowLocalNetworkLoopback">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AllowLocalNetworkLoopback" _locComment="" -->Flag indicating whether to allow local network loopback.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxDefaultHashAlgorithmId"/>
</rng:start>
<rng:define name="AppxDefaultHashAlgorithmId">
<rng:element name="AppxDefaultHashAlgorithmId">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxDefaultHashAlgorithmId" _locComment="" -->Default hash algorithm ID, used for signing an app package.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxPackageFileMap"/>
</rng:start>
<rng:define name="AppxPackageFileMap">
<rng:element name="AppxPackageFileMap">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxPackageFileMap" _locComment="" -->Full path to app package file map.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="LayoutDir"/>
</rng:start>
<rng:define name="LayoutDir">
<rng:element name="LayoutDir">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="LayoutDir" _locComment="" -->Full path to a folder with package layout.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="ManagedWinmdInprocImplementation"/>
</rng:start>
<rng:define name="ManagedWinmdInprocImplementation">
<rng:element name="ManagedWinmdInprocImplementation">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="ManagedWinmdInprocImplementation" _locComment="" -->Name of the binary containing managed WinMD in-proc implementation.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="UseIncrementalAppxRegistration"/>
</rng:start>
<rng:define name="UseIncrementalAppxRegistration">
<rng:element name="UseIncrementalAppxRegistration">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="UseIncrementalAppxRegistration" _locComment="" -->Flag indicating whether to enable incremental registration of the app layout.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxPackagingInfoFile"/>
</rng:start>
<rng:define name="AppxPackagingInfoFile">
<rng:element name="AppxPackagingInfoFile">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxPackagingInfoFile" _locComment="" -->Full path to the packaging info file which will contain paths to produced packages.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxOSMinVersionReplaceManifestVersion"/>
</rng:start>
<rng:define name="AppxOSMinVersionReplaceManifestVersion">
<rng:element name="AppxOSMinVersionReplaceManifestVersion">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxOSMinVersionReplaceManifestVersion" _locComment="" -->Flag indicating whether minimum OS version in app manifest should be replaced.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxOSMaxVersionTestedReplaceManifestVersion"/>
</rng:start>
<rng:define name="AppxOSMaxVersionTestedReplaceManifestVersion">
<rng:element name="AppxOSMaxVersionTestedReplaceManifestVersion">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxOSMaxVersionTestedReplaceManifestVersion" _locComment="" -->Flag indicating whether maximum OS version tested in app manifest should be replaced.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="PackagingFileWritesLogPath"/>
</rng:start>
<rng:define name="PackagingFileWritesLogPath">
<rng:element name="PackagingFileWritesLogPath">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="PackagingFileWritesLogPath" _locComment="" -->Full path to a text file containing packaging file writes log.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="PackagingDirectoryWritesLogPath"/>
</rng:start>
<rng:define name="PackagingDirectoryWritesLogPath">
<rng:element name="PackagingDirectoryWritesLogPath">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="PackagingDirectoryWritesLogPath" _locComment="" -->Full path to a text file containing packaging directory writes log.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxCopyLocalFilesOutputGroupIncludeXmlFiles"/>
</rng:start>
<rng:define name="AppxCopyLocalFilesOutputGroupIncludeXmlFiles">
<rng:element name="AppxCopyLocalFilesOutputGroupIncludeXmlFiles">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxCopyLocalFilesOutputGroupIncludeXmlFiles" _locComment="" -->Flag indicating whether CopyLocal files group should include XML files.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxDefaultResourceQualifiers"/>
</rng:start>
<rng:define name="AppxDefaultResourceQualifiers">
<rng:element name="AppxDefaultResourceQualifiers">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxDefaultResourceQualifiers" _locComment="" -->'|'-delimited list of key=value pairs representing default resource qualifiers.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxPriConfigXmlPackagingSnippetPath"/>
</rng:start>
<rng:define name="AppxPriConfigXmlPackagingSnippetPath">
<rng:element name="AppxPriConfigXmlPackagingSnippetPath">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxPriConfigXmlPackagingSnippetPath" _locComment="" -->Path to an XML file containing packaging element for priconfi.xml file.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxPriConfigXmlDefaultSnippetPath"/>
</rng:start>
<rng:define name="AppxPriConfigXmlDefaultSnippetPath">
<rng:element name="AppxPriConfigXmlDefaultSnippetPath">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxPriConfigXmlDefaultSnippetPath" _locComment="" -->Path to an XML file containing default element for priconfi.xml file.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="TargetPlatformSdkRootOverride"/>
</rng:start>
<rng:define name="TargetPlatformSdkRootOverride">
<rng:element name="TargetPlatformSdkRootOverride">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="TargetPlatformSdkRootOverride" _locComment="" -->Full path to platform SDK root.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxBundle"/>
</rng:start>
<rng:define name="AppxBundle">
<rng:element name="AppxBundle">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxBundle" _locComment="" -->Flag indicating whether packaging targets will produce an app bundle.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxBundlePlatforms"/>
</rng:start>
<rng:define name="AppxBundlePlatforms">
<rng:element name="AppxBundlePlatforms">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxBundlePlatforms" _locComment="" -->'|'-delimited list of platforms which will be included in an app bundle.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxBundleProducingPlatform"/>
</rng:start>
<rng:define name="AppxBundleProducingPlatform">
<rng:element name="AppxBundleProducingPlatform">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxBundleProducingPlatform" _locComment="" -->A platform which will be used to produce an app bundle.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxBundleResourcePacksProducingPlatform"/>
</rng:start>
<rng:define name="AppxBundleResourcePacksProducingPlatform">
<rng:element name="AppxBundleResourcePacksProducingPlatform">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxBundleResourcePacksProducingPlatform" _locComment="" -->A platform which will be used to produce resource packs for an app bundle.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxLayoutFolderName"/>
</rng:start>
<rng:define name="AppxLayoutFolderName">
<rng:element name="AppxLayoutFolderName">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxLayoutFolderName" _locComment="" -->Name of the folder where package layout will be prepared when producing an app bundle.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxLayoutDir"/>
</rng:start>
<rng:define name="AppxLayoutDir">
<rng:element name="AppxLayoutDir">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxLayoutDir" _locComment="" -->Full path to the folder where package layout will be prepared when producing an app bundle.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxBundlePriConfigXmlForSplittingFileName"/>
</rng:start>
<rng:define name="AppxBundlePriConfigXmlForSplittingFileName">
<rng:element name="AppxBundlePriConfigXmlForSplittingFileName">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxBundlePriConfigXmlForSplittingFileName" _locComment="" -->Full path to the priconfig.xml file used for splitting resource packs.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxBundleAutoResourcePackageQualifiers"/>
</rng:start>
<rng:define name="AppxBundleAutoResourcePackageQualifiers">
<rng:element name="AppxBundleAutoResourcePackageQualifiers">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxBundleAutoResourcePackageQualifiers" _locComment="" -->'|'-delimited list of resource qualifiers which will be used for automatic resource pack splitting.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxBundleSplitResourcesPriPrefix"/>
</rng:start>
<rng:define name="AppxBundleSplitResourcesPriPrefix">
<rng:element name="AppxBundleSplitResourcesPriPrefix">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxBundleSplitResourcesPriPrefix" _locComment="" -->Prefix used for split resources .pri and .map.txt files.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxBundleSplitResourcesPriPath"/>
</rng:start>
<rng:define name="AppxBundleSplitResourcesPriPath">
<rng:element name="AppxBundleSplitResourcesPriPath">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxBundleSplitResourcesPriPath" _locComment="" -->Full path to split resources .pri file.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxBundleSplitResourcesGeneratedFilesListPath"/>
</rng:start>
<rng:define name="AppxBundleSplitResourcesGeneratedFilesListPath">
<rng:element name="AppxBundleSplitResourcesGeneratedFilesListPath">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxBundleSplitResourcesGeneratedFilesListPath" _locComment="" -->Full path to a log file containing a list of generated files during resource splitting.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxBundleSplitResourcesQualifiersPath"/>
</rng:start>
<rng:define name="AppxBundleSplitResourcesQualifiersPath">
<rng:element name="AppxBundleSplitResourcesQualifiersPath">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxBundleSplitResourcesQualifiersPath" _locComment="" -->Full path to a log file containing a detected qualifiers during resource splitting.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxBundlePriConfigXmlForMainPackageFileMapFileName"/>
</rng:start>
<rng:define name="AppxBundlePriConfigXmlForMainPackageFileMapFileName">
<rng:element name="AppxBundlePriConfigXmlForMainPackageFileMapFileName">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxBundlePriConfigXmlForMainPackageFileMapFileName" _locComment="" -->Full path to the priconfig.xml file used for generating main package file map.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxBundleMainPackageFileMapIntermediatePrefix"/>
</rng:start>
<rng:define name="AppxBundleMainPackageFileMapIntermediatePrefix">
<rng:element name="AppxBundleMainPackageFileMapIntermediatePrefix">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxBundleMainPackageFileMapIntermediatePrefix" _locComment="" -->Prefix used for intermediate main package resources .pri and .map.txt files.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxBundleMainPackageFileMapSuffix"/>
</rng:start>
<rng:define name="AppxBundleMainPackageFileMapSuffix">
<rng:element name="AppxBundleMainPackageFileMapSuffix">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxBundleMainPackageFileMapSuffix" _locComment="" -->Suffix used before extension of resource map files.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxBundleMainPackageFileMapIntermediatePath"/>
</rng:start>
<rng:define name="AppxBundleMainPackageFileMapIntermediatePath">
<rng:element name="AppxBundleMainPackageFileMapIntermediatePath">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxBundleMainPackageFileMapIntermediatePath" _locComment="" -->Full path to an intermediate main package file map.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxBundleMainPackageFileMapIntermediatePriPath"/>
</rng:start>
<rng:define name="AppxBundleMainPackageFileMapIntermediatePriPath">
<rng:element name="AppxBundleMainPackageFileMapIntermediatePriPath">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxBundleMainPackageFileMapIntermediatePriPath" _locComment="" -->Full path to an intermediate main package .pri file.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxBundleMainPackageFileMapGeneratedFilesListPath"/>
</rng:start>
<rng:define name="AppxBundleMainPackageFileMapGeneratedFilesListPath">
<rng:element name="AppxBundleMainPackageFileMapGeneratedFilesListPath">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxBundleMainPackageFileMapGeneratedFilesListPath" _locComment="" -->Full path to a log file containing a list of generated files during generation of main package file map.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxBundleMainPackageFileMapPrefix"/>
</rng:start>
<rng:define name="AppxBundleMainPackageFileMapPrefix">
<rng:element name="AppxBundleMainPackageFileMapPrefix">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxBundleMainPackageFileMapPrefix" _locComment="" -->Prefix used for main package resources .pri and .map.txt files.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxBundleMainPackageFileMapPath"/>
</rng:start>
<rng:define name="AppxBundleMainPackageFileMapPath">
<rng:element name="AppxBundleMainPackageFileMapPath">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxBundleMainPackageFileMapPath" _locComment="" -->Full path to a main package file map.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxBundleFolderSuffix"/>
</rng:start>
<rng:define name="AppxBundleFolderSuffix">
<rng:element name="AppxBundleFolderSuffix">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxBundleFolderSuffix" _locComment="" -->Suffix to append to app bundle folder.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="PlatformSpecificBundleArtifactsListDir"/>
</rng:start>
<rng:define name="PlatformSpecificBundleArtifactsListDir">
<rng:element name="PlatformSpecificBundleArtifactsListDir">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="PlatformSpecificBundleArtifactsListDir" _locComment="" -->Full path to a folder where platform-specific bundle artifact list files are stored.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxPackageAllowDebugFrameworkReferencesInManifest"/>
</rng:start>
<rng:define name="AppxPackageAllowDebugFrameworkReferencesInManifest">
<rng:element name="AppxPackageAllowDebugFrameworkReferencesInManifest">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxPackageAllowDebugFrameworkReferencesInManifest" _locComment="" -->Flag indicating whether to allow inclusion of debug framework references in an app manifest.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="GenerateAppxPackageOnBuild"/>
</rng:start>
<rng:define name="GenerateAppxPackageOnBuild">
<rng:element name="GenerateAppxPackageOnBuild">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="GenerateAppxPackageOnBuild" _locComment="" -->Flag indicating whether to generate app package during the build.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="InsertReverseMap"/>
</rng:start>
<rng:define name="InsertReverseMap">
<rng:element name="InsertReverseMap">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="InsertReverseMap" _locComment="" -->Flag indicating whether to insert reverse resource map during resource index generation.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="IncludeBuiltProjectOutputGroup"/>
</rng:start>
<rng:define name="IncludeBuiltProjectOutputGroup">
<rng:element name="IncludeBuiltProjectOutputGroup">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="IncludeBuiltProjectOutputGroup" _locComment="" -->Flag indicating whether to include primary build outputs into the app package payload.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="IncludeDebugSymbolsProjectOutputGroup"/>
</rng:start>
<rng:define name="IncludeDebugSymbolsProjectOutputGroup">
<rng:element name="IncludeDebugSymbolsProjectOutputGroup">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="IncludeDebugSymbolsProjectOutputGroup" _locComment="" -->Flag indicating whether to include debug symbols into the app package payload.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="IncludeDocumentationProjectOutputGroup"/>
</rng:start>
<rng:define name="IncludeDocumentationProjectOutputGroup">
<rng:element name="IncludeDocumentationProjectOutputGroup">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="IncludeDocumentationProjectOutputGroup" _locComment="" -->Flag indicating whether to include documentation into the app package payload.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="IncludeSatelliteDllsProjectOutputGroup"/>
</rng:start>
<rng:define name="IncludeSatelliteDllsProjectOutputGroup">
<rng:element name="IncludeSatelliteDllsProjectOutputGroup">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="IncludeSatelliteDllsProjectOutputGroup" _locComment="" -->Flag indicating whether to include satellite DLLs into the app package payload.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="IncludeSourceFilesProjectOutputGroup"/>
</rng:start>
<rng:define name="IncludeSourceFilesProjectOutputGroup">
<rng:element name="IncludeSourceFilesProjectOutputGroup">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="IncludeSourceFilesProjectOutputGroup" _locComment="" -->Flag indicating whether to include source files into the app package payload.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="IncludeContentFilesProjectOutputGroup"/>
</rng:start>
<rng:define name="IncludeContentFilesProjectOutputGroup">
<rng:element name="IncludeContentFilesProjectOutputGroup">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="IncludeContentFilesProjectOutputGroup" _locComment="" -->Flag indicating whether to include content files into the app package payload.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="IncludeSGenFilesOutputGroup"/>
</rng:start>
<rng:define name="IncludeSGenFilesOutputGroup">
<rng:element name="IncludeSGenFilesOutputGroup">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="IncludeSGenFilesOutputGroup" _locComment="" -->Flag indicating whether to include SGen files into the app package payload.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="IncludeCopyLocalFilesOutputGroup"/>
</rng:start>
<rng:define name="IncludeCopyLocalFilesOutputGroup">
<rng:element name="IncludeCopyLocalFilesOutputGroup">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="IncludeCopyLocalFilesOutputGroup" _locComment="" -->Flag indicating whether to include files marked as 'Copy local' into the app package payload.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="IncludeComFilesOutputGroup"/>
</rng:start>
<rng:define name="IncludeComFilesOutputGroup">
<rng:element name="IncludeComFilesOutputGroup">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="IncludeComFilesOutputGroup" _locComment="" -->Flag indicating whether to include COM files into the app package payload.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="IncludeCustomOutputGroupForPackaging"/>
</rng:start>
<rng:define name="IncludeCustomOutputGroupForPackaging">
<rng:element name="IncludeCustomOutputGroupForPackaging">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="IncludeCustomOutputGroupForPackaging" _locComment="" -->Flag indicating whether to include custom output group into the app package payload.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="IncludeCopyWinmdArtifactsOutputGroup"/>
</rng:start>
<rng:define name="IncludeCopyWinmdArtifactsOutputGroup">
<rng:element name="IncludeCopyWinmdArtifactsOutputGroup">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="IncludeCopyWinmdArtifactsOutputGroup" _locComment="" -->Flag indicating whether to include WinMD artifacts into the app package payload.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="IncludeSDKRedistOutputGroup"/>
</rng:start>
<rng:define name="IncludeSDKRedistOutputGroup">
<rng:element name="IncludeSDKRedistOutputGroup">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="IncludeBuiltProjectOutputGroup" _locComment="" -->Flag indicating whether to include SDK redist into the app package payload.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="IncludePriFilesOutputGroup"/>
</rng:start>
<rng:define name="IncludePriFilesOutputGroup">
<rng:element name="IncludePriFilesOutputGroup">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="IncludePriFilesOutputGroup" _locComment="" -->Flag indicating whether to include resource index (PRI) files into the app package payload.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="IncludeGetResolvedSDKReferences"/>
</rng:start>
<rng:define name="IncludeGetResolvedSDKReferences">
<rng:element name="IncludeGetResolvedSDKReferences">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="IncludeGetResolvedSDKReferences" _locComment="" -->Flag indicating whether to include resolved SDK references into the app package payload.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="ProjectPriIndexName"/>
</rng:start>
<rng:define name="ProjectPriIndexName">
<rng:element name="ProjectPriIndexName">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="ProjectPriIndexName" _locComment="" -->Name of the resource index used in the generated .pri file.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AutoIncrementPackageRevision"/>
</rng:start>
<rng:define name="AutoIncrementPackageRevision">
<rng:element name="AutoIncrementPackageRevision">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AutoIncrementPackageRevision" _locComment="" -->Flag indicating whether to enable auto increment of an app package revision.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxBundleDir"/>
</rng:start>
<rng:define name="AppxBundleDir">
<rng:element name="AppxBundleDir">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AutoIncrementPackageRevision" _locComment="" -->Full path to a folder where app bundle will be produced.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxPackageName"/>
</rng:start>
<rng:define name="AppxPackageName">
<rng:element name="AppxPackageName">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="IncludeBuiltProjectOutputGroup" _locComment="" -->Name of the app package to generate.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxStoreContainer"/>
</rng:start>
<rng:define name="AppxStoreContainer">
<rng:element name="AppxStoreContainer">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="IncludeBuiltProjectOutputGroup" _locComment="" -->Name of the app store container to generate.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxPackageTestDir"/>
</rng:start>
<rng:define name="AppxPackageTestDir">
<rng:element name="AppxPackageTestDir">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="IncludeBuiltProjectOutputGroup" _locComment="" -->Name of the folder where test app packages will be copied
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxPackageOutput"/>
</rng:start>
<rng:define name="AppxPackageOutput">
<rng:element name="AppxPackageOutput">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxPackageOutput" _locComment="" -->Full path to the app package file.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxSymbolPackageOutput"/>
</rng:start>
<rng:define name="AppxSymbolPackageOutput">
<rng:element name="AppxSymbolPackageOutput">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxSymbolPackageOutput" _locComment="" -->Full path to the app symbol package file.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxGenerateProjectPriFileAdditionalMakepriExeParameters"/>
</rng:start>
<rng:define name="AppxGenerateProjectPriFileAdditionalMakepriExeParameters">
<rng:element name="AppxGenerateProjectPriFileAdditionalMakepriExeParameters">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxGenerateProjectPriFileAdditionalMakepriExeParameters" _locComment="" -->Additional parameters to pass to makepri.exe when generating project PRI file.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxCreatePriFilesForPortableLibrariesAdditionalMakepriExeParameters"/>
</rng:start>
<rng:define name="AppxCreatePriFilesForPortableLibrariesAdditionalMakepriExeParameters">
<rng:element name="AppxCreatePriFilesForPortableLibrariesAdditionalMakepriExeParameters">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxCreatePriFilesForPortableLibrariesAdditionalMakepriExeParameters" _locComment="" -->Additional parameters to pass to makepri.exe when generating PRI file for a portable library.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxExpandPriContentAdditionalMakepriExeParameters"/>
</rng:start>
<rng:define name="AppxExpandPriContentAdditionalMakepriExeParameters">
<rng:element name="AppxExpandPriContentAdditionalMakepriExeParameters">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxExpandPriContentAdditionalMakepriExeParameters" _locComment="" -->Additional parameters to pass to makepri.exe when extracting payload file names.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="StoreManifestName"/>
</rng:start>
<rng:define name="StoreManifestName">
<rng:element name="StoreManifestName">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="StoreManifestName" _locComment="" -->Name of the store manifest file.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxValidateStoreManifest"/>
</rng:start>
<rng:define name="AppxValidateStoreManifest">
<rng:element name="AppxValidateStoreManifest">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxValidateStoreManifest" _locComment="" -->Flag indicating whether to validate store manifest.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="UapAppxPackageBuildMode"/>
</rng:start>
<rng:define name="UapAppxPackageBuildMode">
<rng:element name="UapAppxPackageBuildMode">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="UapAppxPackageBuildMode" _locComment="" -->Configures the created packages. Possible values are: StoreAndSideload (produces the appxupload and the sideloaded packages), StoreUpload (produces only the appxupload package), and SideloadOnly(produces only the packages for sideloading).
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="EntryPointExe"/>
</rng:start>
<rng:define name="EntryPointExe">
<rng:element name="EntryPointExe">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="EntryPointExe" _locComment="" -->Windows Application Packaging project-specific: Enables the packaging of an executable without having the source code available.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="WapProjPath"/>
</rng:start>
<rng:define name="WapProjPath">
<rng:element name="WapProjPath">
<rng:ref name="StringPropertyType"/>
        <a:documentation>

                <!-- _locID_text="WapProjPath" _locComment="" -->Windows Application Packaging project-specific: Path to Windows Application Packaging project root folder.

        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="EntryPointProjectUniqueName"/>
</rng:start>
<rng:define name="EntryPointProjectUniqueName">
<rng:element name="EntryPointProjectUniqueName">
<rng:ref name="StringPropertyType"/>
        <a:documentation>

                <!-- _locID_text="EntryPointProjectUniqueName" _locComment="" -->Windows Application Packaging project-specific: Relative path to entry point project file.

        </a:documentation>
    </rng:element>
</rng:define>

    <!-- Properties enabling Store submission of appx/msix packages. -->
    <rng:start combine="choice">
<rng:ref name="EnableDirectStoreSubmission"/>
</rng:start>
<rng:define name="EnableDirectStoreSubmission">
<rng:element name="EnableDirectStoreSubmission">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="EnableDirectStoreSubmission" _locComment="" -->Enable Store Submission from the packaging wizard.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="OverwritePendingSubmission"/>
</rng:start>
<rng:define name="OverwritePendingSubmission">
<rng:element name="OverwritePendingSubmission">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="OverwritePendingSubmission" _locComment="" -->Overwrite Store Submission that has been queued by a previous build.
        </a:documentation>
    </rng:element>
</rng:define>

    <!-- Properties controlling the consumption of UWP controls. -->
    <rng:start combine="choice">
<rng:ref name="AppxExcludeXbfFromSdkPayloadWhenXamlIsPresent"/>
</rng:start>
<rng:define name="AppxExcludeXbfFromSdkPayloadWhenXamlIsPresent">
<rng:element name="AppxExcludeXbfFromSdkPayloadWhenXamlIsPresent">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxExcludeXbfFromSdkPayloadWhenXamlIsPresent" _locComment="" -->Flag to exclude XBF files when XAML is present.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxExcludeXamlFromLibraryLayoutsWhenXbfIsPresent"/>
</rng:start>
<rng:define name="AppxExcludeXamlFromLibraryLayoutsWhenXbfIsPresent">
<rng:element name="AppxExcludeXamlFromLibraryLayoutsWhenXbfIsPresent">
<rng:ref name="StringPropertyType"/>
        <a:documentation>
            <!-- _locID_text="AppxExcludeXamlFromLibraryLayoutsWhenXbfIsPresent" _locComment="" -->Flag to exclude XAML files when XBF is present.
        </a:documentation>
    </rng:element>
</rng:define>

    <!-- TODO: Remove once Windows Phone SDK starts shipping StoreManifest.xsd -->
    <rng:start combine="choice">
<rng:ref name="VSINSTALLDIR"/>
</rng:start>
<rng:define name="VSINSTALLDIR">
<rng:element name="VSINSTALLDIR">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>
    <rng:start combine="choice">
<rng:ref name="_StoreManifestSchemaDir"/>
</rng:start>
<rng:define name="_StoreManifestSchemaDir">
<rng:element name="_StoreManifestSchemaDir">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:define>

    <!-- ================ -->
    <!-- Packaging items. -->
    <!-- ================ -->

    <rng:define name="SchemaItemType">

            <rng:ref name="SimpleItemType"/>
                <rng:interleave>
<rng:optional>
<rng:element name="NamespaceAlias">
                        <a:documentation>
                            <!-- _locID_text="AppxManifestSchema_NamespaceAlias" _locComment="" -->Namespace alias used for this schema.
                        </a:documentation>
                    </rng:element>
</rng:optional>
<rng:optional>
<rng:element name="NamespaceUri">
                        <a:documentation>
                            <!-- _locID_text="AppxManifestSchema_NamespaceUri" _locComment="" -->Namespace URI used for this schema.
                        </a:documentation>
                    </rng:element>
</rng:optional>
</rng:interleave>


    </rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxManifestSchema"/>
</rng:start>
<rng:define name="AppxManifestSchema">
<rng:element name="AppxManifestSchema">
<rng:ref name="SchemaItemType"/>
        <a:documentation>
            <!-- _locID_text="AppxManifestSchema" _locComment="" -->App manifest schema file.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="StoreManifestSchema"/>
</rng:start>
<rng:define name="StoreManifestSchema">
<rng:element name="StoreManifestSchema">
<rng:ref name="SchemaItemType"/>
        <a:documentation>
            <!-- _locID_text="StoreManifestSchema" _locComment="" -->Store manifest schema file.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxHashUri"/>
</rng:start>
<rng:define name="AppxHashUri">
<rng:element name="AppxHashUri">
        <a:documentation>
            <!-- _locID_text="AppxHashUri" _locComment="" -->Hash algorithm URI.
        </a:documentation>


                <rng:ref name="SimpleItemType"/>
                    <rng:interleave>
<rng:optional>
<rng:element name="Id">
                            <a:documentation>
                                <!-- _locID_text="AppxHashUri_Id" _locComment="" -->Hash algorithm ID corresponding to given hash URI.
                            </a:documentation>
                        </rng:element>
</rng:optional>
</rng:interleave>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="PRIResource"/>
</rng:start>
<rng:define name="PRIResource">
<rng:element name="PRIResource">
        <a:documentation>
            <!-- _locID_text="PRIResource" _locComment="" -->String resources to be indexed in app package's resource index.
        </a:documentation>


                <rng:ref name="SimpleItemType"/>
                    <rng:interleave>
<rng:optional>
<rng:optional>
<rng:element name="DependentUpon">
                            <a:documentation>
                                <!-- _locID_text="PRIResource_DependentUpon" _locComment="" -->Notional path within project to indicate parent item of the current item (optional).
                            </a:documentation>
                        </rng:element>
</rng:optional>
</rng:optional>
<rng:optional>
<rng:optional>
<rng:element name="Link">
                            <a:documentation>
                                <!-- _locID_text="PRIResource_Link" _locComment="" -->Notional path within project to display if the file is physically located outside of the project file's cone (optional).
                            </a:documentation>
                        </rng:element>
</rng:optional>
</rng:optional>
<rng:optional>
<rng:optional>
<rng:element name="Visible">
<rng:ref name="boolean"/>
                            <a:documentation>
                                <!-- _locID_text="PRIResource_Visible" _locComment="" -->Display in user interface (optional, boolean).
                            </a:documentation>
                        </rng:element>
</rng:optional>
</rng:optional>
</rng:interleave>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxSystemBinary"/>
</rng:start>
<rng:define name="AppxSystemBinary">
<rng:element name="AppxSystemBinary">
<rng:ref name="SimpleItemType"/>
        <a:documentation>
            <!-- _locID_text="AppxSystemBinary" _locComment="" -->Name of any file which is present on the machine and should not be part of the app payload.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxReservedFileName"/>
</rng:start>
<rng:define name="AppxReservedFileName">
<rng:element name="AppxReservedFileName">
<rng:ref name="SimpleItemType"/>
        <a:documentation>
            <!-- _locID_text="AppxReservedFileName" _locComment="" -->Reserved file name which cannot appear in the app package.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxManifestFileNameQuery"/>
</rng:start>
<rng:define name="AppxManifestFileNameQuery">
<rng:element name="AppxManifestFileNameQuery">
<rng:ref name="SimpleItemType"/>
        <a:documentation>
            <!-- _locID_text="AppxManifestFileNameQuery" _locComment="" -->XPath queries used to extract file names from the app manifest.
        </a:documentation>
    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxManifestImageFileNameQuery"/>
</rng:start>
<rng:define name="AppxManifestImageFileNameQuery">
<rng:element name="AppxManifestImageFileNameQuery">
        <a:documentation>
            <!-- _locID_text="AppxManifestImageFileNameQuery" _locComment="" -->XPath queries used to define image files in the app manifest and restrictions on them.
        </a:documentation>


                <rng:ref name="SimpleItemType"/>
                    <rng:interleave>
<rng:optional>
<rng:element name="DescriptionID">
                            <a:documentation>
                                <!-- _locID_text="AppxManifestImageFileNameQuery_DescriptionID" _locComment="" -->ID of description string resource describing this type of the image.
                            </a:documentation>
                        </rng:element>
</rng:optional>
<rng:optional>
<rng:element name="ExpectedScaleDimensions">
                            <a:documentation>
                                <!-- _locID_text="AppxManifestImageFileNameQuery_ExpectedScaleDimensions" _locComment="" -->Semicolon-delimited list of expected scale dimensions in format '{scale}:{width}x{height}'.
                            </a:documentation>
                        </rng:element>
</rng:optional>
<rng:optional>
<rng:optional>
<rng:element name="ExpectedTargetSizes">
                            <a:documentation>
                                <!-- _locID_text="AppxManifestImageFileNameQuery_ExpectedScaleDimensions" _locComment="" -->Semicolon-delimited list of expected target sizes.
                            </a:documentation>
                        </rng:element>
</rng:optional>
</rng:optional>
<rng:optional>
<rng:optional>
<rng:element name="MaximumFileSize">
                            <a:documentation>
                                <!-- _locID_text="AppxManifestImageFileNameQuery_ExpectedScaleDimensions" _locComment="" -->Maximum file size in bytes.
                            </a:documentation>
                        </rng:element>
</rng:optional>
</rng:optional>
</rng:interleave>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxManifest"/>
</rng:start>
<rng:define name="AppxManifest">
<rng:element name="AppxManifest">
        <a:documentation>
            <!-- _locID_text="AppxManifest" _locComment="" -->app manifest template
        </a:documentation>


                <rng:ref name="SimpleItemType"/>
                    <rng:interleave>
<rng:optional>
<rng:optional>
<rng:element name="DependentUpon">
                            <a:documentation>
                                <!-- _locID_text="AppxManifest_DependentUpon" _locComment="" -->Notional path within project to indicate parent item of the current item (optional).
                            </a:documentation>
                        </rng:element>
</rng:optional>
</rng:optional>
<rng:optional>
<rng:optional>
<rng:element name="Link">
                            <a:documentation>
                                <!-- _locID_text="AppxManifest_Link" _locComment="" -->Notional path within project to display if the file is physically located outside of the project file's cone (optional).
                            </a:documentation>
                        </rng:element>
</rng:optional>
</rng:optional>
<rng:optional>
<rng:optional>
<rng:element name="SubType">
                            <a:documentation>
                                <!-- _locID_text="AppxManifest_SubType" _locComment="" -->Visual Studio sub-type for this item (optional).
                            </a:documentation>
                        </rng:element>
</rng:optional>
</rng:optional>
<rng:optional>
<rng:optional>
<rng:element name="Visible">
<rng:ref name="boolean"/>
                            <a:documentation>
                                <!-- _locID_text="AppxManifest_Visible" _locComment="" -->Display in user interface (optional, boolean).
                            </a:documentation>
                        </rng:element>
</rng:optional>
</rng:optional>
</rng:interleave>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="StoreAssociationFile"/>
</rng:start>
<rng:define name="StoreAssociationFile">
<rng:element name="StoreAssociationFile">
        <a:documentation>
            <!-- _locID_text="StoreAssociationFile" _locComment="" -->A file containing app store association data.
        </a:documentation>


                <rng:ref name="SimpleItemType"/>
                    <rng:interleave>
<rng:optional>
<rng:optional>
<rng:element name="DependentUpon">
                            <a:documentation>
                                <!-- _locID_text="StoreAssociationFile_DependentUpon" _locComment="" -->Notional path within project to indicate parent item of the current item (optional).
                            </a:documentation>
                        </rng:element>
</rng:optional>
</rng:optional>
<rng:optional>
<rng:optional>
<rng:element name="Link">
                            <a:documentation>
                                <!-- _locID_text="StoreAssociationFile_Link" _locComment="" -->Notional path within project to display if the file is physically located outside of the project file's cone (optional).
                            </a:documentation>
                        </rng:element>
</rng:optional>
</rng:optional>
<rng:optional>
<rng:optional>
<rng:element name="Visible">
<rng:ref name="boolean"/>
                            <a:documentation>
                                <!-- _locID_text="StoreAssociationFile_Visible" _locComment="" -->Display in user interface (optional, boolean).
                            </a:documentation>
                        </rng:element>
</rng:optional>
</rng:optional>
</rng:interleave>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxManifestMetadata"/>
</rng:start>
<rng:define name="AppxManifestMetadata">
<rng:element name="AppxManifestMetadata">
        <a:documentation>
            <!-- _locID_text="AppxManifestMetadata" _locComment="" -->App manifest metadata item. Can be a literal, or it can be a path to a binary to extract version from.
        </a:documentation>


                <rng:ref name="SimpleItemType"/>
                    <rng:interleave>
<rng:optional>
<rng:optional>
<rng:element name="Value">
                            <a:documentation>
                                <!-- _locID_text="AppxManifestMetadata_Value" _locComment="" -->Literal value of app manifest metadata to insert into manifest.
                            </a:documentation>
                        </rng:element>
</rng:optional>
</rng:optional>
<rng:optional>
<rng:optional>
<rng:element name="Version">
                            <a:documentation>
                                <!-- _locID_text="AppxManifestMetadata_Version" _locComment="" -->Version to be inserted as a value of app manifest metadata to insert into manifest.
                            </a:documentation>
                        </rng:element>
</rng:optional>
</rng:optional>
<rng:optional>
<rng:optional>
<rng:element name="Name">
                            <a:documentation>
                                <!-- _locID_text="AppxManifestMetadata_Name" _locComment="" -->Name of app manifest metadata to insert into manifest.
                            </a:documentation>
                        </rng:element>
</rng:optional>
</rng:optional>
</rng:interleave>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="PlatformVersionDescription"/>
</rng:start>
<rng:define name="PlatformVersionDescription">
<rng:element name="PlatformVersionDescription">
        <a:documentation>
            <!-- _locID_text="PlatformVersionDescription" _locComment="" -->Platform version description. Used to map between internal OS version and marketing OS version.
        </a:documentation>


                <rng:ref name="SimpleItemType"/>
                    <rng:interleave>
<rng:optional>
<rng:element name="TargetPlatformIdentifier">
                            <a:documentation>
                                <!-- _locID_text="PlatformVersionDescription_TargetPlatformIdentifier" _locComment="" -->Target platform identifier.
                            </a:documentation>
                        </rng:element>
</rng:optional>
<rng:optional>
<rng:element name="TargetPlatformVersion">
                            <a:documentation>
                                <!-- _locID_text="PlatformVersionDescription_TargetPlatformVersion" _locComment="" -->Target platform version.
                            </a:documentation>
                        </rng:element>
</rng:optional>
<rng:optional>
<rng:element name="OSVersion">
                            <a:documentation>
                                <!-- _locID_text="PlatformVersionDescription_OSVersion" _locComment="" -->Internal OS version.
                            </a:documentation>
                        </rng:element>
</rng:optional>
</rng:interleave>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="AppxPackagePayload"/>
</rng:start>
<rng:define name="AppxPackagePayload">
<rng:element name="AppxPackagePayload">


                <rng:ref name="SimpleItemType"/>
                    <rng:interleave>
<rng:optional>
<rng:optional>
<rng:element name="TargetPath"/>
</rng:optional>
</rng:optional>
<rng:optional>
<rng:optional>
<rng:element name="OutputGroup"/>
</rng:optional>
</rng:optional>
</rng:interleave>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="ComFilesOutputGroupOutputs"/>
</rng:start>
<rng:define name="ComFilesOutputGroupOutputs">
<rng:element name="ComFilesOutputGroupOutputs">


                <rng:ref name="SimpleItemType"/>
                    <rng:interleave>
<rng:optional>
<rng:optional>
<rng:element name="TargetPath"/>
</rng:optional>
</rng:optional>
</rng:interleave>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="CopyWinmdArtifactsOutputGroupOutputs"/>
</rng:start>
<rng:define name="CopyWinmdArtifactsOutputGroupOutputs">
<rng:element name="CopyWinmdArtifactsOutputGroupOutputs">


                <rng:ref name="SimpleItemType"/>
                    <rng:interleave>
<rng:optional>
<rng:optional>
<rng:element name="TargetPath"/>
</rng:optional>
</rng:optional>
</rng:interleave>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="CopyLocalFilesOutputGroupOutput"/>
</rng:start>
<rng:define name="CopyLocalFilesOutputGroupOutput">
<rng:element name="CopyLocalFilesOutputGroupOutput">


                <rng:ref name="SimpleItemType"/>
                    <rng:interleave>
<rng:optional>
<rng:optional>
<rng:element name="TargetPath"/>
</rng:optional>
</rng:optional>
</rng:interleave>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="_PackagingOutputsUnexpanded"/>
</rng:start>
<rng:define name="_PackagingOutputsUnexpanded">
<rng:element name="_PackagingOutputsUnexpanded">


                <rng:ref name="SimpleItemType"/>
                    <rng:interleave>
<rng:optional>
<rng:optional>
<rng:element name="TargetPath">
<rng:ref name="StringPropertyType"/>
</rng:element>
</rng:optional>
</rng:optional>
<rng:optional>
<rng:optional>
<rng:element name="OutputGroup"/>
</rng:optional>
</rng:optional>
<rng:optional>
<rng:optional>
<rng:element name="ProjectName"/>
</rng:optional>
</rng:optional>
</rng:interleave>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="_GetResolvedSDKReferencesOutput"/>
</rng:start>
<rng:define name="_GetResolvedSDKReferencesOutput">
<rng:element name="_GetResolvedSDKReferencesOutput">


                <rng:ref name="SimpleItemType"/>
                    <rng:interleave>
<rng:optional>
<rng:optional>
<rng:element name="OutputGroup"/>
</rng:optional>
</rng:optional>
<rng:optional>
<rng:optional>
<rng:element name="ProjectName"/>
</rng:optional>
</rng:optional>
</rng:interleave>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="_ProjectArchitectureItem"/>
</rng:start>
<rng:define name="_ProjectArchitectureItem">
<rng:element name="_ProjectArchitectureItem">


                <rng:ref name="SimpleItemType"/>
                    <rng:interleave>
<rng:optional>
<rng:optional>
<rng:element name="OutputGroup"/>
</rng:optional>
</rng:optional>
<rng:optional>
<rng:optional>
<rng:element name="ProjectName"/>
</rng:optional>
</rng:optional>
</rng:interleave>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="_AppxBundleResourceFileMapsIntermediate"/>
</rng:start>
<rng:define name="_AppxBundleResourceFileMapsIntermediate">
<rng:element name="_AppxBundleResourceFileMapsIntermediate">


                <rng:ref name="SimpleItemType"/>
                    <rng:interleave>
<rng:optional>
<rng:optional>
<rng:element name="ResourcePack"/>
</rng:optional>
</rng:optional>
</rng:interleave>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="ProjectPriFile"/>
</rng:start>
<rng:define name="ProjectPriFile">
<rng:element name="ProjectPriFile">


                <rng:ref name="SimpleItemType"/>
                    <rng:interleave>
<rng:optional>
<rng:optional>
<rng:element name="TargetPath"/>
</rng:optional>
</rng:optional>
<rng:optional>
<rng:optional>
<rng:element name="OutputGroup"/>
</rng:optional>
</rng:optional>
<rng:optional>
<rng:optional>
<rng:element name="ProjectName"/>
</rng:optional>
</rng:optional>
</rng:interleave>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="_ProjectArchitectureFromPayload"/>
</rng:start>
<rng:define name="_ProjectArchitectureFromPayload">
<rng:element name="_ProjectArchitectureFromPayload">


                <rng:ref name="SimpleItemType"/>
                    <rng:interleave>
<rng:optional>
<rng:optional>
<rng:element name="MSBuildSourceProjectFile"/>
</rng:optional>
</rng:optional>
</rng:interleave>



    </rng:element>
</rng:define>

    <!-- ================ -->
    <!-- Packaging tasks. -->
    <!-- ================ -->

    <rng:define name="ToolTaskType">

            <rng:ref name="TaskType"/>
                <rng:optional>
<rng:attribute name="ExitCode"/>
</rng:optional>
                <rng:optional>
<rng:attribute name="YieldDuringToolExecution">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                <rng:optional>
<rng:attribute name="UseCommandProcessor">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                <rng:optional>
<rng:attribute name="EchoOff">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                <rng:optional>
<rng:attribute name="ToolExe"/>
</rng:optional>
                <rng:optional>
<rng:attribute name="ToolPath"/>
</rng:optional>
                <rng:optional>
<rng:attribute name="EnvironmentVariables"/>
</rng:optional>
                <rng:optional>
<rng:attribute name="Timeout"/>
</rng:optional>
                <rng:optional>
<rng:attribute name="StandardErrorImportance"/>
</rng:optional>
                <rng:optional>
<rng:attribute name="StandardOutputImportance"/>
</rng:optional>
                <rng:optional>
<rng:attribute name="LogStandardErrorAsError">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>


    </rng:define>

    <rng:start combine="choice">
<rng:ref name="CreateAppStoreContainer"/>
</rng:start>
<rng:define name="CreateAppStoreContainer">
<rng:element name="CreateAppStoreContainer">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="Items"/>
                    <rng:attribute name="ProjectName"/>
                    <rng:optional>
<rng:attribute name="OutputPath"/>
</rng:optional>



    </rng:element>
</rng:define>

    <rng:define name="CreatePriConfigXmlTaskType">

            <rng:ref name="TaskType"/>
                <rng:attribute name="PriConfigXmlPath"/>
                <rng:optional>
<rng:attribute name="PriInitialPath"/>
</rng:optional>
                <rng:attribute name="DefaultResourceLanguage"/>
                <rng:attribute name="DefaultResourceQualifiers"/>
                <rng:optional>
<rng:attribute name="ConvertDotsToSlashes">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                <rng:attribute name="IntermediateExtension"/>
                <rng:optional>
<rng:attribute name="PriConfigXmlPackagingSnippetPath"/>
</rng:optional>
                <rng:optional>
<rng:attribute name="PriConfigXmlDefaultSnippetPath"/>
</rng:optional>
                <rng:attribute name="TargetPlatformIdentifier"/>
                <rng:attribute name="TargetPlatformVersion"/>


    </rng:define>

    <rng:start combine="choice">
<rng:ref name="CreatePriConfigXmlTask"/>
</rng:start>
<rng:define name="CreatePriConfigXmlTask">
<rng:element name="CreatePriConfigXmlTask">
<rng:ref name="CreatePriConfigXmlTaskType"/>
</rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="CreatePriConfigXmlForFullIndex"/>
</rng:start>
<rng:define name="CreatePriConfigXmlForFullIndex">
<rng:element name="CreatePriConfigXmlForFullIndex">


                <rng:ref name="CreatePriConfigXmlTaskType"/>
                    <rng:attribute name="LayoutResfilesPath"/>
                    <rng:attribute name="ResourcesResfilesPath"/>
                    <rng:attribute name="PriResfilesPath"/>



    </rng:element>
</rng:define>

    <rng:define name="CreatePriConfigXmlWithPackagingElementTaskType">

            <rng:ref name="CreatePriConfigXmlTaskType"/>
                <rng:attribute name="AppxBundleAutoResourcePackageQualifiers"/>


    </rng:define>

    <rng:start combine="choice">
<rng:ref name="CreatePriConfigXmlForMainPackageFileMap"/>
</rng:start>
<rng:define name="CreatePriConfigXmlForMainPackageFileMap">
<rng:element name="CreatePriConfigXmlForMainPackageFileMap">
<rng:ref name="CreatePriConfigXmlWithPackagingElementTaskType"/>
</rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="CreatePriConfigXmlForSplitting"/>
</rng:start>
<rng:define name="CreatePriConfigXmlForSplitting">
<rng:element name="CreatePriConfigXmlForSplitting">


                <rng:ref name="CreatePriConfigXmlWithPackagingElementTaskType"/>
                    <rng:attribute name="ResourcesPriFilePath"/>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="CreatePriFilesForPortableLibraries"/>
</rng:start>
<rng:define name="CreatePriFilesForPortableLibraries">
<rng:element name="CreatePriFilesForPortableLibraries">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="ContentToIndex"/>
                    <rng:attribute name="MakePriExeFullPath"/>
                    <rng:optional>
<rng:attribute name="MakePriExtensionPath"/>
</rng:optional>
                    <rng:attribute name="IntermediateDirectory"/>
                    <rng:attribute name="DefaultResourceLanguage"/>
                    <rng:attribute name="DefaultResourceQualifiers"/>
                    <rng:optional>
<rng:attribute name="IntermediateFileWrites"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="CreatedPriFiles"/>
</rng:optional>
                    <rng:attribute name="IntermediateExtension"/>
                    <rng:optional>
<rng:attribute name="AdditionalMakepriExeParameters"/>
</rng:optional>
                    <rng:attribute name="TargetPlatformIdentifier"/>
                    <rng:attribute name="TargetPlatformVersion"/>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="ExpandPayloadDirectories"/>
</rng:start>
<rng:define name="ExpandPayloadDirectories">
<rng:element name="ExpandPayloadDirectories">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="Inputs"/>
                    <rng:optional>
<rng:attribute name="Expanded"/>
</rng:optional>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="ExpandPriContent"/>
</rng:start>
<rng:define name="ExpandPriContent">
<rng:element name="ExpandPriContent">


                <rng:ref name="ToolTaskType"/>
                    <rng:attribute name="Inputs"/>
                    <rng:optional>
<rng:attribute name="Expanded"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="IntermediateFileWrites"/>
</rng:optional>
                    <rng:attribute name="IntermediateDirectory"/>
                    <rng:optional>
<rng:attribute name="AdditionalMakepriExeParameters"/>
</rng:optional>
                    <rng:attribute name="MakePriExeFullPath"/>
                    <rng:optional>
<rng:attribute name="MakePriExtensionPath"/>
</rng:optional>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="ExtractHashAlgorithmId"/>
</rng:start>
<rng:define name="ExtractHashAlgorithmId">
<rng:element name="ExtractHashAlgorithmId">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="StoreAssociationFile"/>
</rng:optional>
                    <rng:attribute name="HashUris"/>
                    <rng:optional>
<rng:attribute name="HashAlgorithmId"/>
</rng:optional>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="FilterOutUnusedLanguagesResourceFileMaps"/>
</rng:start>
<rng:define name="FilterOutUnusedLanguagesResourceFileMaps">
<rng:element name="FilterOutUnusedLanguagesResourceFileMaps">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="FileMaps"/>
                    <rng:attribute name="FileNamePrefix"/>
                    <rng:attribute name="MapSuffix"/>
                    <rng:attribute name="Languages"/>
                    <rng:optional>
<rng:attribute name="FilteredFileMaps"/>
</rng:optional>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="GenerateAppxManifest"/>
</rng:start>
<rng:define name="GenerateAppxManifest">
<rng:element name="GenerateAppxManifest">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="ApplicationExecutableName"/>
</rng:optional>
                    <rng:attribute name="AppxManifestInput"/>
                    <rng:optional>
<rng:attribute name="CertificateThumbprint"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="CertificateFile"/>
</rng:optional>
                    <rng:attribute name="PackageArchitecture"/>
                    <rng:attribute name="FrameworkSdkReferences"/>
                    <rng:attribute name="NonFrameworkSdkReferences"/>
                    <rng:attribute name="AppxManifestOutput"/>
                    <rng:attribute name="DefaultResourceLanguage"/>
                    <rng:attribute name="QualifiersPath"/>
                    <rng:attribute name="ManagedWinmdInprocImplementation"/>
                    <rng:attribute name="WinmdFiles"/>
                    <rng:attribute name="SDKWinmdFiles"/>
                    <rng:optional>
<rng:attribute name="OSMinVersion"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OSMaxVersionTested"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OSMinVersionReplaceManifestVersion">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OSMaxVersionTestedReplaceManifestVersion">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="EnableSigningChecks">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ManifestMetadata"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="TargetPlatformIdentifier"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="PackageSigningEnabled">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="GenerateAppxPackageRecipe"/>
</rng:start>
<rng:define name="GenerateAppxPackageRecipe">
<rng:element name="GenerateAppxPackageRecipe">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="AppxManifestXml"/>
                    <rng:attribute name="SourceAppxManifest"/>
                    <rng:attribute name="SolutionConfiguration"/>
                    <rng:attribute name="PayloadFiles"/>
                    <rng:attribute name="FrameworkSdkPackages"/>
                    <rng:attribute name="RecipeFile"/>
                    <rng:attribute name="SystemBinaries"/>
                    <rng:attribute name="ReservedFileNames"/>
                    <rng:attribute name="QueryNamespacePrefix"/>
                    <rng:attribute name="QueryNamespace81Prefix"/>
                    <rng:attribute name="ManifestFileNameQueries"/>
                    <rng:attribute name="ManifestImageFileNameQueries"/>
                    <rng:attribute name="PackageArchitecture"/>
                    <rng:attribute name="ProjectDir"/>
                    <rng:attribute name="TargetPlatformIdentifier"/>
                    <rng:optional>
<rng:attribute name="IndexedPayloadFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="MakePriExtensionPath"/>
</rng:optional>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="GenerateAppxSymbolPackage"/>
</rng:start>
<rng:define name="GenerateAppxSymbolPackage">
<rng:element name="GenerateAppxSymbolPackage">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="PdbCopyExeFullPath"/>
                    <rng:attribute name="PdbFiles"/>
                    <rng:attribute name="StrippedDirectory"/>
                    <rng:attribute name="AppxSymbolPackageOutput"/>
                    <rng:attribute name="ProjectName"/>
                    <rng:optional>
<rng:attribute name="StrippedPdbs"/>
</rng:optional>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="GeneratePriConfigurationFiles"/>
</rng:start>
<rng:define name="GeneratePriConfigurationFiles">
<rng:element name="GeneratePriConfigurationFiles">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="LayoutResfilesPath"/>
                    <rng:attribute name="ResourcesResfilesPath"/>
                    <rng:attribute name="PriResfilesPath"/>
                    <rng:attribute name="LayoutFiles"/>
                    <rng:attribute name="PRIResourceFiles"/>
                    <rng:attribute name="PriFiles"/>
                    <rng:attribute name="IntermediateExtension"/>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="GenerateProjectArchitecturesFile"/>
</rng:start>
<rng:define name="GenerateProjectArchitecturesFile">
<rng:element name="GenerateProjectArchitecturesFile">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="ProjectArchitectures"/>
                    <rng:attribute name="ProjectArchitecturesFilePath"/>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="GenerateProjectPriFile"/>
</rng:start>
<rng:define name="GenerateProjectPriFile">
<rng:element name="GenerateProjectPriFile">


                <rng:ref name="ToolTaskType"/>
                    <rng:attribute name="MakePriExeFullPath"/>
                    <rng:attribute name="PriConfigXmlPath"/>
                    <rng:optional>
<rng:attribute name="IndexFilesForQualifiersCollection"/>
</rng:optional>
                    <rng:attribute name="ProjectPriIndexName"/>
                    <rng:optional>
<rng:attribute name="MappingFileFormat"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="InsertReverseMap"/>
</rng:optional>
                    <rng:attribute name="ProjectDirectory"/>
                    <rng:attribute name="OutputFileName"/>
                    <rng:optional>
<rng:attribute name="MakePriExtensionPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="QualifiersPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="GeneratedFilesListPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AdditionalMakepriExeParameters"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="MultipleQualifiersPerDimensionFoundPath"/>
</rng:optional>
                    <rng:attribute name="IntermediateExtension"/>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="GetAppxBundlePlatforms"/>
</rng:start>
<rng:define name="GetAppxBundlePlatforms">
<rng:element name="GetAppxBundlePlatforms">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="Input"/>
                    <rng:attribute name="PackageArchitecture"/>
                    <rng:optional>
<rng:attribute name="Platforms"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Last"/>
</rng:optional>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="GetDefaultResourceLanguage"/>
</rng:start>
<rng:define name="GetDefaultResourceLanguage">
<rng:element name="GetDefaultResourceLanguage">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="DefaultLanguage"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SourceAppxManifest"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="DefaultResourceLanguage"/>
</rng:optional>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="GetFrameworkSdkPackages"/>
</rng:start>
<rng:define name="GetFrameworkSdkPackages">
<rng:element name="GetFrameworkSdkPackages">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="FrameworkSdkReferences"/>
                    <rng:optional>
<rng:attribute name="FrameworkSdkPackages"/>
</rng:optional>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="GetPackageArchitecture"/>
</rng:start>
<rng:define name="GetPackageArchitecture">
<rng:element name="GetPackageArchitecture">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="Platform"/>
                    <rng:attribute name="ProjectArchitecture"/>
                    <rng:attribute name="RecursiveProjectArchitecture"/>
                    <rng:optional>
<rng:attribute name="PackageArchitecture"/>
</rng:optional>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="GetSdkPropertyValue"/>
</rng:start>
<rng:define name="GetSdkPropertyValue">
<rng:element name="GetSdkPropertyValue">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="TargetPlatformIdentifier"/>
                    <rng:attribute name="TargetPlatformVersion"/>
                    <rng:optional>
<rng:attribute name="TargetPlatformSdkRootOverride"/>
</rng:optional>
                    <rng:attribute name="PropertyName"/>
                    <rng:optional>
<rng:attribute name="PropertyValue"/>
</rng:optional>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="GetSdkToolFullPath"/>
</rng:start>
<rng:define name="GetSdkToolFullPath">
<rng:element name="GetSdkToolFullPath">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="ToolName"/>
                    <rng:optional>
<rng:attribute name="ToolFullPath"/>
</rng:optional>
                    <rng:attribute name="TargetPlatformIdentifier"/>
                    <rng:attribute name="TargetPlatformVersion"/>
                    <rng:optional>
<rng:attribute name="TargetPlatformSdkRootOverride"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="MSBuildArchitecture"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ActualToolFullPath"/>
</rng:optional>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="GetWindowsDesktopSdkDir"/>
</rng:start>
<rng:define name="GetWindowsDesktopSdkDir">
<rng:element name="GetWindowsDesktopSdkDir">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="TargetPlatformIdentifier"/>
                    <rng:attribute name="TargetPlatformVersion"/>
                    <rng:optional>
<rng:attribute name="TargetPlatformSdkRootOverride"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="WindowsDesktopSdkDir"/>
</rng:optional>



    </rng:element>
</rng:define>

    <rng:define name="MakeAppxType">

            <rng:ref name="ToolTaskType"/>
                <rng:attribute name="MakeAppxExeFullPath"/>
                <rng:optional>
<rng:attribute name="Parameters"/>
</rng:optional>


    </rng:define>

    <rng:define name="MakeAppxWithOutputType">

            <rng:ref name="MakeAppxType"/>
                <rng:attribute name="Output"/>


    </rng:define>

    <rng:start combine="choice">
<rng:ref name="MakeAppxBundle"/>
</rng:start>
<rng:define name="MakeAppxBundle">
<rng:element name="MakeAppxBundle">


                <rng:ref name="MakeAppxWithOutputType"/>
                    <rng:attribute name="BundleDir"/>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="MakeAppxPack"/>
</rng:start>
<rng:define name="MakeAppxPack">
<rng:element name="MakeAppxPack">


                <rng:ref name="MakeAppxWithOutputType"/>
                    <rng:optional>
<rng:attribute name="ResourcePack">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ValidateResourcesReferencedByManifest">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:attribute name="HashAlgorithmId"/>
                    <rng:optional>
<rng:attribute name="AppxManifest"/>
</rng:optional>
                    <rng:attribute name="FileMap"/>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="ParsePlatformSpecificBundleArtifactsLists"/>
</rng:start>
<rng:define name="ParsePlatformSpecificBundleArtifactsLists">
<rng:element name="ParsePlatformSpecificBundleArtifactsLists">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="Files"/>
                    <rng:optional>
<rng:attribute name="Artifacts"/>
</rng:optional>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="RemoveDuplicatePayload"/>
</rng:start>
<rng:define name="RemoveDuplicatePayload">
<rng:element name="RemoveDuplicatePayload">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="Inputs"/>
                    <rng:attribute name="Platform"/>
                    <rng:optional>
<rng:attribute name="Filtered"/>
</rng:optional>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="RemoveDuplicatePriFiles"/>
</rng:start>
<rng:define name="RemoveDuplicatePriFiles">
<rng:element name="RemoveDuplicatePriFiles">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="Inputs"/>
                    <rng:attribute name="Platform"/>
                    <rng:optional>
<rng:attribute name="Filtered"/>
</rng:optional>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="RemoveDuplicateSDKReferences"/>
</rng:start>
<rng:define name="RemoveDuplicateSDKReferences">
<rng:element name="RemoveDuplicateSDKReferences">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="Inputs"/>
                    <rng:optional>
<rng:attribute name="Filtered"/>
</rng:optional>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="SignAppxPackage"/>
</rng:start>
<rng:define name="SignAppxPackage">
<rng:element name="SignAppxPackage">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="AppxPackageToSign"/>
                    <rng:optional>
<rng:attribute name="CertificateThumbprint"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="CertificateFile"/>
</rng:optional>
                    <rng:attribute name="HashAlgorithmId"/>
                    <rng:attribute name="TargetPlatformIdentifier"/>
                    <rng:attribute name="TargetPlatformVersion"/>
                    <rng:optional>
<rng:attribute name="TargetPlatformSdkRootOverride"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SignAppxPackageExeFullPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="MSBuildArchitecture"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="EnableSigningChecks">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ExportCertificate">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ResolvedThumbprint"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AppxPackagePublicKeyFile"/>
</rng:optional>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="StripPrivateSymbols"/>
</rng:start>
<rng:define name="StripPrivateSymbols">
<rng:element name="StripPrivateSymbols">


                <rng:ref name="ToolTaskType"/>
                    <rng:attribute name="PdbCopyToolPath"/>
                    <rng:attribute name="InputPdb"/>
                    <rng:attribute name="StrippedPdb"/>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="Unzip"/>
</rng:start>
<rng:define name="Unzip">
<rng:element name="Unzip">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="DestinationFiles"/>
</rng:optional>
                    <rng:attribute name="DestinationFolder"/>
                    <rng:optional>
<rng:attribute name="OverwriteReadOnlyFiles">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SkipUnchangedFiles">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:attribute name="SourceFiles"/>
                    <rng:optional>
<rng:attribute name="UnzippedFiles"/>
</rng:optional>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="UpdateAppxManifestForBundle"/>
</rng:start>
<rng:define name="UpdateAppxManifestForBundle">
<rng:element name="UpdateAppxManifestForBundle">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="FinalAppxManifest"/>
                    <rng:attribute name="AppxManifestForBundle"/>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="UpdateMainPackageFileMap"/>
</rng:start>
<rng:define name="UpdateMainPackageFileMap">
<rng:element name="UpdateMainPackageFileMap">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="Input"/>
                    <rng:attribute name="Output"/>
                    <rng:attribute name="SplitResourcesPriPath"/>
                    <rng:attribute name="DefaultResourceLanguage"/>
                    <rng:attribute name="DefaultResourceQualifiers"/>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="ValidateAppxManifest"/>
</rng:start>
<rng:define name="ValidateAppxManifest">
<rng:element name="ValidateAppxManifest">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="Input"/>
                    <rng:attribute name="SourceAppxManifest"/>
                    <rng:attribute name="AppxManifestSchema"/>
                    <rng:optional>
<rng:attribute name="StoreAssociationFile"/>
</rng:optional>
                    <rng:attribute name="TargetPlatformIdentifier"/>
                    <rng:attribute name="TargetPlatformVersion"/>
                    <rng:attribute name="OSMinVersion"/>
                    <rng:attribute name="OSMaxVersionTested"/>
                    <rng:attribute name="PlatformVersionDescriptions"/>
                    <rng:attribute name="ResolvedSDKReferences"/>
                    <rng:optional>
<rng:attribute name="StrictManifestValidationEnabled">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ValidateWinmds">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="NonFrameworkSdkReferences"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="WinmdFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SDKWinmdFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ManagedWinmdInprocImplementation"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="ValidateManifest">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Resources"/>
</rng:optional>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="ValidateAppxManifestItems"/>
</rng:start>
<rng:define name="ValidateAppxManifestItems">
<rng:element name="ValidateAppxManifestItems">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="AppxManifestItems"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="CustomAppxManifestItems"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="AppxPackageProject">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="IdentityName"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="IdentityVersion"/>
</rng:optional>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="ValidateAppxPackage"/>
</rng:start>
<rng:define name="ValidateAppxPackage">
<rng:element name="ValidateAppxPackage">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="SourceAppxManifest"/>
                    <rng:attribute name="AppxManifest"/>
                    <rng:optional>
<rng:attribute name="StoreAssociationFile"/>
</rng:optional>
                    <rng:attribute name="PackageArchitecture"/>
                    <rng:attribute name="AppxPackagePayload"/>
                    <rng:attribute name="QueryNamespacePrefix"/>
                    <rng:attribute name="QueryNamespace81Prefix"/>
                    <rng:attribute name="ManifestImageFileNameQueries"/>
                    <rng:attribute name="ResolvedSDKReferences"/>
                    <rng:optional>
<rng:attribute name="AllowDebugFrameworkReferencesInManifest">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:attribute name="ProjectDir"/>
                    <rng:optional>
<rng:attribute name="IndexedPayloadFiles"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="MakePriExtensionPath"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="OSMinVersion"/>
</rng:optional>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="ValidateStoreManifest"/>
</rng:start>
<rng:define name="ValidateStoreManifest">
<rng:element name="ValidateStoreManifest">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="Input"/>
                    <rng:attribute name="StoreManifestSchema"/>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="DownloadFile"/>
</rng:start>
<rng:define name="DownloadFile">
<rng:element name="DownloadFile">


                <rng:ref name="TaskType"/>
                    <rng:optional>
<rng:attribute name="DestinationFileName"/>
</rng:optional>
                    <rng:attribute name="DestinationFolder"/>
                    <rng:optional>
<rng:attribute name="DownloadedFile"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="Retries"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="RetryDelayMilliseconds"/>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SkipUnchangedFiles"/>
</rng:optional>
                    <rng:attribute name="SourceUrl"/>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="ZipDirectory"/>
</rng:start>
<rng:define name="ZipDirectory">
<rng:element name="ZipDirectory">


                <rng:ref name="TaskType"/>
                    <rng:attribute name="DestinationFile"/>
                    <rng:optional>
<rng:attribute name="Overwrite">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>
                    <rng:optional>
<rng:attribute name="SourceDirectory">
<rng:ref name="boolean"/>
</rng:attribute>
</rng:optional>



    </rng:element>
</rng:define>

    <rng:start combine="choice">
<rng:ref name="Using"/>
</rng:start>
<rng:define name="Using">
<rng:element name="Using">
    <a:documentation>

        <!-- _locID_text="Using" _locComment="" -->A C# global using to add to the project.

    </a:documentation>


        <rng:ref name="SimpleItemType"/>
          <rng:optional>
<rng:attribute name="Include">
<rng:data type="string">
            <a:documentation>

                <!-- _locID_text="Using_Include" _locComment="" -->The namespace or type identifier to add, e.g. Microsoft.AspNetCore

            </a:documentation>
          </rng:data>
</rng:attribute>
</rng:optional>
          <rng:optional>
<rng:attribute name="Alias">
<rng:data type="string">
            <a:documentation>

                <!-- _locID_text="Using_Alias" _locComment="" -->Optional alias for the namespace or type.

            </a:documentation>
          </rng:data>
</rng:attribute>
</rng:optional>
          <rng:optional>
<rng:attribute name="Static">
<rng:ref name="boolean"/>
            <a:documentation>

                <!-- _locID_text="Using_Static" _locComment="" -->Determines whether the identifier should be registered as a static import.

            </a:documentation>
          </rng:attribute>
</rng:optional>



  </rng:element>
</rng:define>

  <rng:start combine="choice">
<rng:ref name="InternalsVisibleTo"/>
</rng:start>
<rng:define name="InternalsVisibleTo">
<rng:element name="InternalsVisibleTo">
  <a:documentation>

      <!-- _locID_text="InternalsVisibleTo" _locComment="" -->Specifies that internal types and members are visible to the specified friend assemblies.

  </a:documentation>


        <rng:ref name="SimpleItemType"/>
          <rng:optional>
<rng:attribute name="Include">
<rng:data type="string">
            <a:documentation>

                <!-- _locID_text="InternalsVisibleTo_Include" _locComment="" -->The name of the friend assembly to make internal types and members visible to.

            </a:documentation>
          </rng:data>
</rng:attribute>
</rng:optional>
          <rng:optional>
<rng:attribute name="PublicKey">
<rng:data type="string">
            <a:documentation>

                <!-- _locID_text="InternalsVisibleTo_PublicKey" _locComment="" -->Optional public key associated with the strong name signature of the friend assembly.

            </a:documentation>
          </rng:data>
</rng:attribute>
</rng:optional>



  </rng:element>
</rng:define>

</rng:grammar>
