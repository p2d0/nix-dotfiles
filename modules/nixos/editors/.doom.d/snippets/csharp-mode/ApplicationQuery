# -*- mode: snippet -*-
# name: Application Query
# key: appquery
# --
public async Task<$1Dto> Get$1Async(int userId, int applicationId)
{
using (var connection = new NpgsqlConnection(_options.Value.SqlServerConnectionString))
{
await connection.OpenAsync();

const string query = @"
select app.id                                                      as Id,
app.type_id                                                 as TypeId,
app.code                                                    as Code,
app.status_id                                               as StatusId,
app.client                                                  as ClientCompanyName,
app.created_date_time                                       as CreatedAt,
app.term                                                    as Term,
app.amount                                                  as amount,
app.modified_date_time                                      as ModifiedAt,
app.internal_agent_id                                       as InternalAgentId,
app.initiator_email                                         as InitiatorEmail,
app.main_application_id                                     as MainApplicationId,
$3.$4                                                       as ${4:$(s-snake-case yas-text)},
(case when app.user_id = @userId then true else false end)  as IsAuthor

from applications                                                  as app
left join ${1:$(s-snake-case yas-text)}                               as $3 on app.id = $3.application_id
where app.id = @applicationId
";

var application = await connection.QuerySingleOrDefaultAsync<$1Dto>(query, new { applicationId, userId });

using (var multi = await connection.QueryMultipleAsync(QueryStrings.BankApplicationsForApplicationQuery, new { applicationId }))
{
application.BankApplications = multi.Read<ApplicationStatusInBankDto>().ToArray();
}

return application;
}
}
