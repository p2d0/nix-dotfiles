;; --- eww.yuck ---

(include "clock.yuck")

;; 1. Polling variable to get todos from Emacs
;; This runs the command every 5 minutes (300s) and stores the JSON output
(deflisten eww_todos :initial "[]" `./scripts/org.sh`)

(deflisten eww_totals :initial "{}" `./scripts/org-today.sh`)

;; 2. Widget to display a list of tasks for a given category
;; This widget is perfectly reusable and needs no changes.
(defwidget task_section [title tasks]
           ;; Only show this section if the task list is not empty
           (box :class "task-section"
                :orientation "v"
                :space-evenly false
                (label :class "section-title" :halign "start" :text title)
                (box :class "task-list" :orientation "v" :space-evenly false
                     ;; Loop through the tasks and create a row for each one
                     (for task in tasks
                          (box :class "task-item" :orientation "h" :space-evenly false
                               (label :class "task-bullet" :text "â€º")
                               (label :class "task-text" :halign "start" :wrap true :text task
                                      :wrap-mode "char"
                                      ))))))

(defwidget points []
           (box :class "points"
                :orientation "v" :space-evenly false
                (box :orientation "h" :space-evenly false
                     (label :class "points-label" :text "Median week points:" :halign "start")
                     (label :class "points-value" :text { eww_totals.median-points }
                            :halign "end" :hexpand true
                            ))
                (box :orientation "h" :space-evenly false
                     (label :class "points-label" :text "Week points:" :halign "start")
                     (label :class "points-value" :text { eww_totals.week-points }
                            :halign "end" :hexpand true
                            ))
                (box :orientation "h" :space-evenly false
                     (label :class "points-label" :text "Todays points:" :halign "start")
                     (label :class "points-value" :text { eww_totals.todays-points }
                            :halign "end" :hexpand true
                            ))
                ))
(defwidget exercise []
           (box :class "genwin exercises"
                :orientation "v" :space-evenly false
                (label :class "exercise-label" :text "HAND BALL POWER BALL EXERCISE" :halign "center")
                ))


;; 3. The main panel widget that combines all sections (MODIFIED)
(defwidget todo_panel []
           (box :orientation "v" :space-evenly false
                :valign "start"
                ;; (clock)
                (exercise)
                (points)
                (box :class "todo-panel" :orientation "v" :space-evenly false
                     (for kek in eww_todos
                          ;; For each entry, create a task_section widget.
                          ;; The title is the JSON key, and the tasks are the JSON value (array of strings).
                          ;; We also capitalize the category name for a nicer display.
                          (task_section :title { kek.key } :tasks {kek.value})))))

;; 4. The window definition
;; This makes the widget a persistent background panel
(defwindow todo_window
           :monitor 0
           :geometry (geometry :x "20px"
                               :y "50px"
                               :width "380px"
                               :height "90%"
                               )
           :stacking "bg"  ; 'bg' layer
           :layer "background" ; Put it on the background layer
           :focusable false
           :hexpand true
           :vexpand true
           (todo_panel))

(defwindow todo_window_2
           :monitor "DP-3"
           :geometry (geometry :x "2130px"
                               :y "50px"
                               :width "380px"
                               :height "90%"
                               )
           :stacking "bg"  ; 'bg' layer
           :layer "background" ; Put it on the background layer
           :focusable false
           :hexpand true
           :vexpand true
           (todo_panel))
