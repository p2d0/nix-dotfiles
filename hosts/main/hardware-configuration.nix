# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "ehci_pci" "ata_piix" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ "amdgpu" ];
  boot.kernelModules = [ "kvm-intel" "vfio-pci" ];
  boot.kernelParams = [ # "quiet" "vga=current" "udev.log_level=3" "rd.systemd.show_status=auto" "nowatchdog"
    "amdgpu.ppfeaturemask=0xffffffff"
    "usbhid.mousepoll=1"   "intel_iommu=on" "raid0.default_layout=2" "mitigations=off" ];
  boot.extraModulePackages = [ ];
  boot.loader.timeout = 1;
  services.fstrim.enable = lib.mkDefault true;
  # hardware.hidpi.enable = true;

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/66e90d46-d031-4e40-ad33-c3f156316c20";
      options = [ "noatime" ];
      fsType = "ext4";
    };

  # TODO fix permissions
  # https://superuser.com/questions/174776/modify-fstab-entry-so-all-users-can-read-and-write-to-an-ext4-volume
  fileSystems."/mnt/md127" =
    { device = "/dev/md127";
      options = [ "noatime" ];
      fsType = "ext4";
    };

  swapDevices = [
    {
      device = "/dev/disk/by-uuid/6245f513-526f-453d-b9ef-2c9870f48529";
      # size = 8*1024;
    }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = true;
  # networking.interfaces.enp3s0.useDHCP = true;
  networking.enableIPv6 = false;

  # hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
